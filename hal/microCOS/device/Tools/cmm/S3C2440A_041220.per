;===================================================================================
;                                                                       
;                                                                       
;                       삼성 244OA Register Description                                                                                              
;        
;
;                                                    2004 .12. 13                  
;                                                    MDS technology              
;                                                                       
;
;===================================================================================
;===================================================================================
;                          
;                              Release History  
;
;  Version    : 1.01
;  Date       : 2004-11-25  
;  P.D.       : lee sang chun
;  Infomation : Modify form 
;
;  Version    : 1.02
;  Date       : 2004-11-26                                             
;  P.D.       : lee sang chun                                           
;  Infomation : Add Registers
;
;  Version    : 1.03
;  Date       : 2004-11-27                                              
;  P.D.       : lee sang chun                                           
;  Infomation : Add Registers
;                 
;  Version    : 1.04
;  Date       : 2004-11-28      
;  P.D.       : lee sang chun    
;  Infomation : Add Registers                                   
;
;  Version    : 1.05
;  Date       : 2004-11-29    
;  P.D.       : lee sang chun  
;  Infomation : Add Registers
;
;  Version    : 1.06
;  Date       : 2004-12-01    
;  P.D.       : lee sang chun 
;  Infomation : Add Registers
;
;  Version    : 1.07
;  Date       : 2004-12-02    
;  P.D.       : lee sang chun         
;
;  Version    : 1.8
;  Date       : 2004-12-03    
;  P.D.       : lee sang chun 
;  Infomation : Add Registers
;
;  Version    : 1.9
;  Date       : 2004-12-04    
;  P.D.       : lee sang chun 
;  Infomation : Add Registers
;
;  Version    : 2.0
;  Date       : 2004-12-05    
;  P.D.       : lee sang chun 
;
;  Version    : 2.1
;  Date       : 2004-12-08    
;  P.D.       : lee sang chun 
;  Infomation : Modify & Merge
;                 
;
;===================================================================================
tree.open "삼성 2440A  Peripherals Browser Ver 2.0 "
;===================================================================================
;===================================================================================
; Peripheral File of S3C2440A(Samsung; ARM920T RISC processor)
;lee sang chun, 12. 2004


config 16. 8.
width 12.

tree "1 README"

base sd:0x0

group 0x0--0x0 "브라우저 사용 요령"
  textline "Write Registers  ->  XXXXXXXX 표시된 부분을 더블 클릭 하면 해당 Address 번지에 값을 바로 쓸 수(Write) 있습니다."                  
  textline "                    Write 전용 Register 이므로 그 값을 읽어 볼 수 는 없습니다."
  textline ""
  textline "Read  Registers  -> STATUS 부분에서는 해당 Register의 모든 bit 상태가(SET/CLEAR)표시됩니다. "
  textline "                    00000000 표시된 부분은 값 만 볼 수 있으며 해당 Address 번지에 접근 할 수 없습니다.                                "
  textline ""
  textline "R/W Register     -> STATUS란을 통해 모든 bit의 상태를 볼 수 있으며, Modify 를 통해 해당 Bit 상태를"
  textline "                    00000000 표시된 부분의 실제 값을 보면서 변경 할 수 있습니다. 또한 Write 레지스터와"
  textline "                    마찬가지로 00000000 표시된 부분을 더블클릭하면 해당 Address 번지에 값을 바로 쓸 수(Write) 있습니다."
  textline ""
  textline "1. 해당 비트 값을 한번 클릭하면 Description을 참조(풍선도움말 형식)할수 있으며 동시에 T32프로그램 최하단 창에서 확인할수 있습니다."
  textline "2. 해당 비트 값을 두번 클릭하면 값을 변경하거나 주소를 확인할수 있습니다."
  textline "3. 해당 값을 마우스 오른쪽 버튼으로 클릭하면 항목을 선택 할수있습니다."
  textline "4. 삼성 2440A DataSheet 를 참조하여 브라우저를 사용하시기 바랍니다."
  textline ""
                                                     
tree.end


tree "2 Memory Controller"
;begin include file s3c2410x/mc.ph
;parameters:
base  0x48000000

group 0x00++0x03
line.long 0x00 "BWSCON,Bus width & wait status control register"
bitfld.long 0x00 31. "  ST7 ,Determine SRAM for using UB/LB for bank 7" "no,yes"
bitfld.long 0x00 30. " WS7 ,Determine WAIT status for bank 7" "dis,ena"
bitfld.long 0x00 28.--29. " DW7 ,Determine data bus width for bank 7" "8-bit,16-bit,32-bit,res"
bitfld.long 0x00 27. " ST6 ,Determine SRAM for using UB/LB for bank 6" "no,yes"
bitfld.long 0x00 26. " WS6 ,Determine WAIT status for bank 6" "dis,ena"
bitfld.long 0x00 24.--25. " DW6 ,Determine data bus width for bank 6" "8-bit,16-bit,32-bit,res"
bitfld.long 0x00 23. " ST5 ,Determine SRAM for using UB/LB for bank 5" "no,yes"
bitfld.long 0x00 22. " WS5 ,Determine WAIT status for bank 5" "dis,ena"
bitfld.long 0x00 20.--21. " DW5 ,Determine data bus width for bank 5" "8-bit,16-bit,32-bit,res"
textline "                      "
bitfld.long 0x00 19. " ST4 ,Determine SRAM for using UB/LB for bank 4" "no,yes"
bitfld.long 0x00 18. " WS4 ,Determine WAIT status for bank 4" "dis,ena"
bitfld.long 0x00 16.--17. " DW4 ,Determine data bus width for bank 4" "8-bit,16-bit,32-bit,res"
bitfld.long 0x00 15. " ST3 ,Determine SRAM for using UB/LB for bank 3" "no,yes"
bitfld.long 0x00 14. " WS3 ,Determine WAIT status for bank 3" "dis,ena"
bitfld.long 0x00 12.--13. " DW3 ,Determine data bus width for bank 3" "8-bit,16-bit,32-bit,res"
bitfld.long 0x00 11. " ST2 ,Determine SRAM for using UB/LB for bank 2" "no,yes"
bitfld.long 0x00 10. " WS2 ,Determine WAIT status for bank 2" "dis,ena"
bitfld.long 0x00 08.--09. " DW2 ,Determine data bus width for bank 2" "8-bit,16-bit,32-bit,res"
textline "                      "
bitfld.long 0x00 07. " ST1 ,Determine SRAM for using UB/LB for bank 1" "no,yes"
bitfld.long 0x00 06. " WS1 ,Determine WAIT status for bank 1" "dis,ena"
bitfld.long 0x00 04.--05. " DW1 ,Determine data bus width for bank 1" "8-bit,16-bit,32-bit,res"
bitfld.long 0x00 01.--02. " DW0 ,Indicate data bus width for bank 0 (read only)" "-,16-bit,32-bit,-"
textline ""
textline ">BWSCON: Bus width & wait status control register"
textline "  ST   : Determine SRAM for using UB/LB for bank"
textline "  WS   : Determine WAIT status for bank"
textline "  DW   : Determine data bus width for bank"

group 0x04++0x17 "BANK CONTROL REGISTER(BANKCONN:nGCS0-nGCS5)"
line.long 0x00 "BANKCON0, R/W Bank 0 control register" 
bitfld.long 0x00 13.--14. "  Tacs ,Address set-up time before nGCSn" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x00 11.--12. " Tcos ,Chip selection set-up time before nOE" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x00 08.--10. " Tacc ,Access cycle" "1Clk,2Clk,3Clk,4Clk,6Clk,8Clk,10Clk,14Clk"
bitfld.long 0x00 06.--07. " Tcoh ,Chip selection hold time after nOE" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x00 04.--05. " Tcah ,Address hold time after nGCSn" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x00 02.--03. " Tacp ,Page mode access cycle at Page mode" "2Clk,3Clk,4Clk,6Clk"
bitfld.long 0x00 00.--01. " PMC ,Page mode configuration" "1Dat,4Dat,8Dat,16Dat"

line.long 0x04 "BANKCON1, R/W Bank 1 control register" 
bitfld.long 0x04 13.--14. "  Tacs ,Address set-up time before nGCSn" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x04 11.--12. " Tcos ,Chip selection set-up time before nOE" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x04 08.--10. " Tacc ,Access cycle" "1Clk,2Clk,3Clk,4Clk,6Clk,8Clk,10Clk,14Clk"
bitfld.long 0x04 06.--07. " Tcoh ,Chip selection hold time after nOE" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x04 04.--05. " Tcah ,Address hold time after nGCSn" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x04 02.--03. " Tacp ,Page mode access cycle at Page mode" "2Clk,3Clk,4Clk,6Clk"
bitfld.long 0x04 00.--01. " PMC ,Page mode configuration" "1Dat,4Dat,8Dat,16Dat"

line.long 0x08 "BANKCON2, R/W Bank 2 control register" 
bitfld.long 0x08 13.--14. "  Tacs ,Address set-up time before nGCSn" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x08 11.--12. " Tcos ,Chip selection set-up time before nOE" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x08 08.--10. " Tacc ,Access cycle" "1Clk,2Clk,3Clk,4Clk,6Clk,8Clk,10Clk,14Clk"
bitfld.long 0x08 06.--07. " Tcoh ,Chip selection hold time after nOE" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x08 04.--05. " Tcah ,Address hold time after nGCSn" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x08 02.--03. " Tacp ,Page mode access cycle at Page mode" "2Clk,3Clk,4Clk,6Clk"
bitfld.long 0x08 00.--01. " PMC ,Page mode configuration" "1Dat,4Dat,8Dat,16Dat"

line.long 0x0c "BANKCON3, R/W Bank 3 control register" 
bitfld.long 0x0c 13.--14. "  Tacs ,Address set-up time before nGCSn" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x0c 11.--12. " Tcos ,Chip selection set-up time before nOE" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x0c 08.--10. " Tacc ,Access cycle" "1Clk,2Clk,3Clk,4Clk,6Clk,8Clk,10Clk,14Clk"
bitfld.long 0x0c 06.--07. " Tcoh ,Chip selection hold time after nOE" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x0c 04.--05. " Tcah ,Address hold time after nGCSn" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x0c 02.--03. " Tacp ,Page mode access cycle at Page mode" "2Clk,3Clk,4Clk,6Clk"
bitfld.long 0x0c 00.--01. " PMC ,Page mode configuration" "1Dat,4Dat,8Dat,16Dat"

line.long 0x10 "BANKCON4, R/W Bank 4 control register" 
bitfld.long 0x10 13.--14. "  Tacs ,Address set-up time before nGCSn" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x10 11.--12. " Tcos ,Chip selection set-up time before nOE" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x10 08.--10. " Tacc ,Access cycle" "1Clk,2Clk,3Clk,4Clk,6Clk,8Clk,10Clk,14Clk"
bitfld.long 0x10 06.--07. " Tcoh ,Chip selection hold time after nOE" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x10 04.--05. " Tcah ,Address hold time after nGCSn" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x10 02.--03. " Tacp ,Page mode access cycle at Page mode" "2Clk,3Clk,4Clk,6Clk"
bitfld.long 0x10 00.--01. " PMC ,Page mode configuration" "1Dat,4Dat,8Dat,16Dat"

line.long 0x14 "BANKCON5, R/W Bank 5 control register"
bitfld.long 0x14 13.--14. "  Tacs ,Address set-up time before nGCSn" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x14 11.--12. " Tcos ,Chip selection set-up time before nOE" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x14 08.--10. " Tacc ,Access cycle" "1Clk,2Clk,3Clk,4Clk,6Clk,8Clk,10Clk,14Clk"
bitfld.long 0x14 06.--07. " Tcoh ,Chip selection hold time after nOE" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x14 04.--05. " Tcah ,Address hold time after nGCSn" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x14 02.--03. " Tacp ,Page mode access cycle at Page mode" "2Clk,3Clk,4Clk,6Clk"
bitfld.long 0x14 00.--01. " PMC ,Page mode configuration" "1Dat,4Dat,8Dat,16Dat"

textline ""
textline ">BANKCON: R/W Bank control register"
textline "  MT    : Determine the memory type for bank6 and bank"
textline "  Trcd  : RAS to CAS delay"
textline "  SCAN  : Column address number"
textline "  Tacs  : Address set-up time before nGCSn"
textline "  Tcos  : Chip selection set-up time before nOE"
textline "  Tacc  : Access cycle"
textline "  Tcoh  : Chip selection hold time after nOE"
textline "  Tcah  : Address hold time after nGCSn"
textline "  Tacp  : Page mode access cycle at Page mode"
textline "  PMC   : Page mode configuration"
textline ""


;if MT==00
if (d.l(asd:0x48000000+0x1c)&0x00018000)==0x00000000
group 0x1c++0x03
;"BANK CONTROL REGISTER (BANKCONn:nGCS6-nGCS7)"
line.long 0x00 "BANKCON6,Bank 6 control register"
bitfld.long 0x00 15.--16. "  MT ,Determine the memory type for bank6 and bank7" "ROM/SRAM,res,res,Sync_DRAM"
bitfld.long 0x00 13.--14. " Tacs ,Address set-up time before nGCS" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x00 11.--12. " Tcos ,Chip selection set-up time before nOE" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x00 08.--10. " Tacc ,Access cycle" "1Clk,2Clk,3Clk,4Clk,6Clk,8Clk,10Clk,14Clk"
bitfld.long 0x00 06.--07. " Tcoh ,Chip selection hold time after nOE" "0Clk,1Clk,2Clk,4Clk"       
bitfld.long 0x00 04.--05. " Tcah ,Address hold time after nGCSn" "0Clk,1Clk,2Clk,4Clk"            
bitfld.long 0x00 02.--03. " Tacp ,Page mode access cycle at Page mode" "2Clk,3Clk,4Clk,6Clk"      
bitfld.long 0x00 00.--01. " PMC ,Page mode configuration" "1Dat,4Dat,8Dat,16Dat"                  

;MT==11
elif (d.l(asd:0x48000000+0x1c)&0x00018000)==0x00018000
group 0x1c++0x03
;"BANK CONTROL REGISTER (BANKCONn:nGCS6-nGCS7)"
line.long 0x00 "BANKCON6,Bank 6 control register"
bitfld.long 0x00 15.--16. "  MT ,Determine the memory type for bank6 and bank7" "ROM/SRAM,res,res,Sync_DRAM"
bitfld.long 0x00 02.--03. "  Trcd ,RAS to CAS delay" "2Clk,3Clk,4Clk,-"
bitfld.long 0x00 00.--01. " SCAN ,Column address number" "8-bit,9-bit,10-bit,-"
endif

if (d.l(asd:0x48000000+0x20)&0x00018000)==0x00000000
group 0x20++0x03
; "BANK CONTROL REGISTER (BANKCONn:nGCS6-nGCS7)"
line.long 0x00 "BANKCON7,Bank 7 control register"
bitfld.long 0x00 15.--16. "  MT ,Determine the memory type for bank6 and bank7" "ROM/SRAM,res,res,Sync_DRAM"
bitfld.long 0x00 13.--14. " Tacs ,Address set-up time before nGCS" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x00 11.--12. " Tcos ,Chip selection set-up time before nOE" "0Clk,1Clk,2Clk,4Clk"
bitfld.long 0x00 08.--10. " Tacc ,Access cycle" "1Clk,2Clk,3Clk,4Clk,6Clk,8Clk,10Clk,14Clk"
bitfld.long 0x00 06.--07. " Tcoh ,Chip selection hold time after nOE" "0Clk,1Clk,2Clk,4Clk"       
bitfld.long 0x00 04.--05. " Tcah ,Address hold time after nGCSn" "0Clk,1Clk,2Clk,4Clk"            
bitfld.long 0x00 02.--03. " Tacp ,Page mode access cycle at Page mode" "2Clk,3Clk,4Clk,6Clk"      
bitfld.long 0x00 00.--01. " PMC ,Page mode configuration" "1Dat,4Dat,8Dat,16Dat"                  

;if MT==11
elif (d.l(asd:0x48000000+0x20)&0x00018000)==0x00018000 

group 0x20++0x03 
;"BANK CONTROL REGISTER (BANKCONn:nGCS6-nGCS7)"
line.long 0x00 "BANKCON7,Bank 7 control register"
bitfld.long 0x00 15.--16. "  MT ,Determine the memory type for bank6 and bank7" "ROM/SRAM,res,res,Sync_DRAM"
bitfld.long 0x00 02.--03. "  Trcd ,RAS to CAS delay" "2Clk,3Clk,4Clk,-"
bitfld.long 0x00 00.--01. " SCAN ,Column address number" "8-bit,9-bit,10-bit,-"
endif


group 0x24++0x03 "REFRESH CONTROL REGISTER"
line.long 0x00 "REFRESH,SDRAM refresh control register"
bitfld.long 0x00 23. "  REFEN ,SDRAM Refresh Enable" "dis,ena"
bitfld.long 0x00 22. " TREFMD ,SDRAM Refresh Mode" "auto,self"
bitfld.long 0x00 20.--21. " Trp ,SDRAM RAS pre-charge Time" "2Clk,3Clk,4Clk,-"
bitfld.long 0x00 18.--19. " Tsrc ,SDRAM Semi Row Cycle Time" "4Clk,5Clk,6Clk,7Clk"
hexmask.long 0x00 00.--10. 1. " RC ,SDRAM refresh count value"

textline ""
textline ">REFRESH: SDRAM refresh control register"
textline "  REFEN : SDRAM Refresh Enable"
textline "  TREFMD: SDRAM Refresh Mode"
textline "  Trp   : SDRAM RAS pre-charge Time"
textline "  Tsrc  : SDRAM Semi Row Cycle Time"
textline "  RC    : SDRAM refresh count value"
textline ""

group 0x28++0x03 "BANKSIZE REGISTER"
line.long 0x00 "BANKSIZE,Flexible bank size register"
bitfld.long 0x00 07. "  BURST_EN ,ARM core burst operation enable" "dis,ena"
bitfld.long 0x00 05. " SCKE_EN ,SDRAM power down mode enable control by SCKE" "dis,ena"
bitfld.long 0x00 04. " SCLK_EN ,SCLK is enabled only during SDRAM access cycle for reducing power consumption" "no,yes"
bitfld.long 0x00 00.--02. " BK76MAP ,BANK6/7 memory map" "32M/32M,64M/64M,128M/128M,-,2M/2M,4M/4M,8M/8M,16M/16M"
textline ""
textline ">BANKSIZE : Flexible bank size register"
textline "  BURST_EN: ARM core burst operation enable"
textline "  SCKE_EN : SDRAM power down mode enable control by SCKE"
textline "  SCLK_EN : SCLK is enabled only during SDRAM access cycle for reducing power consumption"
textline "  BK76MAP : BANK6/7 memory map"
textline ""
 
 
group 0x2c++0x07 "SDRAM MODE REGISTER SET REGISTER"
line.long 0x00 "MRSRB6,Mode register set register bank6"
bitfld.long 0x00 09. "  WBL ,Write burst length" "burst,res"
bitfld.long 0x00 07.--08. " TM ,Test mode" "MRS,res,res,res"
bitfld.long 0x00 04.--06. " CL ,CAS latency" "1Clk,res,2Clk,3Clk,res,res,res,res"
bitfld.long 0x00 03. " BT ,Burst type" "seq,res"
bitfld.long 0x00 00.--02. " BL ,Burst length" "1,res,res,res,res,res,res,res"

line.long 0x04 "MRSRB7,Mode register set register bank7"
bitfld.long 0x04 09. "  WBL ,Write burst length" "burst,res"
bitfld.long 0x04 07.--08. " TM ,Test mode" "MRS,res,res,res"
bitfld.long 0x04 04.--06. " CL ,CAS latency" "1Clk,res,2Clk,3Clk,res,res,res,res"
bitfld.long 0x04 03. " BT ,Burst type" "seq,res"
bitfld.long 0x04 00.--02. " BL ,Burst length" "1,res,res,res,res,res,res,res"
textline ""
textline ">MRSRB: Mode register set register bank"
textline "  WBL : Write burst length"
textline "  TM  : Test mode"
textline "  CL  : CAS latency"
textline "  BT  : Burst type"
textline "  BL  : Burst length"
textline ""

;end include file s3c2410x/mc.ph
tree.end

tree "3 NAND Flash Controller"
;begin include file s3c2410x/nand.ph
;parameters:
base  0x4E000000

group 0x00++0x03
line.long 0x00 "NFCONF,NAND Flash configuration"
bitfld.long 0x00 12.--13. " TACLS ,CLE & ALE duration setting value (0~3)" "0,1,2,3"
bitfld.long 0x00 08.--10. " TWRPH0 ,TWRPH0 duration setting value (0~7)" "0,1,2,3,4,5,6,7"
bitfld.long 0x00 04.--06. " TWRPH1 ,TWRPH1 duration setting value (0~7)" "0,1,2,3,4,5,6,7"
bitfld.long 0x00 03. " AdvFlash ,Advance NAND flash memory for auto-booting" "256/512,1024/2048"
bitfld.long 0x00 02. " PageSize ,NAND flash memory page size for auto-booting AdvFlash PageSize" "256/1024,512/2048"
bitfld.long 0x00 01. " AddrCycle ,NAND flash memory Address cycle for auto-booting AdvFlash AddrCycle" "3/4cycle,4/5cycle"
bitfld.long 0x00 00. " BusWidth ,NAND Flash Memory I/O bus width for auto-booting and general access." "8-bit,16-bit"
textline ""
textline ">NFCONF    : NAND Flash configuration"
textline "  TACLS    : CLE & ALE duration setting value (0~3)"
textline "  TWRPH0   : TWRPH0 duration setting value (0~7)"
textline "  TWRPH1   : TWRPH1 duration setting value (0~7)"
textline "  AdvFlash : Advance NAND flash memory for auto-booting"
textline "  PageSize : NAND flash memory page size for auto-booting AdvFlash PageSize"
textline "  AddrCycle: NAND flash memory Address cycle for auto-booting AdvFlash AddrCycle"
textline "  BusWidth : NAND Flash Memory I/O bus width for auto-booting and general access."
textline ""

group 0x04++0x03
line.long 0x00 "NFCONT,NAND flash control register"
bitfld.long 0x00 13. " Locktight  ,Lock-tight configuration" "Dis,Ena"
bitfld.long 0x00 12. " SoftLock    ,Soft Lock configuration" "Dis,Ena"
bitfld.long 0x00 10. " EnAINT   ,Illegal access interrupt control" "Dis,Ena"
bitfld.long 0x00 09. " EnbRnBT ,RnB status input signal transition interrupt control" "Dis,Ena"
bitfld.long 0x00 08. " RnB_TMd ,RnB transition detection configuration" "rising,falling"
bitfld.long 0x00 06. " SpECCLk ,Lock spare area ECC generation." "Unlock,Lock"
textline "                     "
bitfld.long 0x00 05. " MaECCLk ,Lock Main data area ECC generation" "Unlock,Lock"
bitfld.long 0x00 04. " InitECC ,Initialize ECC decoder/encoder(Write-only)" "decoder,encoder"
bitfld.long 0x00 01. " Reg_nCE ,NAND Flash Memory nFCE signal control" "Low,High"
bitfld.long 0x00 00. " MODE    ,NAND flash controller operating mode"  "Dis,Ena"
textline ""
textline ">NFCONT    : NAND flash control register"
textline "  Locktight: Lock-tight configuration"
textline "  SoftLock : Soft Lock configuration"
textline "  EnAINT   : Illegal access interrupt control"
textline "  EnbRnBT  : RnB status input signal transition interrupt control"
textline "  RnB_TMd  : RnB transition detection configuration"
textline "  SpECCLk  : Lock spare area ECC generation."
textline "  MaECCLk  : Lock Main data area ECC generation"
textline "  InitECC  : Initialize ECC decoder/encoder(Write-only)"
textline "  Reg_nCE  : NAND Flash Memory nFCE signal control"
textline "  MODE     : NAND flash controller operating mode"
textline ""

group 0x08++0x03 
line.long 0x00 "NFCMD,NAND flash command set register" 
hexmask.long 0x00 00.--07. 1. "  Command ,NAND Flash memory command value"

group 0x0c++0x03
line.long 0x00 "NFADDR,NAND flash address set register"
hexmask.long 0x00 00.--07. 1. "  Addr    ,NAND flash memory address value"

group 0x10++0x03
line.long 0x00 "NFDATA,NAND flash data register"
hexmask.long 0x00 00.--31. 1. "  Data    ,NAND Flash read/program data value"

textline ""
textline ">NFCMD   : NAND flash command set register"
textline "  Command: NAND Flash memory command value"
textline ">NFADDR  : NAND flash address set register"
textline "  Addr   : NAND flash memory address value"
textline ">NFDATA  : NAND flash data register"
textline "  Data   : NAND Flash read/program data value"
textline ""

group 0x14++0x07
line.long 0x00 "NFMECCD0,NAND Flash ECC 1st and 2nd register for main data read"
hexmask.long 0x00 24.--31. 1. " ECCData1_1 ,2nd ECC for I/O[15:8]"
hexmask.long 0x00 16.--23. 1. " ECCData1_0 ,2nd ECC for I/O[ 7:0]"
hexmask.long 0x00 08.--15. 1. " ECCData0_1 ,1st ECC for I/O[15:8]"
hexmask.long 0x00 00.--07. 1. " ECCData0_0 ,1st ECC for I/O[ 7:0]"

line.long 0x04 "NFMECCD1,NAND Flash ECC 3nd and 4th register for main data read"
hexmask.long 0x04 24.--31. 1. " ECCData3_1 ,4nd ECC for I/O[15:8]"
hexmask.long 0x04 16.--23. 1. " ECCData3_0 ,4nd ECC for I/O[ 7:0]"
hexmask.long 0x04 08.--15. 1. " ECCData2_1 ,3st ECC for I/O[15:8]"
hexmask.long 0x04 00.--07. 1. " ECCData2_0 ,3st ECC for I/O[ 7:0]"

textline ""
textline ">NFMECCD0   : NAND Flash ECC 1st and 2nd register for main data read"
textline "  ECCData1_1: 2nd ECC for I/O[15:8]"
textline "  ECCData1_0: 2nd ECC for I/O[ 7:0]"
textline "  ECCData0_1: 1st ECC for I/O[15:8]"
textline "  ECCData0_0: 1st ECC for I/O[ 7:0]"
textline ""
textline ">NFMECCD1   : NAND Flash ECC 3nd and 4th register for main data read"
textline "  ECCData3_1: 4nd ECC for I/O[15:8]"
textline "  ECCData3_0: 4nd ECC for I/O[ 7:0]"
textline "  ECCData2_1: 3st ECC for I/O[15:8]"
textline "  ECCData2_0: 3st ECC for I/O[ 7:0]"
textline ""

group 0x1c++0x03
line.long 0x00 "NFSECCD,NAND flash ECC (Error Correction Code) register for spare area data read"
hexmask.long 0x00 24.--31. 1. " ECCData1_1 ,2nd ECC for I/O[15:8]"
hexmask.long 0x00 16.--23. 1. " ECCData1_0 ,2nd ECC for I/O[ 7:0]"
hexmask.long 0x00 08.--15. 1. " ECCData0_1 ,1st ECC for I/O[15:8]"
hexmask.long 0x00 00.--07. 1. " ECCData0_0 ,1st ECC for I/O[ 7:0]"
textline ""
textline ">NFSECCD    : NAND flash ECC (Error Correction Code) register for spare area data read"
textline "  ECCData1_1: 2nd ECC for I/O[15:8]"
textline "  ECCData1_0: 2nd ECC for I/O[ 7:0]"
textline "  ECCData0_1: 1st ECC for I/O[15:8]"
textline "  ECCData0_0: 1st ECC for I/O[ 7:0]"
textline ""

group 0x20++0x03
line.long 0x00 "NFSTAT,NAND Flash operation status"
bitfld.long 0x00 03. "  llegalAcc ,Once Soft Lock or Lock-tight is enabled. The illegal access(program erase) to the memory makes this bit set." "not detected,detected"
bitfld.long 0x00 02. "  RnB_TD  ,When RnB low to high transition is occurred. this value set and issue interrupt if enabled. To clear this value write 1." "not detected,detected"
bitfld.long 0x00 01. "  nCE     ,The status of nCE output pin" "0,1"
bitfld.long 0x00 00. "  RnB     ,The status of RnB input pin." "busy,ready"
textline ""
textline ">NFSTAT    : NAND Flash operation status"
textline "  llegalAcc: Once Soft Lock or Lock-tight is enabled."
textline "  RnB_TD   : When RnB low to high transition is occurred."
textline "  nCE      : The status of nCE output pin"
textline "  RnB      : The status of RnB input pin."
textline ""

group 0x24++0x07
line.long 0x00 "NFESTAT0,NAND flash ECC Status register for I/O [7:0]"
hexmask.long 0x00 21.--24. 1. " SErDataNo  ,In spare area Indicates which number data is error"
hexmask.long 0x00 18.--20. 1. " SErBitNo  ,In spare area Indicates which bit is error"
hexmask.long 0x00 07.--17. 1. " MErDataNo ,In main data area Indicates which number data is error"
hexmask.long 0x00 04.--06. 1. " MErBitNo ,In main data area Indicates which bit is error"
textline "                     "
bitfld.long 0x00 02.--03. " SpareError ,Indicates whether spare area bit fail error occurred" "No Error,1-bit,Multi,ECC"
bitfld.long 0x00 00.--01. " MainError ,Indicates whether main data area bit fail error occurred" "No Error,1-bit,Multi,ECC"

line.long 0x04 "NFESTAT1,NAND flash ECC Status register for I/O [15:8]"
hexmask.long 0x04 21.--24. 1. " SErDataNo  ,In spare area Indicates which number data is error"
hexmask.long 0x04 18.--20. 1. " SErBitNo  ,In spare area Indicates which bit is error"
hexmask.long 0x04 07.--17. 1. " MErDataNo ,In main data area Indicates which number data is error"
hexmask.long 0x04 04.--06. 1. " MErBitNo ,In main data area Indicates which bit is error"
textline "                     "
bitfld.long 0x04 02.--03. " SpareError ,Indicates whether spare area bit fail error occurred" "No Error,1-bit,Multi,ECC"
bitfld.long 0x04 00.--01. " MainError ,Indicates whether main data area bit fail error occurred" "No Error,1-bit,Multi,ECC"
textline ""
textline ">NFESTAT    : NAND flash ECC Status register for I/O"
textline "  SErDataNo : In spare area Indicates which number data is error"
textline "  SErBitNo  : In spare area Indicates which bit is error"
textline "  MErDataNo : In main data area Indicates which number data is error"
textline "  MErBitNo  : In main data area Indicates which bit is error"
textline "  SpareError: Indicates whether spare area bit fail error occurred"
textline "  MainError : Indicates whether main data area bit fail error occurred"
textline ""

group 0x2c++0x07
line.long 0x00 "NFMECC0,NAND flash ECC register for data[7:0]"
hexmask.long 0x00 24.--31. 1. " MECC0_3 ,ECC3 for data[7:0]"
hexmask.long 0x00 16.--23. 1. " MECC0_2 ,ECC2 for data[7:0]"
hexmask.long 0x00 08.--15. 1. " MECC0_1 ,ECC1 for data[7:0]"
hexmask.long 0x00 00.--07. 1. " MECC0_0 ,ECC0 for data[7:0]"

line.long 0x04 "NFMECC1,NAND flash ECC register for data[15:8]"
hexmask.long 0x04 24.--31. 1. " MECC1_3 ,ECC3 data[15:8]"
hexmask.long 0x04 16.--23. 1. " MECC1_2 ,ECC2 data[15:8]"
hexmask.long 0x04 08.--15. 1. " MECC1_1 ,ECC1 data[15:8]"
hexmask.long 0x04 00.--07. 1. " MECC1_0 ,ECC0 data[15:8]"
textline ""
textline ">NFMECC : NAND flash ECC register for data"
textline "  MECC_3: ECC3 data[15:0]"
textline "  MECC_2: ECC2 data[15:0]"
textline "  MECC_1: ECC1 data[15:0]"
textline "  MECC_0: ECC0 data"
textline ""

group 0x34++0x03
line.long 0x00 "NFSECC,NAND flash ECC register for I/O [15:0]"
hexmask.long 0x00 24.--31. 1. " SECC1_1 ,Spare area ECC1 status for I/O[15:8]"
hexmask.long 0x00 16.--23. 1. " SECC1_0 ,Spare area ECC0 status for I/O[15:8]"
hexmask.long 0x00 08.--15. 1. " SECC0_1 ,Spare area ECC1 status for I/O[7:0]"
hexmask.long 0x00 00.--07. 1. " SECC0_0 ,Spare area ECC0 status for I/O[7:0]"
textline ""
textline ">NFSECC  : NAND flash ECC register for I/O"
textline "  SECC1_1: Spare area ECC1 status for I/O[15:8]"
textline "  SECC1_0: Spare area ECC0 status for I/O[15:8]"
textline "  SECC0_1: Spare area ECC1 status for I/O[7:0]"
textline "  SECC0_0: Spare area ECC0 status for I/O[7:0]"
textline ""

group 0x38++0x07
line.long 0x00 "NFSBLK,NAND flash programmable start block address"
hexmask.long 0x00 16.--23. 1. " SBLK_AR2 ,The 3nd block address of the block erase operation"
hexmask.long 0x00 08.--15. 1. " SBLK_AR1 ,The 2nd block address of the block erase operation"
hexmask.long 0x00 00.--07. 1. " SBLK_AR0 ,The 1nd block address of the block erase operation"

line.long 0x04 "NFEBLK,NAND flash programmable end block address"
hexmask.long 0x04 16.--23. 1. " SBLK_AR2 ,The 3nd block address of the block erase operation"
hexmask.long 0x04 08.--15. 1. " SBLK_AR1 ,The 2nd block address of the block erase operation"
hexmask.long 0x04 00.--07. 1. " SBLK_AR0 ,The 1nd block address of the block erase operation"
textline ""
textline ">NFBLK    : NAND flash programmable start/end block address"
textline "  SBLK_AR2: The 3nd block address of the block erase operation"
textline "  SBLK_AR1: The 2nd block address of the block erase operation"
textline "  SBLK_AR0: The 1nd block address of the block erase operation"
textline ""

;end include file s3c2410x/nand.ph
tree.end


tree "4 Clock & Power Management"
;begin include file s3c2410x/cpm.ph
;parameters:
base  0x4C000000

group 0x00++0x03
line.long 0x00 "LOCKTIME,PLL lock time count register"
hexmask.long 0x00 12.--23. 1. "  U_LTIME ,UPLL lock time count value for UCLK"
hexmask.long 0x00 00.--11. 1. " M_LTIME ,MPLL lock time count value for FCLK, HCLK, and PCLK"
textline ""
textline ">LOCKTIME: PLL lock time count register"
textline "  U_LTIME: UPLL lock time count value for UCLK"
textline "  M_LTIME: MPLL lock time count value for FCLK"
textline ""


group 0x04++0x03 "MPLL/UPLL configuration register"
line.long 0x00 "MPLLCON,MPLL configuration register"
hexmask.long 0x00 12.--19. 1. "  MDIV    ,Main divider control"
hexmask.long 0x00 04.--09. 1. " PDIV ,Pre-divider control"
bitfld.long 0x00 00.--01. " SDIV ,Post divider control" "00,01,10,11"

group 0x08++0x03
line.long 0x00 "UPLLCON,UPLL configuration register"
hexmask.long 0x00 12.--19. 1. "  MDIV    ,Main divider control"
hexmask.long 0x00 04.--09. 1. " PDIV ,Pre-divider control"
bitfld.long 0x00 00.--01. " SDIV ,Post divider control" "00,01,10,11"
textline ""
textline ">PLLCON: MPLL/UPLL configuration register"
textline "  MDIV : Main divider control"
textline "  PDIV : Pre-divider control"
textline ""

group 0x0c++0x03 "CLOCK CONTROL REGISTER"
line.long 0x00 "CLKCON,Clock generator control register"
bitfld.long 0x00 20. "  AC97    ,Control PCLK into AC97 block." "dis,ena"
bitfld.long 0x00 19. " Camera ,Control HCLK into Camera block." "dis,ena"
bitfld.long 0x00 18. " SPI     ,Control PCLK into SPI block" "dis,ena"
bitfld.long 0x00 17. " IIS ,Control PCLK into IIS block" "dis,ena"
bitfld.long 0x00 16. " IIC      ,Control PCLK into IIC block" "dis,ena"
bitfld.long 0x00 15. " ADC     ,ADC(&Touch Screen)--Control PCLK into ADC block" "dis,ena"
bitfld.long 0x00 14. " RTC      ,Control PCLK into RTC control block" "dis,ena"
bitfld.long 0x00 13. " GPIO ,Control PCLK into GPIO block" "dis,ena"
textline "                      "
bitfld.long 0x00 12. " UART2   ,Control PCLK into UART2 block" "dis,ena"
bitfld.long 0x00 11. " UART1  ,Control PCLK into UART1 block" "dis,ena"
bitfld.long 0x00 10. " UART0   ,Control PCLK into UART0 block" "dis,ena"
bitfld.long 0x00 09. " SDI ,Control PCLK into SDI interface block" "dis,ena"
bitfld.long 0x00 08. " PWMTIMER ,Control PCLK into PWMTIMER block" "dis,ena"
bitfld.long 0x00 07. " USB_DEV ,Control PCLK into USB device block" "dis,ena"
bitfld.long 0x00 06. " USB_host ,Control HCLK into USB host block" "dis,ena"
bitfld.long 0x00 05. " LCDC ,Control HCLK into LCDC block" "dis,ena"
textline "                      "
bitfld.long 0x00 04. " NAND_FC ,NAND Flash Controller-Control HCLK into NAND Flash Controller block" "dis,ena"
bitfld.long 0x00 03. " SLEEP  ,Control SLEEP mode of S3C2440A." "dis,ena"
bitfld.long 0x00 02. " IDLEBIT ,IDLE BIT-Enter IDLE mode" "dis,ena"
textline ""
textline ">CLKCON   : Clock generator control register"
textline "  AC97    : Control PCLK into AC97 block."
textline "  Camera  : Control HCLK into Camera block."
textline "  SPI     : Control PCLK into SPI block"
textline "  IIS     : Control PCLK into IIS block"
textline "  ADC     : ADC(&Touch Screen)--Control PCLK into ADC block"
textline "  RTC     : Control PCLK into RTC control block"
textline "  GPIO    : Control PCLK into GPIO block"
textline "  UART2   : Control PCLK into UART2 block"
textline "  UART1   : Control PCLK into UART1 block"
textline "  UART0   : Control PCLK into UART0 block"
textline "  SDI     : Control PCLK into SDI interface block"
textline "  PWMTIMER: Control PCLK into PWMTIMER block"
textline "  USB_DEV : Control PCLK into USB device block"
textline "  USB_host: Control HCLK into USB host block"
textline "  LCDC    : Control HCLK into LCDC block"
textline "  NAND_FC : NAND Flash Controller-Control HCLK into NAND Flash Controller block"
textline "  SLEEP   : Control SLEEP mode of S3C2440A."
textline "  IDLEBIT : IDLE BIT-Enter IDLE mode"
textline ""


group 0x10++0x03 
line.long 0x00 "CLKSLOW,Slow clock control register"
bitfld.long 0x00 07. "  UCLK_ON ,UCLK ON/OFF" "on,off"
bitfld.long 0x00 05. " MPLL_OFF ,PLL is turned on/off" "on,off"
bitfld.long 0x00 04. " SLOW_BIT ,FCLK = Mpll (MPLL output) or SLOW mode" "Mpll,SLOW"
bitfld.long 0x00 00.--02. " SLOW_VAL ,The divider value for the slow clock when SLOW_BIT is on" "0,1,2,3,4,5,6,7"
textline ""
textline ">CLKSLOW  : Slow clock control register"
textline "  UCLK_ON : UCLK ON/OFF"
textline "  MPLL_OFF: PLL is turned on/off"
textline "  SLOW_BIT: FCLK = Mpll (MPLL output) or SLOW mode"
textline "  SLOW_VAL: The divider value for the slow clock when SLOW_BIT is on"
textline ""

group 0x14++0x03
line.long 0x00 "CLKDIVN,Clock divider control register"
bitfld.long 0x00 03. "  DIVN_UPLL ,UCLK select register(UCLK must be 48MHz for USB)" "UPLL clk,UPLL clk/2"
bitfld.long 0x00 01.--02. "  HDIVN ,HCLK setting" "FCLK/1,FCLK/2,FCLK/4,FCLK/3"
bitfld.long 0x00 00. " PDIVN ,PCLK setting" "HCLK/1,HCLK/2"
textline ""
textline ">CLKDIVN   : Clock divider control register"
textline "  DIVN_UPLL: UCLK select register(UCLK must be 48MHz for USB)"
textline "  HDIVN    : HCLK setting"
textline "  PDIVN    : PCLK setting"
textline ""


group 0x18++0x03
line.long 0x00 "CAMDIVN,Camera clock divider register"
bitfld.long 0x00 12. "  DVS_EN ,ARM core will run" "DVS OFF,DVS ON"
bitfld.long 0x00 09. "  HCLK4_HALF ,HDIVN division rate change bit when CLKDIVN[2:1]=10b." "FCLK/4,FCLK/8"
bitfld.long 0x00 08. " HCLK3_HALF ,HDIVN division rate change bit when CLKDIVN[2:1]=11b." "FCLK/3,FCLK/6"
bitfld.long 0x00 04. " CAMCLK_SEL ,Use CAMCLK with UPLL output (CAMCLK=UPLL output)./CAMCLK is divided by CAMCLK_DIV value." "0,1"
hexmask.long 0x00 00.--03. 01. " CAMCLK_DIV ,CAMCLK divide factor setting register(0-15)." 
textline ""
textline ">CAMDIVN    : Camera clock divider register"
textline "  DVS_EN    : ARM core will run"
textline "  HCLK4_HALF: HDIVN division rate change bit when CLKDIVN[2:1]=10b."
textline "  HCLK3_HALF: HDIVN division rate change bit when CLKDIVN[2:1]=11b."
textline "  CAMCLK_SEL: Use CAMCLK with UPLL output (CAMCLK=UPLL output)./CAMCLK is divided by CAMCLK_DIV value."
textline "  CAMCLK_DIV: CAMCLK divide factor setting register(0-15)."
textline ""
;end include file s3c2410x/cpm.ph
tree.end

tree "5 DMA"

tree "5.1 Channel 0"
base 0x4B000000
group 0x00++0x23
 line.long 0x00 "DISRC0,DMA 0 initial source register"

 line.long 0x04 "DISRCC0,DMA 0 initial source control register"
 bitfld.long 0x04 01. "  LOC          ,select the location of source" "AHB,APB"
 bitfld.long 0x04 00. " INC     ,select the address increment" "inc,fix"
 
 line.long 0x08 "DIDST0,DMA 0 initial destination register"
 line.long 0x0c "DIDSTC0,DMA 0 initial destination control register"
 bitfld.long 0x0c 02. "  CHK_INT        ,Select interrupt occurrence time when auto reload is setting: 0 = Interrupt will occur when TC reaches 0/ 1 = Interrupt will occur after auto reload is performed." "0,1"
 bitfld.long 0x0c 01. " LOC     ,select the location of destination" "AHB,APB"
 bitfld.long 0x0c 00. " INC ,select the address increment" "inc,fix"
 textline ""
 textline ">DISRC0 : DMA initial source register"
 textline ">DISRCC0: DMA initial source control register"
 textline "  LOC   : select the location of source"
 textline "  INC   : select the address increment"
 textline ""
 textline ">DIDST0 : DMA 0 initial destination register"
 textline ">DIDSTC0: DMA initial destination control register"
 textline "  CHKINT: Select interrupt occurrence time when auto reload is setting"
 textline "  LOC   : select the location of destination"
 textline "  INC   : select the address increment"
 textline ""

 if "0"=="0"
 group 0x00++0x23
 line.long 0x10 "DCON0,DMA 0 control register"
 bitfld.long 0x10 31. "  DMD_HS ,Select one between Demand mode and Handshake mode" "demand,handshake"
 bitfld.long 0x10 30. " SYNC   ,Select DREQ/DACK synchronization" "PCLK,HCLK"
 bitfld.long 0x10 29. " INT    ,Enable/Disable the interrupt setting for CURR_TC (terminal count)" "dis,ena"
 bitfld.long 0x10 28. " TSZ ,Select the transfer size of an atomic transfer" "unit,burst"
 bitfld.long 0x10 27. " SERVMODE ,Select the service mode between Single service mode and Whole service mode" "sglSrv,wholeSrv"
 textline "                      "
 bitfld.long 0x10 24.--26. " HWSRCSEL ,Select DMA request source for each DMA" "nXDREQ0,UART0,SDI,Timer,USB-EP1,res,res,res"
 
 bitfld.long 0x10 23. " SWHW_SEL ,Select the DMA source between software (S/W request mode) and hardware (H/W request mode)" "SW,HW"
 bitfld.long 0x10 22. " RELOAD ,Set the reload on/off option" "on,off"
 bitfld.long 0x10 20.--21. " DSZ ,Data size to be transferred" "byte,HlfWD,Word,res"
 hexmask.long 0x10 00.--19. 1. " TC     ,Initial transfer count (or transfer beat)"
 textline ""
 textline ">DCON0    : DMA 0 control register"
 textline "  DMD_HS  : Select one between Demand mode and Handshake mode"
 textline "  SYNC    : Select DREQ/DACK synchronization"
 textline "  INT     : Enable/Disable the interrupt setting for CURR_TC (terminal count)"
 textline "  TSZ     : Select the transfer size of an atomic transfer"
 textline "  SERVMODE: Select the service mode between Single service mode and Whole service mode"
 textline "  HWSRCSEL: Select DMA request source for each DMA"
 textline ""

 elif "0"=="1"
 group 0x00++0x23
 line.long 0x10 "DCON0,DMA 0 control register"
 bitfld.long 0x10 31. "  DMD_HS ,Select one between Demand mode and Handshake mode" "demand,handshake"
 bitfld.long 0x10 30. " SYNC   ,Select DREQ/DACK synchronization" "PCLK,HCLK"
 bitfld.long 0x10 29. " INT    ,Enable/Disable the interrupt setting for CURR_TC (terminal count)" "dis,ena"
 bitfld.long 0x10 28. " TSZ ,Select the transfer size of an atomic transfer" "unit,burst"
 bitfld.long 0x10 27. " SERVMODE ,Select the service mode between Single service mode and Whole service mode" "sglSrv,wholeSrv"
 textline "                    "
 bitfld.long 0x10 24.--26. " HWSRCSEL ,Select DMA request source for each DMA" "nXDREQ1,UART1,I2SSDI,SPI,USB-EP2,res,res,res"

 bitfld.long 0x10 23. " SWHW_SEL ,Select the DMA source between software (S/W request mode) and hardware (H/W request mode)" "SW,HW"
 bitfld.long 0x10 22. " RELOAD ,Set the reload on/off option" "on,off"
 bitfld.long 0x10 20.--21. " DSZ ,Data size to be transferred" "byte,HlfWD,Word,res"
 hexmask.long 0x10 00.--19. 1. " TC ,Initial transfer count (or transfer beat)"
  
 elif "0"=="2"
 group 0x00++0x23
 line.long 0x10 "DCON0,DMA 0 control register"
 bitfld.long 0x10 31. "  DMD_HS ,Select one between Demand mode and Handshake mode" "demand,handshake"
 bitfld.long 0x10 30. " SYNC   ,Select DREQ/DACK synchronization" "PCLK,HCLK"
 bitfld.long 0x10 29. " INT    ,Enable/Disable the interrupt setting for CURR_TC (terminal count)" "dis,ena"
 bitfld.long 0x10 28. " TSZ ,Select the transfer size of an atomic transfer" "unit,burst"
 bitfld.long 0x10 27. " SERVMODE ,Select the service mode between Single service mode and Whole service mode" "sglSrv,wholeSrv"
 textline "                    "
 bitfld.long 0x10 24.--26. " HWSRCSEL ,Select DMA request source for each DMA" "I2SSDO,I2SSDI,SDI,Timer,USB-EP3,res,res,res"

 bitfld.long 0x10 23. " SWHW_SEL ,Select the DMA source between software (S/W request mode) and hardware (H/W request mode)" "SW,HW"
 bitfld.long 0x10 22. " RELOAD ,Set the reload on/off option" "on,off"
 bitfld.long 0x10 20.--21. " DSZ ,Data size to be transferred" "byte,HlfWD,Word,res"
 hexmask.long 0x10 00.--19. 1. " TC ,Initial transfer count (or transfer beat)"

 elif "0"=="3"
 group 0x00++0x23
 line.long 0x10 "DCON0,DMA 0 control register"
 bitfld.long 0x10 31. "  DMD_HS ,Select one between Demand mode and Handshake mode" "demand,handshake"
 bitfld.long 0x10 30. " SYNC   ,Select DREQ/DACK synchronization" "PCLK,HCLK"
 bitfld.long 0x10 29. " INT    ,Enable/Disable the interrupt setting for CURR_TC (terminal count)" "dis,ena"
 bitfld.long 0x10 28. " TSZ ,Select the transfer size of an atomic transfer" "unit,burst"
 bitfld.long 0x10 27. " SERVMODE ,Select the service mode between Single service mode and Whole service mode" "sglSrv,wholeSrv"
 textline "                    "
 bitfld.long 0x10 24.--26. " HWSRCSEL ,Select DMA request source for each DMA" "UART2,SDI,SPI,Timer,USB-EP4,res,res,res"
  
 bitfld.long 0x10 23. " SWHW_SEL ,Select the DMA source between software (S/W request mode) and hardware (H/W request mode)" "SW,HW"
 bitfld.long 0x10 22. " RELOAD ,Set the reload on/off option" "on,off"
 bitfld.long 0x10 20.--21. " DSZ ,Data size to be transferred" "byte,HlfWD,Word,res"
 hexmask.long 0x10 00.--19. 1. " TC ,Initial transfer count (or transfer beat)"
   
 endif
 textline ""
 
group 0x00++0x23 
 line.long 0x14 "DSTAT0,DMA 0 count register"
  bitfld.long 0x14 20.--21. "  STAT ,Status of this DMA controller" "rdy,busy,-,-"
  hexmask.long 0x14 00.--19. 1. " CURR_TC ,Current value of transfer count"
  
 line.long 0x18 "DCSRC0,DMA 0 current Source Register"
 line.long 0x1c "DCDST0,DMA 0 current destination register"
  
 line.long 0x20 "DMASKTRIG0,DMA 0 mask trigger register"
 bitfld.long 0x20 02. "  STOP ,Stop the DMA operation" "-,stop"
 bitfld.long 0x20 01. " ON_OFF       ,DMA channel on/off bit" "off,on"
 bitfld.long 0x20 00. " SW_TRIG ,Trigger the DMA channel in S/W request mode" "-,req"
 textline ""
 textline ">DSTAT0    : DMA 0 count register"
 textline "  STAT     : Status of this DMA controller"
 textline "  CURR_TC  : Current value of transfer count"
 textline ""
 textline ">DSTAT0    : DMA 0 current Source Register"
 textline ">DCSRC0    : DMA 0 current destination register"
 textline ""
 textline ">DMASKTRIG0: DMA 0 mask trigger register"
 textline "  STOP     : Stop the DMA operation"
 textline "  ON_OFF   : DMA channel on/off bit"
 textline "  SW_TRIG  : Trigger the DMA channel in S/W request mode"
 textline ""
 textline "NOTE: You can freely change the values of DISRC register DIDST registers and TC field of DCON register. Those changes"
 textline "      take effect only after the finish of current transfer (i.e. when CURR_TC becomes 0). On the other hand any change" 
 textline "      made to other registers and/or fields takes immediate effect. Therefore be careful in changing those registers and"
 textline "      fields."
 

tree.end



tree "5.2 Channel 1"
base 0x4B000040
group 0x00++0x23
 line.long 0x00 "DISRC1,DMA 1 initial source register"
 line.long 0x04 "DISRCC1,DMA 1 initial source control register"
 bitfld.long 0x04 01. "  LOC          ,select the location of source" "AHB,APB"
 bitfld.long 0x04 00. "   INC          ,select the address increment" "inc,fix"

 line.long 0x08 "DIDST1,DMA 1 initial destination register"
 line.long 0x0c "DIDSTC1,DMA 1 initial destination control register"
 bitfld.long 0x0c 02. "  CHK_INT        ,Select interrupt occurrence time when auto reload is setting: 0 = Interrupt will occur when TC reaches 0/ 1 = Interrupt will occur after auto reload is performed." "0,1"
 bitfld.long 0x0c 01. "   LOC          ,select the location of destination" "AHB,APB"
 bitfld.long 0x0c 00. "   INC    ,select the address increment" "inc,fix"

 if "1"=="0"
 group 0x00++0x23
 line.long 0x10 "DCON1,DMA 1 control register"
 bitfld.long 0x10 31. "  DMD_HS ,Select one between Demand mode and Handshake mode" "demand,handshake"
 bitfld.long 0x10 30. "   SYNC        ,Select DREQ/DACK synchronization" "PCLK,HCLK"
 bitfld.long 0x10 29. "   INT       ,Enable/Disable the interrupt setting for CURR_TC (terminal count)" "dis,ena"
 bitfld.long 0x10 28. " TSZ ,Select the transfer size of an atomic transfer" "unit,burst"
 bitfld.long 0x10 27. " SERVMODE ,Select the service mode between Single service mode and Whole service mode" "sglSrv,wholeSrv"
 textline "                    "
 bitfld.long 0x10 24.--26. " HWSRCSEL ,Select DMA request source for each DMA" "nXDREQ0,UART0,SDI,Timer,USB-EP1,res,res,res"
 
 bitfld.long 0x10 23. "   SWHW_SEL      ,Select the DMA source between software (S/W request mode) and hardware (H/W request mode)" "SW,HW"
 bitfld.long 0x10 22. "   RELOAD ,Set the reload on/off option" "on,off"
 bitfld.long 0x10 20.--21. " DSZ ,Data size to be transferred" "byte,HlfWD,Word,res"
 hexmask.long 0x10 00.--19. 1. " TC     ,Initial transfer count (or transfer beat)"

 elif "1"=="1"
 group 0x00++0x23
 line.long 0x10 "DCON1,DMA 1 control register"
 bitfld.long 0x10 31. "  DMD_HS ,Select one between Demand mode and Handshake mode" "demand,handshake"
 bitfld.long 0x10 30. "   SYNC        ,Select DREQ/DACK synchronization" "PCLK,HCLK"
 bitfld.long 0x10 29. "   INT    ,Enable/Disable the interrupt setting for CURR_TC (terminal count)" "dis,ena"
 bitfld.long 0x10 28. " TSZ ,Select the transfer size of an atomic transfer" "unit,burst"
 bitfld.long 0x10 27. " SERVMODE ,Select the service mode between Single service mode and Whole service mode" "sglSrv,wholeSrv"
 textline "                      "
 bitfld.long 0x10 24.--26. " HWSRCSEL ,Select DMA request source for each DMA" "nXDREQ1,UART1,I2SSDI,SPI,USB-EP2,res,res,res"

 bitfld.long 0x10 23. "   SWHW_SEL      ,Select the DMA source between software (S/W request mode) and hardware (H/W request mode)" "SW,HW"
 bitfld.long 0x10 22. "   RELOAD ,Set the reload on/off option" "on,off"
 bitfld.long 0x10 20.--21. " DSZ ,Data size to be transferred" "byte,HlfWD,Word,res"
 hexmask.long 0x10 00.--19. 1. " TC     ,Initial transfer count (or transfer beat)"
  
 elif "1"=="2"
 group 0x00++0x23
 line.long 0x10 "DCON1,DMA 1 control register"
 bitfld.long 0x10 31. "  DMD_HS ,Select one between Demand mode and Handshake mode" "demand,handshake"
 bitfld.long 0x10 30. "   SYNC        ,Select DREQ/DACK synchronization" "PCLK,HCLK"
 bitfld.long 0x10 29. "   INT    ,Enable/Disable the interrupt setting for CURR_TC (terminal count)" "dis,ena"
 bitfld.long 0x10 28. " TSZ ,Select the transfer size of an atomic transfer" "unit,burst"
 bitfld.long 0x10 27. " SERVMODE ,Select the service mode between Single service mode and Whole service mode" "sglSrv,wholeSrv"
 textline "                      "
 bitfld.long 0x10 24.--26. " HWSRCSEL ,Select DMA request source for each DMA" "I2SSDO,I2SSDI,SDI,Timer,USB-EP3,res,res,res"

 bitfld.long 0x10 23. "   SWHW_SEL      ,Select the DMA source between software (S/W request mode) and hardware (H/W request mode)" "SW,HW"
 bitfld.long 0x10 22. "   RELOAD ,Set the reload on/off option" "on,off"
 bitfld.long 0x10 20.--21. " DSZ ,Data size to be transferred" "byte,HlfWD,Word,res"
 hexmask.long 0x10 00.--19. 1. " TC     ,Initial transfer count (or transfer beat)"

 elif "1"=="3"
 group 0x00++0x23
 line.long 0x10 "DCON1,DMA 1 control register"
 bitfld.long 0x10 31. "  DMD_HS ,Select one between Demand mode and Handshake mode" "demand,handshake"
 bitfld.long 0x10 30. "   SYNC        ,Select DREQ/DACK synchronization" "PCLK,HCLK"
 bitfld.long 0x10 29. "   INT    ,Enable/Disable the interrupt setting for CURR_TC (terminal count)" "dis,ena"
 bitfld.long 0x10 28. " TSZ ,Select the transfer size of an atomic transfer" "unit,burst"
 bitfld.long 0x10 27. " SERVMODE ,Select the service mode between Single service mode and Whole service mode" "sglSrv,wholeSrv"
 textline "                      "
 bitfld.long 0x10 24.--26. " HWSRCSEL ,Select DMA request source for each DMA" "UART2,SDI,SPI,Timer,USB-EP4,res,res,res"
  
 bitfld.long 0x10 23. "   SWHW_SEL      ,Select the DMA source between software (S/W request mode) and hardware (H/W request mode)" "SW,HW"
 bitfld.long 0x10 22. "   RELOAD ,Set the reload on/off option" "on,off"
 bitfld.long 0x10 20.--21. " DSZ ,Data size to be transferred" "byte,HlfWD,Word,res"
 hexmask.long 0x10 00.--19. 1. " TC     ,Initial transfer count (or transfer beat)"
   
 endif
 

group 0x00++0x23 
 line.long 0x14 "DSTAT1,DMA 1 count register"
  bitfld.long 0x14 20.--21. "  STAT        ,Status of this DMA controller" "rdy,busy,-,-"
  hexmask.long 0x14 00.--19. 1. "   CURR_TC ,Current value of transfer count"

line.long 0x18 "DCSRC1,DMA 1 current Source Register"
line.long 0x1c "DCDST1,DMA 1 current destination register"
line.long 0x20 "DMASKTRIG1,DMA 1 mask trigger register"
 bitfld.long 0x20 02. "  STOP        ,Stop the DMA operation" "-,stop"
 bitfld.long 0x20 01. "   ON_OFF       ,DMA channel on/off bit" "off,on"
 bitfld.long 0x20 00. "   SW_TRIG,Trigger the DMA channel in S/W request mode" "-,req"

tree.end




tree "5.3 Channel 2"
base 0x4B000080
group 0x00++0x23
 line.long 0x00 "DISRC2,DMA 2 initial source register"
 line.long 0x04 "DISRCC2,DMA 2 initial source control register"
 bitfld.long 0x04 01. "  LOC          ,select the location of source" "AHB,APB"
 bitfld.long 0x04 00. "   INC          ,select the address increment" "inc,fix"

 line.long 0x08 "DIDST2,DMA 2 initial destination register"
 line.long 0x0c "DIDSTC2,DMA 2 initial destination control register"
 bitfld.long 0x0c 02. "  CHK_INT        ,Select interrupt occurrence time when auto reload is setting: 0 = Interrupt will occur when TC reaches 0/ 1 = Interrupt will occur after auto reload is performed." "0,1"
 bitfld.long 0x0c 01. "   LOC          ,select the location of destination" "AHB,APB"
 bitfld.long 0x0c 00. "   INC    ,select the address increment" "inc,fix"

 if "2"=="0"
 group 0x00++0x23
 line.long 0x10 "DCON2,DMA 2 control register"
 bitfld.long 0x10 31. "  DMD_HS ,Select one between Demand mode and Handshake mode" "demand,handshake"
 bitfld.long 0x10 30. "   SYNC        ,Select DREQ/DACK synchronization" "PCLK,HCLK"
 bitfld.long 0x10 29. "   INT       ,Enable/Disable the interrupt setting for CURR_TC (terminal count)" "dis,ena"
 bitfld.long 0x10 28. " TSZ ,Select the transfer size of an atomic transfer" "unit,burst"
 bitfld.long 0x10 27. " SERVMODE ,Select the service mode between Single service mode and Whole service mode" "sglSrv,wholeSrv"
 textline "                      "
 bitfld.long 0x10 24.--26. " HWSRCSEL ,Select DMA request source for each DMA" "nXDREQ0,UART0,SDI,Timer,USB-EP1,res,res,res"
 
 bitfld.long 0x10 23. "   SWHW_SEL      ,Select the DMA source between software (S/W request mode) and hardware (H/W request mode)" "SW,HW"
 bitfld.long 0x10 22. "   RELOAD ,Set the reload on/off option" "on,off"
 bitfld.long 0x10 20.--21. " DSZ ,Data size to be transferred" "byte,HlfWD,Word,res"
 hexmask.long 0x10 00.--19. 1. " TC     ,Initial transfer count (or transfer beat)"

 elif "2"=="1"
 group 0x00++0x23
 line.long 0x10 "DCON2,DMA 2 control register"
 bitfld.long 0x10 31. "  DMD_HS ,Select one between Demand mode and Handshake mode" "demand,handshake"
 bitfld.long 0x10 30. "   SYNC        ,Select DREQ/DACK synchronization" "PCLK,HCLK"
 bitfld.long 0x10 29. "   INT    ,Enable/Disable the interrupt setting for CURR_TC (terminal count)" "dis,ena"
 bitfld.long 0x10 28. " TSZ ,Select the transfer size of an atomic transfer" "unit,burst"
 bitfld.long 0x10 27. " SERVMODE ,Select the service mode between Single service mode and Whole service mode" "sglSrv,wholeSrv"
 textline "                      "
 bitfld.long 0x10 24.--26. " HWSRCSEL ,Select DMA request source for each DMA" "nXDREQ1,UART1,I2SSDI,SPI,USB-EP2,res,res,res"

 bitfld.long 0x10 23. "   SWHW_SEL      ,Select the DMA source between software (S/W request mode) and hardware (H/W request mode)" "SW,HW"
 bitfld.long 0x10 22. "   RELOAD ,Set the reload on/off option" "on,off"
 bitfld.long 0x10 20.--21. " DSZ ,Data size to be transferred" "byte,HlfWD,Word,res"
 hexmask.long 0x10 00.--19. 1. " TC     ,Initial transfer count (or transfer beat)"
  
 elif "2"=="2"
 group 0x00++0x23
 line.long 0x10 "DCON2,DMA 2 control register"
 bitfld.long 0x10 31. "  DMD_HS ,Select one between Demand mode and Handshake mode" "demand,handshake"
 bitfld.long 0x10 30. "   SYNC        ,Select DREQ/DACK synchronization" "PCLK,HCLK"
 bitfld.long 0x10 29. "   INT    ,Enable/Disable the interrupt setting for CURR_TC (terminal count)" "dis,ena"
 bitfld.long 0x10 28. " TSZ ,Select the transfer size of an atomic transfer" "unit,burst"
 bitfld.long 0x10 27. " SERVMODE ,Select the service mode between Single service mode and Whole service mode" "sglSrv,wholeSrv"
 textline "                      "
 bitfld.long 0x10 24.--26. " HWSRCSEL ,Select DMA request source for each DMA" "I2SSDO,I2SSDI,SDI,Timer,USB-EP3,res,res,res"

 bitfld.long 0x10 23. "   SWHW_SEL      ,Select the DMA source between software (S/W request mode) and hardware (H/W request mode)" "SW,HW"
 bitfld.long 0x10 22. "   RELOAD ,Set the reload on/off option" "on,off"
 bitfld.long 0x10 20.--21. " DSZ ,Data size to be transferred" "byte,HlfWD,Word,res"
 hexmask.long 0x10 00.--19. 1. " TC     ,Initial transfer count (or transfer beat)"

 elif "2"=="3"
 group 0x00++0x23
 line.long 0x10 "DCON2,DMA 2 control register"
 bitfld.long 0x10 31. "  DMD_HS ,Select one between Demand mode and Handshake mode" "demand,handshake"
 bitfld.long 0x10 30. "   SYNC        ,Select DREQ/DACK synchronization" "PCLK,HCLK"
 bitfld.long 0x10 29. "   INT    ,Enable/Disable the interrupt setting for CURR_TC (terminal count)" "dis,ena"
 bitfld.long 0x10 28. " TSZ ,Select the transfer size of an atomic transfer" "unit,burst"
 bitfld.long 0x10 27. " SERVMODE ,Select the service mode between Single service mode and Whole service mode" "sglSrv,wholeSrv"
 textline "                      "
 bitfld.long 0x10 24.--26. " HWSRCSEL ,Select DMA request source for each DMA" "UART2,SDI,SPI,Timer,USB-EP4,res,res,res"
  
 bitfld.long 0x10 23. "   SWHW_SEL      ,Select the DMA source between software (S/W request mode) and hardware (H/W request mode)" "SW,HW"
 bitfld.long 0x10 22. "   RELOAD ,Set the reload on/off option" "on,off"
 bitfld.long 0x10 20.--21. " DSZ ,Data size to be transferred" "byte,HlfWD,Word,res"
 hexmask.long 0x10 00.--19. 1. " TC     ,Initial transfer count (or transfer beat)"
   
 endif
 

group 0x00++0x23 
 line.long 0x14 "DSTAT2,DMA 2 count register"
  bitfld.long 0x14 20.--21. "  STAT        ,Status of this DMA controller" "rdy,busy,-,-"
  hexmask.long 0x14 00.--19. 1. "   CURR_TC ,Current value of transfer count"

line.long 0x18 "DCSRC2,DMA 2 current Source Register"
line.long 0x1c "DCDST2,DMA 2 current destination register"
line.long 0x20 "DMASKTRIG2,DMA 2 mask trigger register"
 bitfld.long 0x20 02. "  STOP        ,Stop the DMA operation" "-,stop"
 bitfld.long 0x20 01. "   ON_OFF       ,DMA channel on/off bit" "off,on"
 bitfld.long 0x20 00. "   SW_TRIG,Trigger the DMA channel in S/W request mode" "-,req"

tree.end

tree "5.4 Channel 3"
base 0x4B0000c0
group 0x00++0x23
 line.long 0x00 "DISRC3,DMA 3 initial source register"
 line.long 0x04 "DISRCC3,DMA 3 initial source control register"
 bitfld.long 0x04 01. "  LOC          ,select the location of source" "AHB,APB"
 bitfld.long 0x04 00. "   INC          ,select the address increment" "inc,fix"

 line.long 0x08 "DIDST3,DMA 3 initial destination register"
 line.long 0x0c "DIDSTC3,DMA 3 initial destination control register"
 bitfld.long 0x0c 02. "  CHK_INT        ,Select interrupt occurrence time when auto reload is setting: 0 = Interrupt will occur when TC reaches 0/ 1 = Interrupt will occur after auto reload is performed." "0,1"
 bitfld.long 0x0c 01. "   LOC          ,select the location of destination" "AHB,APB"
 bitfld.long 0x0c 00. "   INC    ,select the address increment" "inc,fix"

 if "3"=="0"
 group 0x00++0x23
 line.long 0x10 "DCON3,DMA 3 control register"
 bitfld.long 0x10 31. "  DMD_HS ,Select one between Demand mode and Handshake mode" "demand,handshake"
 bitfld.long 0x10 30. "   SYNC        ,Select DREQ/DACK synchronization" "PCLK,HCLK"
 bitfld.long 0x10 29. "   INT       ,Enable/Disable the interrupt setting for CURR_TC (terminal count)" "dis,ena"
 bitfld.long 0x10 28. " TSZ ,Select the transfer size of an atomic transfer" "unit,burst"
 bitfld.long 0x10 27. " SERVMODE ,Select the service mode between Single service mode and Whole service mode" "sglSrv,wholeSrv"
 textline "                      "
 bitfld.long 0x10 24.--26. " HWSRCSEL ,Select DMA request source for each DMA" "nXDREQ0,UART0,SDI,Timer,USB-EP1,res,res,res"
 
 bitfld.long 0x10 23. "   SWHW_SEL      ,Select the DMA source between software (S/W request mode) and hardware (H/W request mode)" "SW,HW"
 bitfld.long 0x10 22. "   RELOAD ,Set the reload on/off option" "on,off"
 bitfld.long 0x10 20.--21. " DSZ ,Data size to be transferred" "byte,HlfWD,Word,res"
 hexmask.long 0x10 00.--19. 1. " TC     ,Initial transfer count (or transfer beat)"

 elif "3"=="1"
 group 0x00++0x23
 line.long 0x10 "DCON3,DMA 3 control register"
 bitfld.long 0x10 31. "  DMD_HS ,Select one between Demand mode and Handshake mode" "demand,handshake"
 bitfld.long 0x10 30. "   SYNC        ,Select DREQ/DACK synchronization" "PCLK,HCLK"
 bitfld.long 0x10 29. "   INT    ,Enable/Disable the interrupt setting for CURR_TC (terminal count)" "dis,ena"
 bitfld.long 0x10 28. " TSZ ,Select the transfer size of an atomic transfer" "unit,burst"
 bitfld.long 0x10 27. " SERVMODE ,Select the service mode between Single service mode and Whole service mode" "sglSrv,wholeSrv"
 textline "                      "
 bitfld.long 0x10 24.--26. " HWSRCSEL ,Select DMA request source for each DMA" "nXDREQ1,UART1,I2SSDI,SPI,USB-EP2,res,res,res"

 bitfld.long 0x10 23. "   SWHW_SEL      ,Select the DMA source between software (S/W request mode) and hardware (H/W request mode)" "SW,HW"
 bitfld.long 0x10 22. "   RELOAD ,Set the reload on/off option" "on,off"
 bitfld.long 0x10 20.--21. " DSZ ,Data size to be transferred" "byte,HlfWD,Word,res"
 hexmask.long 0x10 00.--19. 1. " TC     ,Initial transfer count (or transfer beat)"
  
 elif "3"=="2"
 group 0x00++0x23
 line.long 0x10 "DCON3,DMA 3 control register"
 bitfld.long 0x10 31. "  DMD_HS ,Select one between Demand mode and Handshake mode" "demand,handshake"
 bitfld.long 0x10 30. "   SYNC        ,Select DREQ/DACK synchronization" "PCLK,HCLK"
 bitfld.long 0x10 29. "   INT    ,Enable/Disable the interrupt setting for CURR_TC (terminal count)" "dis,ena"
 bitfld.long 0x10 28. " TSZ ,Select the transfer size of an atomic transfer" "unit,burst"
 bitfld.long 0x10 27. " SERVMODE ,Select the service mode between Single service mode and Whole service mode" "sglSrv,wholeSrv"
 textline "                      "
 bitfld.long 0x10 24.--26. " HWSRCSEL ,Select DMA request source for each DMA" "I2SSDO,I2SSDI,SDI,Timer,USB-EP3,res,res,res"

 bitfld.long 0x10 23. "   SWHW_SEL      ,Select the DMA source between software (S/W request mode) and hardware (H/W request mode)" "SW,HW"
 bitfld.long 0x10 22. "   RELOAD ,Set the reload on/off option" "on,off"
 bitfld.long 0x10 20.--21. " DSZ ,Data size to be transferred" "byte,HlfWD,Word,res"
 hexmask.long 0x10 00.--19. 1. " TC     ,Initial transfer count (or transfer beat)"

 elif "3"=="3"
 group 0x00++0x23
 line.long 0x10 "DCON3,DMA 3 control register"
 bitfld.long 0x10 31. "  DMD_HS ,Select one between Demand mode and Handshake mode" "demand,handshake"
 bitfld.long 0x10 30. "   SYNC        ,Select DREQ/DACK synchronization" "PCLK,HCLK"
 bitfld.long 0x10 29. "   INT    ,Enable/Disable the interrupt setting for CURR_TC (terminal count)" "dis,ena"
 bitfld.long 0x10 28. " TSZ ,Select the transfer size of an atomic transfer" "unit,burst"
 bitfld.long 0x10 27. " SERVMODE ,Select the service mode between Single service mode and Whole service mode" "sglSrv,wholeSrv"
 textline "                      "
 bitfld.long 0x10 24.--26. " HWSRCSEL ,Select DMA request source for each DMA" "UART2,SDI,SPI,Timer,USB-EP4,res,res,res"
  
 bitfld.long 0x10 23. "   SWHW_SEL      ,Select the DMA source between software (S/W request mode) and hardware (H/W request mode)" "SW,HW"
 bitfld.long 0x10 22. "   RELOAD ,Set the reload on/off option" "on,off"
 bitfld.long 0x10 20.--21. " DSZ ,Data size to be transferred" "byte,HlfWD,Word,res"
 hexmask.long 0x10 00.--19. 1. " TC     ,Initial transfer count (or transfer beat)"
   
 endif
 

group 0x00++0x23 
 line.long 0x14 "DSTAT3,DMA 3 count register"
  bitfld.long 0x14 20.--21. "  STAT        ,Status of this DMA controller" "rdy,busy,-,-"
  hexmask.long 0x14 00.--19. 1. "   CURR_TC ,Current value of transfer count"

line.long 0x18 "DCSRC3,DMA 3 current Source Register"
line.long 0x1c "DCDST3,DMA 3 current destination register"
line.long 0x20 "DMASKTRIG3,DMA 3 mask trigger register"
 bitfld.long 0x20 02. "  STOP        ,Stop the DMA operation" "-,stop"
 bitfld.long 0x20 01. "   ON_OFF       ,DMA channel on/off bit" "off,on"
 bitfld.long 0x20 00. "   SW_TRIG,Trigger the DMA channel in S/W request mode" "-,req"

tree.end
tree.end

tree "6 I/O Ports"
;begin include file s3c2410x/gpio.ph
;parameters:

base 0x56000000

group 0x00++0x07 "PORT A CONTROL REGISTERS"
 line.long 0x00 "GPACON,Configure the pins of port A"
  bitfld.long 0x00 22. "  GPA22 ," "out,nFCE   "             
  bitfld.long 0x00 21. " GPA21 ," "out,nRSTOUT"           
  bitfld.long 0x00 20. " GPA20 ," "out,nFRE   "            
  bitfld.long 0x00 19. " GPA19 ," "out,nFWE   "            
  bitfld.long 0x00 18. " GPA18 ," "out,ALE    "            
  bitfld.long 0x00 17. " GPA17 ," "out,CLE    "            
  textline "                      "
  bitfld.long 0x00 16. " GPA16 ," "out,nGCS5  "            
  bitfld.long 0x00 15. " GPA15 ," "out,nGCS4  "            
  bitfld.long 0x00 14. " GPA14 ," "out,nGCS3  "            
  bitfld.long 0x00 13. " GPA13 ," "out,nGCS2  "            
  bitfld.long 0x00 12. " GPA12 ," "out,nGCS1  "            
  bitfld.long 0x00 11. " GPA11 ," "out,ADDR26 "            
  textline "                      "
  bitfld.long 0x00 10. " GPA10 ," "out,ADDR25 "            
  bitfld.long 0x00 9.  " GPA9  ,"  "out,ADDR24 "            
  bitfld.long 0x00 8.  " GPA8  ,"  "out,ADDR23 "            
  bitfld.long 0x00 7.  " GPA7  ,"  "out,ADDR22 "            
  bitfld.long 0x00 6.  " GPA6  ,"  "out,ADDR21 "            
  bitfld.long 0x00 5.  " GPA5  ,"  "out,ADDR20 "            
  textline "                      "
  bitfld.long 0x00 4.  " GPA4  ,"  "out,ADDR19 "            
  bitfld.long 0x00 3.  " GPA3  ,"  "out,ADDR18 "            
  bitfld.long 0x00 2.  " GPA2  ,"  "out,ADDR17 "            
  bitfld.long 0x00 1.  " GPA1  ,"  "out,ADDR16 "            
  bitfld.long 0x00 0.  " GPA0  ," "out,ADDR0   "             
  
                    
 line.long 0x04 "GPADAT,The data register for port A"
  hexmask.long 0x04 00.--24. 1. "  GPA   ,When port configured as output pin is same as corresponding bit/when port configured as functional pin undefined value will be read"
  textline ""
  textline ">GPACON: Configure the pins of port A"
  textline ">GPADAT: The data register for port A"
  textline "  GPA  : When port configured as output pin is same as corresponding bit"
  textline "         When port configured as functional pin undefined value will be read"

group 0x10++0x0B "PORT B CONTROL REGISTERS"
 line.long 0x00 "GPBCON,Configure the pins of port B"
  bitfld.long 0x00 20.--21. "  GPB10 ," "Input,Output,nXDREQ0,res"
  bitfld.long 0x00 18.--19. " GPB9 ," "Input,Output,nXDACK0,res" 
  bitfld.long 0x00 16.--17. " GPB8 ," "Input,Output,nXDREQ1,res" 
  bitfld.long 0x00 14.--15. " GPB7 ," "Input,Output,nXDACK1,res" 
  bitfld.long 0x00 12.--13. " GPB6 ," "Input,Output,nXBREQ,res"
  bitfld.long 0x00 10.--11. " GPB5 ," "Input,Output,nXBACK,res"
  textline "                      "
  bitfld.long 0x00 08.--09. " GPB4  ," "Input,Output,TCLK0,res" 
  bitfld.long 0x00 06.--07. "  GPB3 ," "Input,Output,TOUT3,res" 
  bitfld.long 0x00 04.--05. "  GPB2 ," "Input,Output,TOUT2,res" 
  bitfld.long 0x00 02.--03. "  GPB1 ," "Input,Output,TOUT1,res" 
  bitfld.long 0x00 00.--01. "  GPB0 ," "Input,Output,TOUT0,res" 
  
 line.long 0x04 "GPBDAT,The data register for port B"
  hexmask.long 0x04 00.--10. 1. "  GPB   ,port data"
   
 line.long 0x08 "GPBUP,Pull-up disable register for port B"
  bitfld.long 0x08 10. "  GPB10 ," "ena,dis"
  bitfld.long 0x08 09. "  GPB09 ," "ena,dis"
  bitfld.long 0x08 08. "  GPB08 ," "ena,dis"
  bitfld.long 0x08 07. "  GPB07 ," "ena,dis"
  bitfld.long 0x08 06. "  GPB06 ," "ena,dis"
  bitfld.long 0x08 05. "  GPB05 ," "ena,dis"
  textline "                      "
  bitfld.long 0x08 04. " GPB04 ," "ena,dis"
  bitfld.long 0x08 03. "  GPB03 ," "ena,dis"
  bitfld.long 0x08 02. "  GPB02 ," "ena,dis"
  bitfld.long 0x08 01. "  GPB01 ," "ena,dis"
  bitfld.long 0x08 00. "  GPB00 ," "ena,dis"
  textline ""
  textline ">GPBCON: Configure the pins of port B"
  textline ">GPBDAT: The data register for port B"
  textline ">GPBUP : Pull-up disable register for port B"

group 0x20++0x0B "PORT C CONTROL REGISTERS"
 line.long 0x00 "GPCCON,Configure the pins of port C"
  bitfld.long 0x00 30.--31. "  GPC15 ," "Input,Output,VD[7],res"
  bitfld.long 0x00 28.--29. " GPC14 ," "Input,Output,VD[6],res"
  bitfld.long 0x00 26.--27. " GPC13 ," "Input,Output,VD[5],res"
  bitfld.long 0x00 24.--25. " GPC12 ," "Input,Output,VD[4],res"
  bitfld.long 0x00 22.--23. " GPC11 ," "Input,Output,VD[3],res"
  bitfld.long 0x00 20.--21. " GPC10 ," "Input,Output,VD[2],res"
  textline "                      "
  bitfld.long 0x00 18.--19. " GPC09 ," "Input,Output,VD[1],res"
  bitfld.long 0x00 16.--17. " GPC08 ," "Input,Output,VD[0],res"
  bitfld.long 0x00 14.--15. " GPC07 ," "Input,Output,LCDVF2,res"
  bitfld.long 0x00 12.--13. " GPC06 ," "Input,Output,LCDVF1,res"
  bitfld.long 0x00 10.--11. " GPC05 ," "Input,Output,LCDVF0,res"
  bitfld.long 0x00 08.--09. " GPC04 ," "Input,Output,VM 11,res"
  textline "                      "
  bitfld.long 0x00 06.--07. " GPC03 ," "Input,Output,VFRAME,res"
  bitfld.long 0x00 04.--05. " GPC02 ," "Input,Output,VLINE,res"
  bitfld.long 0x00 02.--03. " GPC01 ," "Input,Output,VCLK,res"
  bitfld.long 0x00 00.--01. " GPC00 ," "Input,Output,LEND,res"

 line.long 0x04 "GPCDAT,The data register for port C"
  hexmask.long 0x04 00.--15. 1. "  GPC   ,port data"
  
 line.long 0x08 "GPCUP,Pull-up disable register for port C"
  bitfld.long 0x08 15. "  GPC15 ," "ena,dis"
  bitfld.long 0x08 14. "  GPC14 ," "ena,dis"
  bitfld.long 0x08 13. "  GPC13 ," "ena,dis"
  bitfld.long 0x08 12. "  GPC12 ," "ena,dis"
  bitfld.long 0x08 11. "  GPC11 ," "ena,dis"
  bitfld.long 0x08 10. "  GPC10 ," "ena,dis"
  bitfld.long 0x08 09. "  GPC09 ," "ena,dis"
  bitfld.long 0x08 08. "  GPC08 ," "ena,dis"
  textline "                      "
  bitfld.long 0x08 07. " GPC07 ," "ena,dis"
  bitfld.long 0x08 06. "  GPC06 ," "ena,dis"
  bitfld.long 0x08 05. "  GPC05 ," "ena,dis"
  bitfld.long 0x08 04. "  GPC04 ," "ena,dis"
  bitfld.long 0x08 03. "  GPC03 ," "ena,dis"
  bitfld.long 0x08 02. "  GPC02 ," "ena,dis"
  bitfld.long 0x08 01. "  GPC01 ," "ena,dis"
  bitfld.long 0x08 00. "  GPC00 ," "ena,dis"
  textline ""
  textline ">GPCCON: Configure the pins of port C"
  textline ">GPCDAT: The data register for port C"
  textline ">GPCUP : Pull-up disable register for port C"

group 0x30++0x0B "PORT D CONTROL REGISTERS"
 line.long 0x00 "GPDCON,Configure the pins of port D"
  bitfld.long 0x00 30.--31. "  GPD15 ," "Input,Output,VD23,nSS0"
  bitfld.long 0x00 28.--29. " GPD14 ," "Input,Output,VD22,nSS1"
  bitfld.long 0x00 26.--27. " GPD13 ," "Input,Output,VD21,res"
  bitfld.long 0x00 24.--25. " GPD12 ," "Input,Output,VD20,res"
  bitfld.long 0x00 22.--23. " GPD11 ," "Input,Output,VD19,res"
  bitfld.long 0x00 20.--21. " GPD10 ," "Input,Output,VD18,res"
  textline "                      "
  bitfld.long 0x00 18.--19. " GPD09 ," "Input,Output,VD17,res"
  bitfld.long 0x00 16.--17. " GPD08 ," "Input,Output,VD16,res"
  bitfld.long 0x00 14.--15. " GPD07 ," "Input,Output,VD15,res"
  bitfld.long 0x00 12.--13. " GPD06 ," "Input,Output,VD14,res"
  bitfld.long 0x00 10.--11. " GPD05 ," "Input,Output,VD13,res"
  bitfld.long 0x00 08.--09. " GPD04 ," "Input,Output,VD12,res"
  textline "                      "
  bitfld.long 0x00 06.--07. " GPD03 ," "Input,Output,VD11,res"
  bitfld.long 0x00 04.--05. " GPD02 ," "Input,Output,VD10,res"
  bitfld.long 0x00 02.--03. " GPD01 ," "Input,Output,VD9 ,res"
  bitfld.long 0x00 00.--01. " GPD00 ," "Input,Output,VD8 ,res"

 line.long 0x04 "GPDDAT,The data register for port D"
  hexmask.long 0x04 00.--15. 1. "  GPD   ,port data"
 
 line.long 0x08 "GPDUP,Pull-up disable register for port D"
  bitfld.long 0x08 15. "  GPC15 ," "ena,dis"
  bitfld.long 0x08 14. "  GPC14 ," "ena,dis"
  bitfld.long 0x08 13. "  GPC13 ," "ena,dis"
  bitfld.long 0x08 12. "  GPC12 ," "ena,dis"
  bitfld.long 0x08 11. "  GPC11 ," "ena,dis"
  bitfld.long 0x08 10. "  GPC10 ," "ena,dis"
  bitfld.long 0x08 09. "  GPC09 ," "ena,dis"
  bitfld.long 0x08 08. "  GPC08 ," "ena,dis"
  textline "                      "
  bitfld.long 0x08 07. " GPC07 ," "ena,dis"
  bitfld.long 0x08 06. "  GPC06 ," "ena,dis"
  bitfld.long 0x08 05. "  GPC05 ," "ena,dis"
  bitfld.long 0x08 04. "  GPC04 ," "ena,dis"
  bitfld.long 0x08 03. "  GPC03 ," "ena,dis"
  bitfld.long 0x08 02. "  GPC02 ," "ena,dis"
  bitfld.long 0x08 01. "  GPC01 ," "ena,dis"
  bitfld.long 0x08 00. "  GPC00 ," "ena,dis"
  textline ""
  textline ">GPDCON: Configure the pins of port D"
  textline ">GPDDAT: The data register for port D"
  textline ">GPDUP : Pull-up disable register for port D"

group 0x40++0x0B "PORT E CONTROL REGISTERS"
 line.long 0x00 "GPECON,Configure the pins of port E"
  bitfld.long 0x00 30.--31. "  GPE15 ," "Input,Output,IICSDA,res"                      
  bitfld.long 0x00 28.--29. " GPE14 ," "Input,Output,IICSCL,res"
  bitfld.long 0x00 26.--27. " GPE13 ," "Input,Output,SPICLK0,res" 
  bitfld.long 0x00 24.--25. " GPE12 ," "Input,Output,SPIMOSI0,res"
  bitfld.long 0x00 22.--23. " GPE11 ," "Input,Output,SPIMISO0,res"
  bitfld.long 0x00 20.--21. " GPE10 ," "Input,Output,SDDAT3,res" 
  textline "                      "
  bitfld.long 0x00 18.--19. " GPE09 ," "Input,Output,SDDAT2,res2"
  bitfld.long 0x00 16.--17. " GPE08 ," "Input,Output,SDDAT1,res"
  bitfld.long 0x00 14.--15. " GPE07  ," "Input,Output,SDDAT0,res"
  bitfld.long 0x00 12.--13. " GPE06   ," "Input,Output,SDCMD,res"
  bitfld.long 0x00 10.--11. " GPE05   ," "Input,Output,SDCLK,res"
  bitfld.long 0x00 08.--09. " GPE04 ," "Input,Output,I2SSDO,res"
  textline "                      "
  bitfld.long 0x00 06.--07. " GPE03 ," "Input,Output,I2SSDI,res"
  bitfld.long 0x00 04.--05. " GPE02 ," "Input,Output,CDCLK,res"
  bitfld.long 0x00 02.--03. " GPE01 ," "Input,Output,I2SSCLK,res" 
  bitfld.long 0x00 00.--01. " GPE00    ," "Input,Output,I2SLRCK,res" 

 line.long 0x04 "GPEDAT,The data register for port E"
  hexmask.long 0x04 00.--13. 1. "  GPE   ,port data"
  
 line.long 0x08 "GPEUP,pull-up disable register for port E"
  bitfld.long 0x08 15. "  GPE15 ," "ena,dis"
  bitfld.long 0x08 14. "  GPE14 ," "ena,dis"
  bitfld.long 0x08 13. "  GPE13 ," "ena,dis"
  bitfld.long 0x08 12. "  GPE12 ," "ena,dis"
  bitfld.long 0x08 11. "  GPE11 ," "ena,dis"
  bitfld.long 0x08 10. "  GPE10 ," "ena,dis"
  bitfld.long 0x08 09. "  GPE09 ," "ena,dis"
  bitfld.long 0x08 08. "  GPE08 ," "ena,dis"
  textline "                      "
  bitfld.long 0x08 07. " GPE07 ," "ena,dis"
  bitfld.long 0x08 06. "  GPE06 ," "ena,dis"
  bitfld.long 0x08 05. "  GPE05 ," "ena,dis"
  bitfld.long 0x08 04. "  GPE04 ," "ena,dis"
  bitfld.long 0x08 03. "  GPE03 ," "ena,dis"
  bitfld.long 0x08 02. "  GPE02 ," "ena,dis"
  bitfld.long 0x08 01. "  GPE01 ," "ena,dis"
  bitfld.long 0x08 00. "  GPE00 ," "ena,dis"
  textline ""
  textline ">GPECON: Configure the pins of port E"
  textline ">GPEDAT: The data register for port E"
  textline ">GPEUP : Pull-up disable register for port E"


group 0x50++0x0B "PORT F CONTROL REGISTERS"
 line.long 0x00 "GPFCON,Configure the pins of port F"
  bitfld.long 0x00 14.--15. "  GPF07 ," "Input,Output,EINT7,res"
  bitfld.long 0x00 12.--13. " GPF06 ," "Input,Output,EINT6,res"
  bitfld.long 0x00 10.--11. " GPF05 ," "Input,Output,EINT5,res"
  bitfld.long 0x00 08.--09. " GPF04 ," "Input,Output,EINT4,res"
  textline "                      "
  bitfld.long 0x00 06.--07. " GPF03 ," "Input,Output,EINT3,res"
  bitfld.long 0x00 04.--05. " GPF02 ," "Input,Output,EINT2,res"
  bitfld.long 0x00 02.--03. " GPF01 ," "Input,Output,EINT1,res"
  bitfld.long 0x00 00.--01. " GPF00 ," "Input,Output,EINT0,res"

 line.long 0x04 "GPFDAT,The data register for port F"
  hexmask.long 0x04 00.--07. 1. "  GPF   ,port data"
  
 line.long 0x08 "GPFUP,Pull-up disable register for port F"
  bitfld.long 0x08 07. "  GPF07 ," "ena,dis"
  bitfld.long 0x08 06. "  GPF06 ," "ena,dis"
  bitfld.long 0x08 05. "  GPF05 ," "ena,dis"
  bitfld.long 0x08 04. "  GPF04 ," "ena,dis"
  textline "                      "
  bitfld.long 0x08 03. " GPF03 ," "ena,dis"
  bitfld.long 0x08 02. "  GPF02 ," "ena,dis"
  bitfld.long 0x08 01. "  GPF01 ," "ena,dis"
  bitfld.long 0x08 00. "  GPF00 ," "ena,dis"
  textline ""
  textline ">GPFCON: Configure the pins of port F"
  textline ">GPFDAT: The data register for port F"
  textline ">GPFUP : Pull-up disable register for port F"

group 0x60++0x0B "PORT G CONTROL REGISTERS"
 line.long 0x00 "GPGCON,Configure the pins of port G"
  bitfld.long 0x00 30.--31. "  GPG15 ," "Input,Output,EINT23,nYPON"
  bitfld.long 0x00 28.--29. " GPG14 ," "Input,Output,EINT22,YMON"
  bitfld.long 0x00 26.--27. " GPG13  ," "Input,Output,EINT21,nXPON"
  bitfld.long 0x00 24.--25. " GPG12   ," "Input,Output,EINT20,XMON"
  bitfld.long 0x00 22.--23. " GPG11   ," "Input,Output,EINT19,TCLK1"
  bitfld.long 0x00 20.--21. " GPG10 ," "Input,Output,EINT18,Res"
  textline "                      "
  bitfld.long 0x00 18.--19. " GPG09 ," "Input,Output,EINT17,Res"
  bitfld.long 0x00 16.--17. " GPG08 ," "Input,Output,EINT16,Res"
  bitfld.long 0x00 14.--15. " GPG07 ," "Input,Output,EINT15,SPICLK1"
  bitfld.long 0x00 12.--13. " GPG06 ," "Input,Output,EINT14,SPIMOSI1"
  bitfld.long 0x00 10.--11. " GPG05 ," "Input,Output,EINT13,SPIMISO1"
  bitfld.long 0x00 08.--09. " GPG04 ," "Input,Output,EINT12,LCD_PWREN"
  textline "                      "
  bitfld.long 0x00 06.--07. " GPG03 ," "Input,Output,EINT11,nSS1"
  bitfld.long 0x00 04.--05. " GPG02 ," "Input,Output,EINT10,nSS0"
  bitfld.long 0x00 02.--03. " GPG01  ," "Input,Output,EINT9,Res"
  bitfld.long 0x00 00.--01. " GPG00   ," "Input,Output,EINT8,Res"

 line.long 0x04 "GPGDAT,The data register for port G"
  hexmask.long 0x04 00.--15. 1. "  GPG   ,port data"
  
 line.long 0x08 "GPGUP,Pull-up disable register for port G"
  bitfld.long 0x08 15. "  GPG15 ," "ena,dis"
  bitfld.long 0x08 14. "  GPG14 ," "ena,dis"
  bitfld.long 0x08 13. "  GPG13 ," "ena,dis"
  bitfld.long 0x08 12. "  GPG12 ," "ena,dis"
  bitfld.long 0x08 11. "  GPG11 ," "ena,dis"
  bitfld.long 0x08 10. "  GPG10 ," "ena,dis"
  bitfld.long 0x08 09. "  GPG09 ," "ena,dis"
  bitfld.long 0x08 08. "  GPG08 ," "ena,dis"
  textline "                      "
  bitfld.long 0x08 07. " GPG07 ," "ena,dis"
  bitfld.long 0x08 06. "  GPG06 ," "ena,dis"
  bitfld.long 0x08 05. "  GPG05 ," "ena,dis"
  bitfld.long 0x08 04. "  GPG04 ," "ena,dis"
  bitfld.long 0x08 03. "  GPG03 ," "ena,dis"
  bitfld.long 0x08 02. "  GPG02 ," "ena,dis"
  bitfld.long 0x08 01. "  GPG01 ," "ena,dis"
  bitfld.long 0x08 00. "  GPG00 ," "ena,dis"
  textline ""
  textline ">GPGCON: Configure the pins of port G"
  textline ">GPGDAT: The data register for port G"
  textline ">GPGUP : Pull-up disable register for port G"


group 0x70++0x0B "PORT H CONTROL REGISTERS"
 line.long 0x00 "GPHCON,Configure the pins of port H"
  bitfld.long 0x00 20.--21. "  GPH10 ," "Input,Output,CLKOUT1,res"
  bitfld.long 0x00 18.--19. " GPH9 ," "Input,Output,CLKOUT0,res"
  bitfld.long 0x00 16.--17. " GPH8 ," "Input,Output,UCLK,res"
  bitfld.long 0x00 14.--15. " GPH7 ," "Input,Output,RXD2,nCTS1"
  bitfld.long 0x00 12.--13. " GPH6 ," "Input,Output,TXD2,nRTS1"
  bitfld.long 0x00 10.--11. " GPH5 ," "Input,Output,RXD1,res"
  textline "                      "
  bitfld.long 0x00 08.--09. " GPH4   ," "Input,Output ,TXD1,res"
  bitfld.long 0x00 06.--07. "GPH3 ," "Input,Output,RXD0,res"
  bitfld.long 0x00 04.--05. "  GPH2 ," "Input,Output,TXD0,res"
  bitfld.long 0x00 02.--03. " GPH1 ," "Input,Output,nRTS0,res"
  bitfld.long 0x00 00.--01. " GPH0 ," "Input,Output,nCTS0,res"

 line.long 0x04 "GPHDAT,The data register for port H"
  hexmask.long 0x04 00.--10. 1. "  GPH   ,port data"
  
 line.long 0x08 "GPHUP,Pull-up disable register for port H"
  bitfld.long 0x08 10. "  GPH10 ," "ena,dis"
  bitfld.long 0x08 09. "  GPH09 ," "ena,dis"
  bitfld.long 0x08 08. "  GPH08 ," "ena,dis"
  bitfld.long 0x08 07. "  GPH07 ," "ena,dis"
  bitfld.long 0x08 06. "  GPH06 ," "ena,dis"
  textline "                      "
  bitfld.long 0x08 05. " GPH05 ," "ena,dis"
  bitfld.long 0x08 04. "  GPH04 ," "ena,dis"
  bitfld.long 0x08 03. "  GPH03 ," "ena,dis"
  bitfld.long 0x08 02. "  GPH02 ," "ena,dis"
  bitfld.long 0x08 01. "  GPH01 ," "ena,dis"
  bitfld.long 0x08 00. "  GPH00 ," "ena,dis"
  textline ""
  textline ">GPHCON: Configure the pins of port H"
  textline ">GPHDAT: The data register for port H"
  textline ">GPHUP : Pull-up disable register for port H"

group 0xd0++0x0B "PORT J CONTROL REGISTERS"
 line.long 0x00 "GPJCON,Configures the pins of port J"
  bitfld.long 0x00 24.--25. "  GPJ12   ," "Input,Output,CAMRESET,res"
  bitfld.long 0x00 22.--23. " GPJ11  ," "Input,Output,CAMCLKOUT,res"
  bitfld.long 0x00 20.--21. " GPJ10    ," "Input,Output,CAMHREF,res"
  bitfld.long 0x00 18.--19. " GPJ9   ," "Input,Output,CAMVSYNC,res"
  bitfld.long 0x00 16.--17. " GPJ8    ," "Input,Output,CAMPCLK,res"
  bitfld.long 0x00 14.--15. " GPJ7 ," "Input,Output,CAMDATA[7],res"
  textline "                      "
  bitfld.long 0x00 12.--13. " GPJ6  ," "Input,Output,CAMDATA[6],res"
  bitfld.long 0x00 10.--11. " GPJ5  ," "Input,Output,CAMDATA[5],res"
  bitfld.long 0x00 08.--09. " GPH4  ," "Input,Output ,CAMDATA[4],res"
  bitfld.long 0x00 06.--07. " GPH3 ," "Input,Output,CAMDATA[3],res"
  bitfld.long 0x00 04.--05. " GPH2 ," "Input,Output,CAMDATA[2],res"
  bitfld.long 0x00 02.--03. " GPH1 ," "Input,Output,CAMDATA[1],res"
  textline "                      "
  bitfld.long 0x00 00.--01. " GPH0  ," "Input,Output,CAMDATA[0],res"

 line.long 0x04 "GPJDAT,The data register for port J"
  hexmask.long 0x04 00.--12. 1. "  GPJDAT  ,The port is configured as functional pin, the undefined value will be read."
  
 line.long 0x08 "GPJUP,pull-up disable register for port J"
  hexmask.long 0x04 00.--12. 1. "  GPHUP   ,The pull up function attached to the corresponding port pin is enabled./disabled"
  textline ""
  textline ">GPJCON: Configure the pins of port J"
  textline ">GPJDAT: The data register for port J"
  textline ">GPJUP : Pull-up disable register for port J"


group 0x80++0x07 "MISCELLANEOUS CONTROL REGISTER"
 line.long 0x00 "MISCCR,Miscellaneous control register"
  bitfld.long 0x00 20.--22. "  BATT_FUNC ,Battery fault function selection." "000,001,010,011,100,101,110,111"
  bitfld.long 0x00 19. " OFFREFRESH ,When 1 After wake-up from sleep The self-refresh will be retained." "disable,enable"
  bitfld.long 0x00 18. " nEN_SCLK1 ,SCLK1 output enable" "SCLK ,lowLvl"
  bitfld.long 0x00 17. " nEN_SCLK0 ,SCLK0 output enable" "SCLK ,lowLvl"
  bitfld.long 0x00 16. " nRSTCON ,nRSTOUT signal manual control" "low,high"
  bitfld.long 0x00 13. " SEL_SUSPND1 ,USB Port 1 Suspend mode" "nrml,susp"
  textline "                      "
  bitfld.long 0x00 12. " SEL_SUSPND0 ,USB Port 0 Suspend mode" "nrml,susp"
  bitfld.long 0x00 08.--10. " CLKSEL1   ,CLKOUT1 output singnal source" "MPLL,UPLL,FCLK,HCLK,PCLK,DCLK1,res,res"
  bitfld.long 0x00 04.--06. " CLKSEL0    ,CLKOUT0 output singnal source" "MPLL,UPLL,FCLK,HCLK,PCLK,DCLK0,res,res"
  bitfld.long 0x00 03. " SEL_USBPAD  ,USB1 Host/Device select register." "dev,host"
  bitfld.long 0x00 01. " SPUCR1   ,DATA[31:16] port pull-up resister" "ena,dis"
  bitfld.long 0x00 00. " SPUCR0       ,DATA[15:0] port pull-up resister" "ena,dis"
  textline ""
  textline ">MISCCR      : Miscellaneous control register"
  textline "  BATT_FUNC  : Battery fault function selection."
  textline "  OFFREFRESH : When 1 After wake-up from sleep The self-refresh will be retained."
  textline "  nEN_SCLK1  : SCLK1 output enable"
  textline "  nEN_SCLK0  : SCLK0 output enable"
  textline "  nRSTCON    : nRSTOUT signal manual control"
  textline "  SEL_SUSPND1: USB Port 1 Suspend mode"
  textline "  SEL_SUSPND0: USB Port 0 Suspend mode"
  textline "  CLKSEL1    : CLKOUT1 output singnal source"
  textline "  CLKSEL0    : CLKOUT0 output singnal source"
  textline "  SEL_USBPAD : USB1 Host/Device select register."
  textline "  SPUCR1     : DATA[31:16] port pull-up resister"
  textline "  SPUCR0     : DATA[15:0] port pull-up resister"
  textline ""

 line.long 0x04 "DCLKCON,DCLK0/1 control register"
  bitfld.long 0x04 24.--27. "  DCLK1CMP ,DCLK1 Compare value clock toggle value" "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15"
  bitfld.long 0x04 20.--23. " DCLK1DIV ,DCLK1 Divide value-DCLK1 frequency = source clock /( DCLK1DIV + 1 )" "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15"
  bitfld.long 0x04 17. " DCLK1SelCK ,Select DCLK1 source clock" "PCLK,UCLK"
  bitfld.long 0x04 16. " DCLK1EN ,DCLK1 Enable" "dis,ena"
  textline "                      "
  bitfld.long 0x04 08.--11. " DCLK0CMP ,DCLK0 Compare value clock toggle value"  "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15"
  bitfld.long 0x04 04.--07. " DCLK0DIV ,DCLK0 Divide value-DCLK0 frequency = source clock/(DCLK0DIV + 1)" "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15" 
  bitfld.long 0x04 01. " DCLK0SelCK ,Select DCLK0 source clock" "PCLK,UCLK"
  bitfld.long 0x04 00. " DCLK0EN ,DCLK0 Enable" "dis,ena"
  textline ""
  textline ">DCLKCON    : DCLK0/1 control register"
  textline "  DCLK1CMP  : DCLK1 Compare value clock toggle value"
  textline "  DCLK1DIV  : DCLK1 Divide value-DCLK1 frequency = source clock /( DCLK1DIV + 1 )"
  textline "  DCLK1SelCK: Select DCLK1 source clock"
  textline "  DCLK1EN   : DCLK1 Enable"
  textline "  DCLK0CMP  : DCLK0 Compare value clock toggle value"
  textline "  DCLK0DIV  : DCLK0 Divide value-DCLK0 frequency = source clock/(DCLK0DIV + 1)"
  textline "  DCLK0SelCK: Select DCLK0 source clock"
  textline "  DCLK0EN   : DCLK0 Enable"
  textline ""

group 0x88++0x0B "EXTERNAL INTERRUPT CONTROL REGISTER"
 line.long 0x00 "EXTINT0,External interrupt control register 0"
  bitfld.long 0x00 28.--30. "  EINT7  ,Set the signaling method of the EINT7" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  bitfld.long 0x00 24.--26. " EINT6  ,Set the signaling method of the EINT6" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  bitfld.long 0x00 20.--22. " EINT5  ,Set the signaling method of the EINT5" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  bitfld.long 0x00 16.--18. " EINT4  ,Set the signaling method of the EINT4" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  textline "                      "
  bitfld.long 0x00 12.--14. " EINT3  ,Set the signaling method of the EINT3" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  bitfld.long 0x00 08.--10. " EINT2  ,Set the signaling method of the EINT2" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  bitfld.long 0x00 04.--06. " EINT1  ,Set the signaling method of the EINT1" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  bitfld.long 0x00 00.--02. " EINT0  ,Set the signaling method of the EINT0" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  textline ""

 line.long 0x04 "EXTINT1,External interrupt control register 1"
  bitfld.long 0x04 31. "  FLTEN15 ,Filter enable for EINT15" "Dis,Ena"
  bitfld.long 0x04 28.--30. " EINT15 ,Set the signaling method of the EINT15" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  bitfld.long 0x04 27. " FLTEN14 ,Filter enable for EINT15" "Dis,Ena"
  bitfld.long 0x04 24.--26. " EINT14 ,Set the signaling method of the EINT14" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  bitfld.long 0x04 23. " FLTEN13 ,Filter enable for EINT15" "Dis,Ena"
  bitfld.long 0x04 20.--22. " EINT13 ,Set the signaling method of the EINT13" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  bitfld.long 0x04 19. " FLTEN12 ,Filter enable for EINT15" "Dis,Ena"
  bitfld.long 0x04 16.--18. " EINT12 ,Set the signaling method of the EINT12" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  textline "                      "
  bitfld.long 0x04 15. " FLTEN11 ,Filter enable for EINT15" "Dis,Ena"
  bitfld.long 0x04 12.--14. " EINT11 ,Set the signaling method of the EINT11" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  bitfld.long 0x04 11. " FLTEN10 ,Filter enable for EINT15" "Dis,Ena"
  bitfld.long 0x04 08.--10. " EINT10 ,Set the signaling method of the EINT10" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  bitfld.long 0x04 07. " FLTEN09 ,Filter enable for EINT15" "Dis,Ena"
  bitfld.long 0x04 04.--06. " EINT09 ,Set the signaling method of the EINT09" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  bitfld.long 0x04 03. " FLTEN08 ,Filter enable for EINT15" "Dis,Ena"
  bitfld.long 0x04 00.--02. " EINT08 ,Set the signaling method of the EINT08" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"

 line.long 0x08 "EXTINT2,External interrupt control register 2"
  bitfld.long 0x08 31. "  FLTEN23 ,Filter Enable for EINT23" "dis,ena"
  bitfld.long 0x08 28.--30. " EINT23 ,Set the signaling method of the EINT23" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  bitfld.long 0x08 27. " FLTEN22 ,Filter Enable for EINT22" "dis,ena"
  bitfld.long 0x08 24.--26. " EINT22 ,Set the signaling method of the EINT22" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  bitfld.long 0x08 23. " FLTEN21 ,Filter Enable for EINT21" "dis,ena"
  bitfld.long 0x08 20.--22. " EINT21 ,Set the signaling method of the EINT21" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  textline "                      "
  bitfld.long 0x08 19. " FLTEN20 ,Filter Enable for EINT20" "dis,ena"
  bitfld.long 0x08 16.--18. " EINT20 ,Set the signaling method of the EINT20" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  bitfld.long 0x08 15. " FLTEN19 ,Filter Enable for EINT19" "dis,ena"
  bitfld.long 0x08 12.--14. " EINT19 ,Set the signaling method of the EINT19" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  bitfld.long 0x08 11. " FLTEN18 ,Filter Enable for EINT18" "dis,ena"
  bitfld.long 0x08 08.--10. " EINT18 ,Set the signaling method of the EINT18" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  textline "                      "
  bitfld.long 0x08 09. " FLTEN17 ,Filter Enable for EINT17" "dis,ena"
  bitfld.long 0x08 04.--06. " EINT17 ,Set the signaling method of the EINT17" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  bitfld.long 0x08 03. " FLTEN16 ,Filter Enable for EINT16" "dis,ena"
  bitfld.long 0x08 00.--02. " EINT16 ,Set the signaling method of the EINT16" "Low,High,FallEdg,FallEdg,RisEdg,RisEdg,BothEdg,BothEdg"
  textline ""
  textline ">EXTINT: External interrupt control register"
  textline "  FLTEN: Filter enable for EINT"
  textline "  EINT : Set the signaling method of the EINT"


group 0x94++0x0f "EXTERNAL INTERRUPT FILTER REGISTER"
 line.long 0x00 "EINTFLT0,Reserved"
 
 line.long 0x04 "EINTFLT1,Reserved"

 line.long 0x08 "EINTFLT2,External interrupt control register 2"
  bitfld.long 0x08 31. "  FLTCLK19 ,Filter clock of EINT19" "PCLK,EXTCLK/OSC_CLK"
  hexmask.long 0x08 24.--30. 1. " EINTFLT19 ,Filter width of EINT19" 
  bitfld.long 0x08 23. " FLTCLK18 ,Filter clock of EINT18" "PCLK,EXTCLK/OSC_CLK"
  hexmask.long 0x08 16.--22. 1. " EINTFLT18 ,Filter width of EINT18" 
  textline "                      "
  bitfld.long 0x08 15. " FLTCLK17 ,Filter clock of EINT17" "PCLK,EXTCLK/OSC_CLK"
  hexmask.long 0x08 08.--14. 1. " EINTFLT17 ,Filter width of EINT17"
  bitfld.long 0x08 07. " FLTCLK16 ,Filter clock of EINT16" "PCLK,EXTCLK/OSC_CLK"
  hexmask.long 0x08 00.--06. 1. " EINTFLT16 ,Filter width of EINT16"   

 line.long 0x0c "EINTFLT3,External interrupt control register 3"
  bitfld.long 0x0c 31. "  FLTCLK23 ,Filter clock of EINT23" "PCLK,EXTCLK/OSC_CLK"
  hexmask.long 0x0c 24.--30. 1. " EINTFLT23 ,Filter width of EINT23"  
  bitfld.long 0x0c 23. " FLTCLK22 ,Filter clock of EINT22" "PCLK,EXTCLK/OSC_CLK"
  hexmask.long 0x0c 16.--22. 1. " EINTFLT22 ,Filter width of EINT22"
  textline "                      "
  bitfld.long 0x0c 15. " FLTCLK21 ,Filter clock of EINT21" "PCLK,EXTCLK/OSC_CLK"
  hexmask.long 0x0c 08.--14. 1. " EINTFLT21 ,Filter width of EINT21"
  bitfld.long 0x0c 07. " FLTCLK20 ,Filter clock of EINT20" "PCLK,EXTCLK/OSC_CLK"
  hexmask.long 0x0c 00.--06. 1. " EINTFLT20 ,Filter width of EINT20"
  textline ""
  textline ">EINTFLT: External interrupt control register"
  textline "  FLTCLK: Filter clock of EINT"
  textline "  EINTFL: Filter width of EINT"


group 0xa4++0x03 "EXTERNAL INTERRUPT MASK REGISTER"
 line.long 0x00 "EINTMASK,External interupt mask register"
  bitfld.long 0x00 23. "  EINT23 ," "ena,msk"
  bitfld.long 0x00 22. " EINT22 ," "ena,msk"
  bitfld.long 0x00 21. " EINT21 ," "ena,msk"
  bitfld.long 0x00 20. " EINT20 ," "ena,msk"
  bitfld.long 0x00 19. " EINT19 ," "ena,msk"
  bitfld.long 0x00 18. " EINT18 ," "ena,msk"
  textline "                      "
  bitfld.long 0x00 17. " EINT17 ," "ena,msk"
  bitfld.long 0x00 16. " EINT16 ," "ena,msk"
  bitfld.long 0x00 15. " EINT15 ," "ena,msk"
  bitfld.long 0x00 14. " EINT14 ," "ena,msk"
  bitfld.long 0x00 13. " EINT13 ," "ena,msk"
  bitfld.long 0x00 12. " EINT12 ," "ena,msk"
  textline "                      "
  bitfld.long 0x00 11. " EINT11 ," "ena,msk"
  bitfld.long 0x00 10. " EINT10 ," "ena,msk"
  bitfld.long 0x00 09. " EINT09 ," "ena,msk"
  bitfld.long 0x00 08. " EINT08 ," "ena,msk"
  bitfld.long 0x00 07. " EINT07 ," "ena,msk"
  bitfld.long 0x00 06. " EINT06 ," "ena,msk"
  textline "                      "
  bitfld.long 0x00 05. " EINT05 ," "ena,msk"
  bitfld.long 0x00 04. " EINT04 ," "ena,msk"
  textline ">EINTMASK: External interupt mask register"


group 0xa8++0x03 "EXTERNAL INTERRUPT PENDING REGISTER"
 line.long 0x00 "EINTPEND,External interupt pending register"
  bitfld.long 0x00 23. "  EINT23 ," "noReq,req"
  bitfld.long 0x00 22. " EINT22 ," "noReq,req"
  bitfld.long 0x00 21. " EINT21 ," "noReq,req"
  bitfld.long 0x00 20. " EINT20 ," "noReq,req"
  bitfld.long 0x00 19. " EINT19 ," "noReq,req"
  bitfld.long 0x00 18. " EINT18 ," "noReq,req"
  textline "                     "
  bitfld.long 0x00 17. "  EINT17 ," "noReq,req"
  bitfld.long 0x00 16. " EINT16 ," "noReq,req"
  bitfld.long 0x00 15. " EINT15 ," "noReq,req"
  bitfld.long 0x00 14. " EINT14 ," "noReq,req"
  bitfld.long 0x00 13. " EINT13 ," "noReq,req"
  bitfld.long 0x00 12. " EINT12 ," "noReq,req"
  textline "                     "
  bitfld.long 0x00 11. "  EINT11 ," "noReq,req"
  bitfld.long 0x00 10. " EINT10 ," "noReq,req"
  bitfld.long 0x00 09. " EINT09 ," "noReq,req"
  bitfld.long 0x00 08. " EINT08 ," "noReq,req"
  bitfld.long 0x00 07. " EINT07 ," "noReq,req"
  bitfld.long 0x00 06. " EINT06 ," "noReq,req"
  textline "                     "
  bitfld.long 0x00 05. "  EINT05 ," "noReq,req"
  bitfld.long 0x00 04. " EINT04 ," "noReq,req"
  textline ">EINTPEND: External interupt pending register"

group 0xac++0x13 "GENERAL STATUS REGISTER"
 line.long 0x00 "GSTATUS0,External pin status"
  bitfld.long 0x00 03. "  nWAIT ,Status of nWAIT pin" "0,1"
  bitfld.long 0x00 02. " NCON ,Status of NCON pin" "0,1"
  bitfld.long 0x00 01. " RnB ,Status of R/nB pin" "0,1"
  bitfld.long 0x00 00. " nBATT_FLT ,Status of nBATT_FLT pin" "0,1"
  
 line.long 0x04 "GSTATUS1,Chip ID"

 line.long 0x08 "GSTATUS2,Reset status"
  bitfld.long 0x08 00. "  PWRST ,Power on reset" "no,yes"
  bitfld.long 0x08 01. " OFFRST ,Power_OFF reset" "no,yes"
  bitfld.long 0x08 02. " WDTRST ,Watchdog reset" "no,yes"
  
 line.long 0x0c "GSTATUS3,Infrom register"
  
 line.long 0x10 "GSTATUS4,Infrom register"
  textline ""
  textline ">GSTATUS0  : External pin status"
  textline "  nWAIT    : Status of nWAIT pin"
  textline "  NCON     : Status of NCON pin"
  textline "  RnB      : Status of R/nB pin"
  textline "  nBATT_FLT: Status of nBATT_FLT pin"
  textline ""
  textline ">GSTATUS1  : Chip ID"
  textline ">GSTATUS2  : Reset status"
  textline "  PWRST    : Power on reset"
  textline "  OFFRST   : Power_OFF reset"
  textline "  WDTRST   : Watchdog reset"
  textline ""
  textline ">GSTATUS3  : Infrom register"
  textline ">GSTATUS4  : Infrom register"
  textline ""

group 0xc4++0x7 "Drive Strength Control"
 line.long 0x00 "DSC0, Strength control register 0"
  bitfld.long 0x00 31. "  nEN_DSC   ,Enable Drive Strength Control" "Ena,Dis"
  bitfld.long 0x00 08.--09. " DSC_ADR  ,Address Bus Drive strength." "12mA,10mA,08mA,06mA"
  bitfld.long 0x00 06.--07. " DSC_DATA3 ,DATA[31:24] I/O Drive strength." "12mA,10mA,08mA,06mA"
  bitfld.long 0x00 04.--05. " DSC_DATA2 ,DATA[23:16] I/O Drive strength." "12mA,10mA,08mA,06mA"
  bitfld.long 0x00 02.--03. " DSC_DATA1 ,DATA[15:8] I/O Drive strength." "12mA,10mA,08mA,06mA"
  bitfld.long 0x00 00.--01. " DSC_DATA0 ,DATA[7:0] I/O Drive strength." "12mA,10mA,08mA,06mA"

 line.long 0x04 "DSC1, Strength control register 1"
  bitfld.long 0x04 28.--29. "  DSC_SCK1 ,SCLK1 drive strength." "12mA,10mA,08mA,06mA"
  bitfld.long 0x04 26.--27. " DSC_SCK0 ,SCLK0 drive strength." "12mA,10mA,08mA,06mA"
  bitfld.long 0x04 24.--25. " DSC_SCKE  ,SCKE drive strength." "10mA,08mA,06mA,04mA"
  bitfld.long 0x04 22.--23. " DSC_SDR   ,nSRAS/nSCAS Drive strength." "10mA,08mA,06mA,04mA"
  bitfld.long 0x04 20.--21. " DSC_NFC   ,Nand flash control drive strength." "10mA,08mA,06mA,04mA"
  bitfld.long 0x04 18.--19. " DSC_BE    ,nBE[3:0] drive strength." "10mA,08mA,06mA,04mA"
  textline "                      "
  bitfld.long 0x04 16.--17. " DSC_WOE  ,nWE/nOE drive strength." "10mA,08mA,06mA,04mA"
  bitfld.long 0x04 14.--15. " DSC_CS7  ,nGCS7 drive strength." "10mA,08mA,06mA,04mA"
  bitfld.long 0x04 12.--13. " DSC_CS6   ,nGCS6 drive strength." "10mA,08mA,06mA,04mA"
  bitfld.long 0x04 10.--11. " DSC_CS5   ,nGCS5 drive strength." "10mA,08mA,06mA,04mA"
  bitfld.long 0x04 08.--09. " DSC_CS4   ,nGCS4 drive strength." "10mA,08mA,06mA,04mA"
  bitfld.long 0x04 06.--07. " DSC_CS3   ,nGCS3 drive strength." "10mA,08mA,06mA,04mA"
  textline "                      "
  bitfld.long 0x04 04.--05. " DSC_CS2  ,nGCS2 drive strength." "10mA,08mA,06mA,04mA"
  bitfld.long 0x04 02.--03. " DSC_CS1  ,nGCS1 drive strength." "10mA,08mA,06mA,04mA"
  bitfld.long 0x04 00.--01. " DSC_CS0   ,nGCS0 drive strength." "10mA,08mA,06mA,04mA"
  textline ""
  textline ">DSC0     : Strength control register 0"
  textline "  nEN_DSC : Enable Drive Strength Control"
  textline "  DSC_ADR : Address Bus Drive strength."
  textline "  DSC_DATA: DATA[31:0] I/O Drive strength."
  textline ""
  textline ">DSC1     : Strength control register 1"
  textline "  DSC_SCK : SCLK drive strength."
  textline "  DSC_SCKE: SCKE drive strength."
  textline "  DSC_SDR : nSRAS/nSCAS Drive strength."
  textline "  DSC_NFC : Nand flash control drive strength."
  textline "  DSC_BE  : nBE[3:0] drive strength."
  textline "  DSC_WOE : nWE/nOE drive strength."
  textline "  DSC_CS  : nGCS drive strength."
  textline ""

group 0xcc++0x3 "Memory Sleep Control Register"
line.long 0x00 "MSLCON, Memory sleep control register"
  bitfld.long 0x04 28.--29. "  PSC_DATA    ,DATA[31:0] pin status in sleep mode." "Hi-Z,Out0"
  bitfld.long 0x04 26.--27. " PSC_WAIT   ,nWAIT pin status in sleep mode." "Hi-Z,Out0"
  bitfld.long 0x04 24.--25. " PSC_RnB      ,RnB pin status in sleep mode." "Hi-Z,Out0"
  bitfld.long 0x04 22.--23. " PSC_NF    ,NAND Flash I/F pin status in sleep mode" "Inactive,Hi-Z"
  bitfld.long 0x04 20.--21. " PSC_SDR  ,nSRAS, nSCAS pin status in sleep mode." "Inactive,Hi-Z"
  bitfld.long 0x04 18.--19. " PSC_DQM  ,DQM[3:0]/nWE[3:0] pin status in sleep mode." "Inactive,Hi-Z"
  textline "                      "
  bitfld.long 0x04 16.--17. " PSC_OE  ,nOE pin status in sleep mode." "Inactive,Hi-Z"
  bitfld.long 0x04 14.--15. " PSC_WE ,nWE pin status in sleep mode." "Inactive,Hi-Z"
  bitfld.long 0x04 12.--13. " PSC_GCS0 ,nGCS[0] pin status in sleep mode." "Inactive,Hi-Z"
  bitfld.long 0x04 10.--11. " PSC_GCS51 ,nGCS[5:1] pin status in sleep mode." "Inactive,Hi-Z"
  bitfld.long 0x04 08.--09. " PSC_GCS6 ,nGCS[6] pin status in sleep mode." "Inactive,Hi-Z"
  bitfld.long 0x04 06.--07. " PSC_GCS7 ,nGCS[7] pin status in sleep mode." "Inactive,Hi-Z"
  textline ""
  textline ">MSLCON    : Memory sleep control register"
  textline "  PSC_DATA : DATA[31:0] pin status in sleep mode."
  textline "  PSC_WAIT : nWAIT pin status in sleep mode."
  textline "  PSC_RnB  : RnB pin status in sleep mode."
  textline "  PSC_NF   : NAND Flash I/F pin status in sleep mode"
  textline "  PSC_SDR  : nSRAS, nSCAS pin status in sleep mode."
  textline "  PSC_DQM  : DQM[3:0]/nWE[3:0] pin status in sleep mode."
  textline "  PSC_OE   : nOE pin status in sleep mode."
  textline "  PSC_WE   : nWE pin status in sleep mode."
  textline "  PSC_GCS0 : nGCS[0] pin status in sleep mode."
  textline "  PSC_GCS51: nGCS[5:1] pin status in sleep mode."
  textline "  PSC_GCS6 : nGCS[6] pin status in sleep mode."
  textline "  PSC_GCS7 : nGCS[7] pin status in sleep mode."
  textline ""

;end include file s3c2410x/gpio.ph
tree.end

tree "7 PWM Timer"
;parameters:
base 0x51000000

group 0x00++0x0b 
 line.long 0x00 "TCFG0,TIMER CONFIGURATION REGISTER0"
 hexmask.long 0x00 16.--23. 1. "  DZL ,Dead zone length"
 hexmask.long 0x00 08.--15. 1. " PSC1 ,Prescaler 1-determine prescaler value for Timer2;3 and 4" 
 hexmask.long 0x00 00.--07. 1. " PSC0 ,Prescaler 0-determine prescaler value for Timer 0 and 1"

 line.long 0x04 "TCFG1,TIMER CONFIGURATION REGISTER1"
 bitfld.long 0x04 20.--23. "  DMAD ,DMA mode-Select DMA request channel" "noSlct,Timer0,Timer1,Timer2,Timer3,Timer4,res,-,-,-,-,-,-,-,-,-"
 bitfld.long 0x04 16.--19. "  MUX4 ,Select MUX input for PWM Timer4" "1/2,1/4,1/8,1/16,extTCLK1,extTCLK1,extTCLK1,extTCLK1,-,-,-,-,-,-,-,-"
 bitfld.long 0x04 12.--15. " MUX3 ,Select MUX input for PWM Timer3" "1/2,1/4,1/8,1/16,extTCLK1,extTCLK1,extTCLK1,extTCLK1,-,-,-,-,-,-,-,-"
 bitfld.long 0x04 08.--11. " MUX2 ,Select MUX input for PWM Timer2" "1/2,1/4,1/8,1/16,extTCLK1,extTCLK1,extTCLK1,extTCLK1,-,-,-,-,-,-,-,-"
 bitfld.long 0x04 04.--07. " MUX1 ,Select MUX input for PWM Timer1" "1/2,1/4,1/8,1/16,extTCLK1,extTCLK1,extTCLK1,extTCLK1,-,-,-,-,-,-,-,-"
 bitfld.long 0x04 00.--03. " MUX0 ,Select MUX input for PWM Timer0" "1/2,1/4,1/8,1/16,extTCLK1,extTCLK1,extTCLK1,extTCLK1,-,-,-,-,-,-,-,-"
 textline ""
 textline ">TCFG : TIMER CONFIGURATION REGISTER"
 textline "  DZL : Dead zone length"
 textline "  PSC1: Prescaler 1-determine prescaler value for Timer2;3 and 4"
 textline "  PSC0: Prescaler 0-determine prescaler value for Timer 0 and 1"
 textline "  DMAD: DMA mode-Select DMA request channel"
 textline "  MUX : Select MUX input for PWM Timer"
 textline ""
 
 line.long 0x08 "TCON,TIMER CONTROL REGISTER"
 bitfld.long 0x08 22. "  T4AR ,Timer 4 auto reload on/off" "oneShot,autoRL"
 bitfld.long 0x08 21. " T4MU ,Timer 4 manual update" "-,update"
 bitfld.long 0x08 20. "   T4SS ,Timer 4 start/stop" "stop,start"
 bitfld.long 0x08 19. "    T3AR ,Timer 3 auto reload on/off" "oneShot,autoRL" 
 bitfld.long 0x08 18. "  T3OI ,Timer 3 output inverter on/off" "off,on"
 bitfld.long 0x08 17. "      T3MU ,Timer 3 manual update" "-,update"             
 bitfld.long 0x08 16. "T3SS ,Timer 3 start/stop" "stop,start"        
 textline "                      "      
 bitfld.long 0x08 15. " T2AR ,Timer 2 auto reload on/off" "oneShot,autoRL" 
 bitfld.long 0x08 14. " T2OI ,Timer 2 output inverter on/off" "off,on"
 bitfld.long 0x08 13. "      T2MU ,Timer 2 manual update" "-,update"             
 bitfld.long 0x08 12. "   T2SS ,Timer 2 start/stop" "stop,start"        
 bitfld.long 0x08 11. "    T1AR ,Timer 1 auto reload on/off" "oneShot,autoRL" 
 bitfld.long 0x08 10. "  T1OI ,Timer 1 output inverter on/off" "off,on"
 bitfld.long 0x08 09. "   T1MU ,Timer 1 manual update" "-,update"             
 textline "                      "
 bitfld.long 0x08 08. " T1SS ,Timer 1 start/stop" "stop,start"        
 bitfld.long 0x08 04. "   DZE ,Dead zone enable" "dis,ena"
 bitfld.long 0x08 03. "       T0AR ,Timer 0 auto reload on/off" "oneShot,autoRL" 
 bitfld.long 0x08 02. "  T0OI ,Timer 0 output inverter on/off" "off,on"
 bitfld.long 0x08 01. "      T0MU ,Timer 0 manual update" "-,update"             
 bitfld.long 0x08 00. "   T0SS ,Timer 0 start/stop" "stop,start"
 textline ""
 textline ">TCON : TIMER CONTROL REGISTER"
 textline "  T4AR: Timer 4 auto reload on/off"
 textline "  T4MU: Timer 4 manual update"
 textline "  T4SS: Timer 4 start/stop"
 textline "  T3AR: Timer 3 auto reload on/off"
 textline "  T3OI: Timer 3 output inverter on/off"
 textline "  T3MU: Timer 3 manual update"
 textline "  T3SS: Timer 3 start/stop"
 textline "  T2AR: Timer 2 auto reload on/off"
 textline "  T2OI: Timer 2 output inverter on/off"
 textline "  T2MU: Timer 2 manual update"
 textline "  T2SS: Timer 2 start/stop"
 textline "  T1AR: Timer 1 auto reload on/off"
 textline "  T1OI: Timer 1 output inverter on/off"
 textline "  T1MU: Timer 1 manual update"
 textline "  T1SS: Timer 1 start/stop"
 textline "  DZE : Dead zone enable"
 textline "  T0AR: Timer 0 auto reload on/off"
 textline "  T0OI: Timer 0 output inverter on/off"
 textline "  T0MU: Timer 0 manual update"
 textline ""

group 0x0c++0x0b "TIMER REGISTER 0"
 line.long 0x00 "TCNTB_0,Timer 0 count buffer register"
 line.long 0x04 "TCMPB_0,Timer 0 compare buffer register"
 line.long 0x08 "TCNTO_0,TIMER 0 COUNT OBSERVATION REGISTER"

group 0x18++0x0b "TIMER REGISTER 1"
 line.long 0x00 "TCNTB_1,Timer 1 count buffer register"
 line.long 0x04 "TCMPB_1,Timer 1 compare buffer register"
 line.long 0x08 "TCNTO_1,TIMER 1 COUNT OBSERVATION REGISTER"

group 0x24++0x0b "TIMER REGISTER 2"
 line.long 0x00 "TCNTB_2,Timer 2 count buffer register"
 line.long 0x04 "TCMPB_2,Timer 2 compare buffer register"
 line.long 0x08 "TCNTO_2,TIMER 2 COUNT OBSERVATION REGISTER"

group 0x30++0x0b "TIMER REGISTER 3"
 line.long 0x00 "TCNTB_3,Timer 3 count buffer register"
 line.long 0x04 "TCMPB_3,Timer 3 compare buffer register"
 line.long 0x08 "TCNTO_3,TIMER 3 COUNT OBSERVATION REGISTER"

group 0x3c++0x07 "TIMER REGISTER 4"
 line.long 0x00 "TCNTB_4,Timer 4 count buffer register"
 line.long 0x04 "TCNTO_4,TIMER 4 COUNT OBSERVATION REGISTER"
 textline ""
 textline ">TCNTB_0 Timer: count buffer register"
 textline ">TCNTB_1 Timer: compare buffer register"
 textline ">TCNTB_2 Timer: count observation register"
 textline ">TCNTB_3 Timer: count buffer register"
 textline ""

tree.end



tree "8 UART"

base 0x50000000

group 0x00++0x03 "UART LINE CONTROL REGISTER"
 line.long 0x00 "ULCON0,UART channel 0 line control register"
  bitfld.long 0x00 06. " IRM ,Infra-Red Mode-Determine whether or not to use the Infra-Red mode" "nrml,IRM"
  bitfld.long 0x00 03.--05. " PM ,Parity Mode-Specify the type of parity generation and checking during UART transmit and receive operation" "noPrty,noPrty,noPrty,noPrty,odd,even,1,0"
  bitfld.long 0x00 02. " NSB ,Number of Stop Bit-Specify how many stop bits are to be used for end-of-frame signal" "1-bit,2-bit"
  bitfld.long 0x00 00.--01. " WL ,Word Length-Indicate the number of data bits to be transmitted or received per frame" "5,6,7,8"

group 0x4000++0x03
 line.long 0x00 "ULCON1,UART channel 1 line control register" 
  bitfld.long 0x00 06. " IRM ,Infra-Red Mode-Determine whether or not to use the Infra-Red mode" "nrml,IRM"
  bitfld.long 0x00 03.--05. " PM ,Parity Mode-Specify the type of parity generation and checking during UART transmit and receive operation" "noPrty,noPrty,noPrty,noPrty,odd,even,1,0"
  bitfld.long 0x00 02. " NSB ,Number of Stop Bit-Specify how many stop bits are to be used for end-of-frame signal" "1-bit,2-bit"
  bitfld.long 0x00 00.--01. " WL ,Word Length-Indicate the number of data bits to be transmitted or received per frame" "5,6,7,8"

group 0x8000++0x03
 line.long 0x00 "ULCON2,UART channel 2 line control register"
  bitfld.long 0x00 06. " IRM ,Infra-Red Mode-Determine whether or not to use the Infra-Red mode" "nrml,IRM"
  bitfld.long 0x00 03.--05. " PM ,Parity Mode-Specify the type of parity generation and checking during UART transmit and receive operation" "noPrty,noPrty,noPrty,noPrty,odd,even,1,0"
  bitfld.long 0x00 02. " NSB ,Number of Stop Bit-Specify how many stop bits are to be used for end-of-frame signal" "1-bit,2-bit"
  bitfld.long 0x00 00.--01. " WL ,Word Length-Indicate the number of data bits to be transmitted or received per frame" "5,6,7,8"
  textline ""
  textline ">ULCON: UART channelline control register"
  textline "  IRM : Infra-Red Mode-Determine whether or not to use the Infra-Red mode"
  textline "  PM  : Parity Mode-Specify the type of parity generation and checking during UART transmit and receive operation"
  textline "  NSB : Number of Stop Bit-Specify how many stop bits are to be used for end-of-frame signal"
  textline "  WL  : Word Length-Indicate the number of data bits to be transmitted or received per frame"
  textline ""

group 0x04++0x03 "UART CONTROL REGISTER"
 line.long 0x00 "UCON0,UART channel 0 control register"
  hexmask.long 0x00 12.--15. 1. "  FCLK Divider , Divider value when the Uart clock source is selected as FCLK/n. n is determined by UCON0[15:12]/ UCON1[15:12]/ UCON2[14:12]."
  bitfld.long 0x00 10.--11. "  CS  ,Clock Selection-Select PCLK or UCLK for the UART baud rate" "PCLK,PCLK,UCLK,FCLK/n"
  bitfld.long 0x00 09. " TXITYP ,Tx Interrupt Type" "pulse,level"
  bitfld.long 0x00 08. " RXITYP ,Rx Interrupt Type" "pulse,level"
  bitfld.long 0x00 07. " RXTOE ,Rx Time Out Enable" "dis,ena"
  bitfld.long 0x00 06. " RXESIE ,Rx Error Status Interrupt Enable" "dis,ena"
  textline "                      "
  bitfld.long 0x00 05. " LBM   ,Loopback Mode-Setting loopback bit to 1 causes the UART to enter the loopback mode" "nrml,LBM"
  bitfld.long 0x00 04. " SBS   ,Send Break Signal" "nrml,send"
  bitfld.long 0x00 02.--03. "  TRANS   ,Transmit Mode" "dis,intReq/poll,DMA0/DMA3,DMA1"
  bitfld.long 0x00 00.--01. "     REC    ,Receive Mode" "dis,intReq/poll,DMA0/DMA3,DMA1"

group 0x4004++0x03
line.long 0x00 "UCON1,UART channel 1 control register"
  hexmask.long 0x00 12.--15. 1. "  FCLK Divider , Divider value when the Uart clock source is selected as FCLK/n. n is determined by UCON0[15:12]/ UCON1[15:12]/ UCON2[14:12]."
  bitfld.long 0x00 10.--11. "  CS  ,Clock Selection-Select PCLK or UCLK for the UART baud rate" "PCLK,PCLK,UCLK,FCLK/n"
  bitfld.long 0x00 09. " TXITYP ,Tx Interrupt Type" "pulse,level"
  bitfld.long 0x00 08. " RXITYP ,Rx Interrupt Type" "pulse,level"
  bitfld.long 0x00 07. " RXTOE ,Rx Time Out Enable" "dis,ena"
  bitfld.long 0x00 06. " RXESIE ,Rx Error Status Interrupt Enable" "dis,ena"
  textline "                      "
  bitfld.long 0x00 05. " LBM   ,Loopback Mode-Setting loopback bit to 1 causes the UART to enter the loopback mode" "nrml,LBM"
  bitfld.long 0x00 04. " SBS   ,Send Break Signal" "nrml,send"
  bitfld.long 0x00 02.--03. "  TRANS   ,Transmit Mode" "dis,intReq/poll,DMA0/DMA3,DMA1"
  bitfld.long 0x00 00.--01. "     REC    ,Receive Mode" "dis,intReq/poll,DMA0/DMA3,DMA1"

group 0x8004++0x03
line.long 0x00 "UCON2,UART channel 2 control register"
  hexmask.long 0x00 12.--15. 1. "  FCLK Divider , Divider value when the Uart clock source is selected as FCLK/n. n is determined by UCON0[15:12]/ UCON1[15:12]/ UCON2[14:12]."
  bitfld.long 0x00 10.--11. "  CS  ,Clock Selection-Select PCLK or UCLK for the UART baud rate" "PCLK,PCLK,UCLK,FCLK/n"
  bitfld.long 0x00 09. " TXITYP ,Tx Interrupt Type" "pulse,level"
  bitfld.long 0x00 08. " RXITYP ,Rx Interrupt Type" "pulse,level"
  bitfld.long 0x00 07. " RXTOE ,Rx Time Out Enable" "dis,ena"
  bitfld.long 0x00 06. " RXESIE ,Rx Error Status Interrupt Enable" "dis,ena"
  textline "                      "
  bitfld.long 0x00 05. " LBM   ,Loopback Mode-Setting loopback bit to 1 causes the UART to enter the loopback mode" "nrml,LBM"
  bitfld.long 0x00 04. " SBS   ,Send Break Signal" "nrml,send"
  bitfld.long 0x00 02.--03. "  TRANS   ,Transmit Mode" "dis,intReq/poll,DMA0/DMA3,DMA1"
  bitfld.long 0x00 00.--01. "     REC    ,Receive Mode" "dis,intReq/poll,DMA0/DMA3,DMA1"
  textline ""
  textline ">UCON         : UART channel control register"
  textline "  FCLK Divider: Divider value when the Uart clock source is selected as FCLK/n."
  textline "  CS          : Clock Selection-Select PCLK or UCLK for the UART baud rate"
  textline "  TXITYP      : Tx Interrupt Type"
  textline "  RXITYP      : Rx Interrupt Type"
  textline "  RXTOE       : Rx Time Out Enable"
  textline "  RXESIE      : Rx Error Status Interrupt Enable"
  textline ""

group 0x08++0x03 "UART FIFO CONTROL REGISTER"
 line.long 0x00 "UFCON0,UART channel 0 FIFO control register"
  bitfld.long 0x00 06.--07. "  TXFTL ,Tx FIFO Trigger Level" "empty,4-byte,8-byte,12-byte"
  bitfld.long 0x00 04.--05. " RXFTL ,Rx FIFO Trigger Level"  "4-byte,8-byte,12-byte,16-byte"
  bitfld.long 0x00 02. " TXFR ,Tx FIFO Reset-Auto-cleared after resetting FIFO" "nrml,rst"
  bitfld.long 0x00 01. " RXFR ,Rx FIFO Reset-Auto-cleared after resetting FIFO" "nrml,rst"
  bitfld.long 0x00 00. " FIFIOE ,FIFO Enable" "dis,ena"
  
group 0x4008++0x03 
 line.long 0x00 "UFCON1,UART channel 1 FIFO control register"
  bitfld.long 0x00 06.--07. "  TXFTL ,Tx FIFO Trigger Level" "empty,4-byte,8-byte,12-byte"
  bitfld.long 0x00 04.--05. " RXFTL ,Rx FIFO Trigger Level"  "4-byte,8-byte,12-byte,16-byte"
  bitfld.long 0x00 02. " TXFR ,Tx FIFO Reset-Auto-cleared after resetting FIFO" "nrml,rst"
  bitfld.long 0x00 01. " RXFR ,Rx FIFO Reset-Auto-cleared after resetting FIFO" "nrml,rst"
  bitfld.long 0x00 00. " FIFIOE ,FIFO Enable" "dis,ena"

group 0x8008++0x03 
 line.long 0x00 "UFCON2,UART channel 2 FIFO control register"
  bitfld.long 0x00 06.--07. "  TXFTL ,Tx FIFO Trigger Level" "empty,4-byte,8-byte,12-byte"
  bitfld.long 0x00 04.--05. " RXFTL ,Rx FIFO Trigger Level"  "4-byte,8-byte,12-byte,16-byte"
  bitfld.long 0x00 02. " TXFR ,Tx FIFO Reset-Auto-cleared after resetting FIFO" "nrml,rst"
  bitfld.long 0x00 01. " RXFR ,Rx FIFO Reset-Auto-cleared after resetting FIFO" "nrml,rst"
  bitfld.long 0x00 00. " FIFIOE ,FIFO Enable" "dis,ena"
  textline ""
  textline ">UFCON  : UART channel FIFO control register"
  textline "  TXFTL : Tx FIFO Trigger Level"
  textline "  RXFTL : Rx FIFO Trigger Level"
  textline "  TXFR  : Tx FIFO Reset-Auto-cleared after resetting FIFO"
  textline "  RXFR  : Rx FIFO Reset-Auto-cleared after resetting FIFO"
  textline "  FIFIOE: FIFO Enable"
  textline ""

group 0x0c++0x03 "UART MODEM CONTROL REGISTER"
 line.long 0x00 "UMCON0,UART channel 0 Modem control register"
  bitfld.long 0x00 04. "  AFC ,Auto Flow Control" "dis,ena"
  bitfld.long 0x00 00. " SEND ,Request to Send" "Hilvl,LowLvl"

group 0x400c++0x03 
 line.long 0x00 "UMCON1,UART channel 1 Modem control register"
  bitfld.long 0x00 04. "  AFC ,Auto Flow Control" "dis,ena"
  bitfld.long 0x00 00. " SEND ,Request to Send" "Hilvl,LowLvl"
  textline ""
  textline ">UMCON: UART channel Modem control register"
  textline "  AFC : Auto Flow Control"
  textline "  SEND: Request to Send"
  textline ""

group 0x10++0x03 "UART TX/RX STATUS REGISTER"
 line.long 0x00 "UTRSTAT0,UART channel 0 Tx/Rx status register"
  bitfld.long 0x00 02. "  TE ,Transmitter empty" "no,yes"
  bitfld.long 0x00 01. " TBE ,Transmit buffer empty" "no,yes"
  bitfld.long 0x00 00. " RBDR ,Receive buffer data ready" "empt,rdy"

group 0x4010++0x03
 line.long 0x00 "UTRSTAT1,UART channel 1 Tx/Rx status register"
  bitfld.long 0x00 02. "  TE ,Transmitter empty" "no,yes"
  bitfld.long 0x00 01. " TBE ,Transmit buffer empty" "no,yes"
  bitfld.long 0x00 00. " RBDR ,Receive buffer data ready" "empt,rdy"
  
group 0x8010++0x03
line.long 0x00 "UTRSTAT2,UART channel 2 Tx/Rx status register"
  bitfld.long 0x00 02. "  TE ,Transmitter empty" "no,yes"
  bitfld.long 0x00 01. " TBE ,Transmit buffer empty" "no,yes"
  bitfld.long 0x00 00. " RBDR ,Receive buffer data ready" "empt,rdy"
  textline ""
  textline ">UTRSTAT: UART channel Tx/Rx status register"
  textline "  TE    : Transmitter empty"
  textline "  TBE   : Transmit buffer empty"
  textline "  RBDR  : Receive buffer data ready"
  textline ""


group 0x14++0x03 "UART ERROR STATUS REGISTER"
 line.long 0x00 "UERSTAT0,UART channel 0 Rx error status register"
  bitfld.long 0x00 03. "  RSV ,Reserved" "noFrErr,FrErr" 
  bitfld.long 0x00 02. " FE ,Frame Error" "noFrErr,FrErr"
  bitfld.long 0x00 01. " RSV ,Reserved" "noFrErr,FrErr"
  bitfld.long 0x00 00. " OE ,Overrun Error" "noORErr,OrErr"

group 0x4014++0x03
 line.long 0x00 "UERSTAT1,UART channel 1 Rx error status register"
  bitfld.long 0x00 03. "  RSV ,Reserved" "noFrErr,FrErr" 
  bitfld.long 0x00 02. " FE ,Frame Error" "noFrErr,FrErr"
  bitfld.long 0x00 01. " RSV ,Reserved" "noFrErr,FrErr"
  bitfld.long 0x00 00. " OE ,Overrun Error" "noORErr,OrErr"

group 0x8014++0x03
 line.long 0x00 "UERSTAT2,UART channel 2 Rx error status register"
  bitfld.long 0x00 03. "  RSV ,Reserved" "noFrErr,FrErr" 
  bitfld.long 0x00 02. " FE ,Frame Error" "noFrErr,FrErr"
  bitfld.long 0x00 01. " RSV ,Reserved" "noFrErr,FrErr"
  bitfld.long 0x00 00. " OE ,Overrun Error" "noORErr,OrErr"
  textline ""
  textline ">UERSTAT: UART channel Rx error status register"
  textline "  RSV   : Reserved"
  textline "  FE    : Frame Error"
  textline "  RSV   : Reserved"
  textline "  OE    : Overrun Error"
  textline ""

group 0x18++0x03 "UART FIFO STATUS REGISTER"
 line.long 0x00 "UFSTAT0,UART channel 0 FIFO status register"
  bitfld.long 0x00 14. "  TXFF ,Tx FIFO Full" "no,yes"
  bitfld.long 0x00 08.--13. " TXFC ,Tx FIFO Count" "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63"
  bitfld.long 0x00 06. " RXFF ,Rx FIFO Full" "no,yes"
  bitfld.long 0x00 00.--05. " RXFC ,Rx FIFO Count" "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63"

group 0x4018++0x03
 line.long 0x00 "UFSTAT1,UART channel 1 FIFO status register"
  bitfld.long 0x00 14. "  TXFF ,Tx FIFO Full" "no,yes"
  bitfld.long 0x00 08.--13. " TXFC ,Tx FIFO Count" "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63"
  bitfld.long 0x00 06. " RXFF ,Rx FIFO Full" "no,yes"
  bitfld.long 0x00 00.--05. " RXFC ,Rx FIFO Count" "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63"

group 0x8018++0x03
 line.long 0x00 "UFSTAT2,UART channel 2 FIFO status register"
  bitfld.long 0x00 14. "  TXFF ,Tx FIFO Full" "no,yes"
  bitfld.long 0x00 08.--13. " TXFC ,Tx FIFO Count" "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63"
  bitfld.long 0x00 06. " RXFF ,Rx FIFO Full" "no,yes"
  bitfld.long 0x00 00.--05. " RXFC ,Rx FIFO Count" "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63"
  textline ""
  textline ">UFSTAT: UART channel FIFO status register"
  textline "  TXFF : Tx FIFO Full"
  textline "  TXFC : Tx FIFO Count"
  textline "  RXFF : Rx FIFO Full"
  textline "  RXFC : Rx FIFO Count"
  textline ""


group 0x1c++0x03 "UART MODEM STATUS REGISTER"
 line.long 0x00 "UMSTAT0,UART channel 0 Modem status register"
  bitfld.long 0x00 04. "  DCTS ,Delta CTS" "noChng,chnged"
  bitfld.long 0x00 00. " CTS ,Clear to Send" "noAct,act"

group 0x401c++0x03
 line.long 0x00 "UMSTAT1,UART channel 1 Modem status register"
  bitfld.long 0x00 02. "  DCTS ,Delta CTS" "noChng,chnged"
  bitfld.long 0x00 00. " CTS ,Clear to Send" "noAct,act"
  textline ""
  textline ">UMSTAT: UART channel Modem status register"
  textline "  DCTS : Delta CTS"
  textline "  CTS  : Clear to Send"
  textline ""

group 0x20++0x03  "UART TRANSMIT BUFFER REGISTER"
 hide.byte 0x00 "UTXH0,UART channel 0 transmit buffer register"

group 0x4020++0x03
 hide.byte 0x00 "UTXH1,UART channel 1 transmit buffer register"

group 0x8020++0x03
 hide.byte 0x00 "UTXH2,UART channel 2 transmit buffer register"
 textline ">UTXH: UART channel transmit buffer register"
 
group 0x24++0x03 "UART RECEIVE BUFFER REGISTER"
 hide.byte 0x00 "URXH0,UART channel 0 receive buffer register"
 in

group 0x4024++0x03
 hide.byte 0x00 "URXH1,UART channel 1 receive buffer register"
 in
 
group 0x8024++0x03
 hide.byte 0x00 "URXH2,UART channel 2 receive buffer register"
 in
 textline ">URXH2: UART channel 2 receive buffer register"

group  0x28++0x03 "UART BAUD RATE DIVISOR REGISTER"
 line.long 0x00 "UBRDIV0,Baud rate divisior register 0"
  hexmask.long 0x00 00.--15. 1. " UBRDIV ,Baud rate division value"

group 0x4028++0x03
 line.long 0x00 "UBRDIV1,Baud rate divisior register 1"
  hexmask.long 0x00 00.--15. 1. " UBRDIV ,Baud rate division value"

group 0x8028++0x03
 line.long 0x00 "UBRDIV2,Baud rate divisior register 2"
  hexmask.long 0x00 00.--15. 1. " UBRDIV ,Baud rate division value"
  textline ">UBRDIV: Baud rate divisior register "
  
tree.end

tree "9 USB HOST"
;begin include file s3c2410x/usbhost.ph
;parameters:
base  0x49000000

group 0x00++0x17 "Control and status group"
line.long 0x00 "REV,HcRevision"
line.long 0x04 "CTRL,HcControl"
line.long 0x08 "COMSTA,HcCommonStatus"
line.long 0x0c "INTSTA,HcInterruptStatus"
line.long 0x10 "INTEN,HcInterruptEnable"
line.long 0x14 "INTDIS,HcInterruptDisable"

group 0x18++1b "Memory pointer group"
line.long 0x00 "HCCA,HcHCCA"
line.long 0x04 "PCED,HcPeriodCuttentED"
line.long 0x08 "CHED,HcControlHeadED"
line.long 0x0c "CCED,HcControlCurrentED"
line.long 0x10 "BHED,HcBulkHeadED"
line.long 0x14 "BCED,HcBulkCurrentED"
line.long 0x18 "DH,HcDoneHead"

group 0x34++0x13 "Frame counter group" 
line.long 0x00 "RMITVL,HcRmInterval"
line.long 0x04 "FMREM,HcFmRemaining"
line.long 0x08 "FMNUM,HcFmNumber"
line.long 0x0c "PERIST,HcPeriodicStart"
line.long 0x10 "LSTHRSH,HcLSThreshold"


group 0x48++0x13 "Root hub group"
line.long 0x00 "RHDESA,HcRhDescriptorA"
line.long 0x04 "RHDESB,HcRhDescriptorB"
line.long 0x08 "RHSTA,HcRhStatus"
line.long 0x0c "RHPS1,HcRhPortStatus1"
line.long 0x10 "RHPS2,HcRhPortStatus2"

;end include file s3c2410x/usbhost.ph
tree.end

tree "10 USB DEVICE"

base 0x52000140
width 18.
;all in little endian mode

group 0x00++0x2f "USB DEVICE SPECIAL REGISTERS"
 line.long 0x00 "FUNC_ADDR_REG, Function address register" 
  bitfld.long 0x00 07. "  AU           ,ADDR_UPDATE" "clr,set" 
  hexmask.long 0x00 00.--06. 1. " ADDR      ,FUNCTION_ADDR" 
  

 line.long 0x04 "PWR_REG, Power management register" 
  bitfld.long 0x04 03. "  UR           ,USB_RESET" "clr,set"
  bitfld.long 0x04 02. " MR             ,MCU_RESUME" "clr,set"
  bitfld.long 0x04 01. " SM         ,SUSPEND_MODE" "clr,set"
  bitfld.long 0x04 00. " SE         ,SUSPEND_EN" "dis,ena"
  

 line.long 0x08 "EP_INT_REG,Endpoint interrupt register"
  bitfld.long 0x08 04. "  EP4          ,endpoint 4 interrupt" "clr,set"
  bitfld.long 0x08 03. " EP3            ,endpoint 3 interrupt" "clr,set"
  bitfld.long 0x08 02. " EP2        ,endpoint 2 interrupt" "clr,set"
  bitfld.long 0x08 01. " EP1        ,endpoint 1 interrupt" "clr,set"
  bitfld.long 0x08 00. " EP0        ,endpoint 0 interrupt" "clr,set"
  
 line.long 0x18 "USB_INT_REG, USB interrupt register"          
  bitfld.long 0x18 02. "  RESET        ,RESET Interrupt" "clr,set"
  bitfld.long 0x18 01. " RESUME         ,RESUME Interrupt" "clr,set"
  bitfld.long 0x18 00. " SUSP       ,SUSPEND Interrupt" "clr,set"
  

 line.long 0x1C "EP_INT_EN_REG,Endpoint interrupt enable register"
  bitfld.long 0x1c 04. "  EP4_INT_EN   ,EP4 Interrupt Enable bit" "dis,ena"
  bitfld.long 0x1c 03. " EP3_INT_EN     ,EP3 Interrupt Enable bit" "dis,ena"
  bitfld.long 0x1c 02. " EP2_INT_EN ,EP2 Interrupt Enable bit" "dis,ena"
  bitfld.long 0x1c 01. " EP1_INT_EN ,EP1 Interrupt Enable bit" "dis,ena"
  bitfld.long 0x1c 00. " EP0_INT_EN ,EP0 Interrupt Enable bit" "dis,ena"
  

 line.long 0x2C "USB_INT_EN_REG, USB Interrupt enable register"               
  bitfld.long 0x2c 02. "  RESET_INT_EN ,Reset interrupt enable bit" "dis,ena"
  bitfld.long 0x2c 00. " SUSPEND_INT_EN ,Suspend interrupt enable bit" "dis,ena"
  
  textline ""
  textline ">FUNC_ADDR_REG: Function address register"
  textline "  AU          : ADDR_UPDATE"
  textline "  ADDR        : FUNCTION_ADDR"
  textline ""
  textline ">PWR_REG: Power management register"
  textline "  UR    : USB_RESET"
  textline "  MR    : MCU_RESUME"
  textline "  SM    : SUSPEND_MODE"
  textline "  SE    : SUSPEND_EN"
  textline ""
  textline ">EP_INT_REG : Endpoint interrupt register"
  textline "    EP      : endpoint interrupt"
  textline ""
  textline ">USB_INT_REG: USB interrupt register"
  textline "  ESET      : RESET Interrupt"
  textline "  RESUME    : RESUME Interrupt"
  textline "  SUSP      : SUSPEND Interrupt"
  textline ""
  textline ">EP_INT_EN_REG: Endpoint interrupt enable register"
  textline "  EP_INT_EN   : EP Interrupt Enable bit"
  textline ""
  textline ">USB_INT_EN_REG : USB Interrupt enable register"
  textline "  RESET_INT_EN  : Reset interrupt enable bit"
  textline "  SUSPEND_INT_EN: Suspend interrupt enable bit"
  textline ""

group 0x30++0x07 "FRAME NUMBER REGISTER" 
 line.long 0x00 "FRAME_NUM1_REG, Frame number 1 register" 

 line.long 0x04 "FRAME_NUM2_REG, Frame number 2 register" 
 textline ">FRAME_NUM_REG: Frame number register"

group 0x38++0x03 "INDEX REGISTER" 
 line.long 0x00 "INDEX_REG, Index register"               
 textline ">INDEX_REG: Index register"

group 0x40++0x03 "MAX PACKET REGISTER" 
 line.long 0x00 "MAXP_REG, End Point MAX packet register"      
  bitfld.long 0x00 00.--03. "  MAXP , " "Res,8Byte,16Byte,-,32Byte,-,-,, 64Byte,-,-,-,-,-,-,-"
  textline ">MAXP_REG: End Point MAX packet register"
  textline ""
  
group 0x44++0x0b "CONTROL STATUS REGISTER" 
 line.long 0x00 "EP0_CSR, Endpoint 0 status register"      
  bitfld.long 0x00 07. "  SSE        ,The MCU should write a 1 to this bit to clear SETUP_END" "SET,CLEAR"
  bitfld.long 0x00 06. " SOPR        ,The MCU should write a 1 to this bit to clear OUT_PKT_RDY" "SET,CLEAR"
  bitfld.long 0x00 05. " SEND_STALL ,MCU should writes a 1 to this bit at the same time it clears OUT_PKT_RDY if it decodes an invalid token." "Finish,STALL"
  bitfld.long 0x00 04. " SETUP_END   ,The USB sets this bit when a control transfer ends before DATA_END is set. When the USB sets this bit. an interrupt is generated to the MCU. When such a condition occurs. the USB flushes the FIFO and invalidates MCU access to the FIFO." "CLEAR,SET"
  bitfld.long 0x00 03. " DATA_END  ,The MCU sets this bit below conditions: 1. After loading the last packet of data into the FIFO at the same time IN_PKT_RDY is set. 2. While it clears OUT_PKT_RDY after unloading the last packet of data. 3. For a zero length data phase." "SET,CLEAR"
  bitfld.long 0x00 02. " SENT_STALL ,The USB sets this bit if a control transaction is stopped due to a protocol violation. An interrupt is generated when this bit is set. The MCU should write 0 to clear this bit." "CLEAR,SET"
  textline "                            "
  bitfld.long 0x00 01. " IN_PKT_RDY ,The MCU sets this bit after writing a packet of data into EP0 FIFO. The USB clears this bit once the packet has been successfully sent to the host. " "SET,CLEAR"
  bitfld.long 0x00 00. " OUT_PKT_RDY ,The USB sets this bit once a valid token is written to the FIFO. An interrupt is generated when the USB sets this bit. The MCU clears this bit by writing a 1 to the SERVICED_OUT_PKT_RDY bit." "CLEAR,SET"
  

 line.long 0x00 "IN_CSR1_REG, IN END POINT control status register1"      
  bitfld.long 0x00 06. "  CRT        ,This bit can be used in Set-up procedure." "SET,CLEAR"
  bitfld.long 0x00 05. " SENT_STALL  ,The USB sets this bit when an IN token issues a STALL handshake after the MCU sets SEND_STALL bit to start STALL handshaking. When the USB issues a STALL handshake IN_PKT_RDY is cleared" "SET,CLEAR"
  bitfld.long 0x00 04. " SEND_STALL  ,The MCU clears this bit to finish the STALL condition./ The MCU issues a STALL handshake to the USB." "CLEAR,STALL"
  bitfld.long 0x00 03. " FIFO_FLUSH  ,The MCU sets this bit if it intends to flush the packet in Input-related FIFO." "SET,CLEAR"
  bitfld.long 0x00 00. " IN_PKT_RDY ,The MCU sets this bit after writing a packet of data into the FIFO. The USB clears this bit once the packet has been successfully sent to the host." "SET,CLEAR"
  

 line.long 0x04 "IN_CSR2_REG, IN END POINT control status register2"      
  bitfld.long 0x04 07. "  AUTO_SET ,If set whenever the MCU writes MAXP data IN_PKT_RDY will automatically be set by the core  without any intervention from MCU. If the MCU writes less than MAXP data then IN_PKT_RDY bit has to be set by the MCU." "CLEAR,SET"
  bitfld.long 0x04 06. "   ISO          ,This bit is used only for endpoints whose transfer type is programmable." "ISO,Bulk"
  bitfld.long 0x04 05. " MODE_IN       ,This bit is used only for endpoints whose direction is programmable." "IN,OUT"
  bitfld.long 0x04 04. " IN_DMA_INT_EN ,This bit determines whether the interrupt should be issued or not when the EP1 IN_PKT_RDY condition happens. This is only useful for DMA mode." "ENA,DIS"
  textline ""
  textline ">EP0_CSR     : Endpoint 0 status register"
  textline "  SSE        : The MCU should write a 1 to this bit to clear SETUP_END"
  textline "  SOPR       : The MCU should write a 1 to this bit to clear OUT_PKT_RDY"
  textline "  SEND_STALL : MCU should writes a 1 to this bit at the same time it clears OUT_PKT_RDY if it decodes an invalid token."
  textline "  SETUP_END  : The USB sets this bit when a control transfer ends before DATA_END is set."
  textline "  DATA_END   : The MCU sets this bit below conditions"
  textline "  IN_PKT_RDY : The MCU sets this bit after writing a packet of data into EP0 FIFO."
  textline "  OUT_PKT_RDY: The USB sets this bit once a valid token is written to the FIFO."
  textline ""
  textline ">IN_CSR1_REG: IN END POINT control status register1"
  textline "  CRT       : This bit can be used in Set-up procedure."
  textline "  SENT_STALL: The USB sets this bit."
  textline "  SEND_STALL: The MCU clears this bit to finish the STALL condition."
  textline "  FIFO_FLUSH: The MCU sets this bit if it intends to flush the packet in Input-related FIFO."
  textline "  UNDER_RUN : Valid For Iso Mode Only The USB sets this bit."
  textline "  IN_PKT_RDY: The MCU sets this bit after writing a packet of data into the FIFO."
  textline ""
  textline ">IN_CSR2_REG   : IN END POINT control status register2"
  textline "  AUTO_SET     : If set whenever the MCU writes MAXP data IN_PKT_RDY will automatically be" 
  textline "                 set by the core  without any intervention from MCU."
  textline "  ISO          : This bit is used only for endpoints whose transfer type is programmable."
  textline "  MODE_IN      : This bit is used only for endpoints whose direction is programmable."
  textline "  IN_DMA_INT_EN: This bit determines whether the interrupt should be issued or not when the EP1 IN_PKT_RDY condition happens."
  textline ""

group 0x50++0x07 "END POINT OUT CONTROL STATUS REGISTER" 
 line.long 0x00 "OUT_CSR1_REG, End point out control status register1"      
  bitfld.long 0x00 07. "  CLR_DATA_TOGGLE ,When the MCU writes a 1 to this bit the data toggle sequence bit is reset to DATA0." "CLEAR,SET"
  bitfld.long 0x00 06. " SENT_STALL ,The USB sets this bit when an OUT token is ended with a STALL handshake. The USB is sues a stall handshake to the host if it sends more than MAXP data for the OUT TOKEN." "SET,CLEAR"
  bitfld.long 0x00 05. " SEND_STALL    ,The MCU clears this bit to end the STALL condition handshake IN PKT RDY is cleared. 1 : The MCU issues a STALL handshake to the USB. The MCU clears this bit to end the STALL condition handshake IN PKT RDY is cleared." "CLEAR,STALL"
  bitfld.long 0x00 04. " FIFO_FLUSH   ,The MCU write a 1 to flush the FIFO. This bit can be set only when OUT_PKT_RDY (D0) is set. The packet due to be unloaded by the MCU will be flushed." "CLEAR,SET"
  bitfld.long 0x00 00. "  OUT_PKT_RDY ,The USB sets this bit after it has loaded a packet of data into the FIFO. Once the MCU reads the packet from FIFO this bit should be cleared by MCU." "SET,CLEAR"
  

 line.long 0x04 "OUT_CSR2_REG, End Point out control status register2"      
  bitfld.long 0x04 07. "  AUTO_CLR        ,If MCU set whenever the MCU reads data from the OUT FIFO. OUT_PKT_RDY will automatically be cleared by the logic without any intervention from MCU." "READ,CLEAR"
  bitfld.long 0x04 06. " ISO         ,This bit determines endpoint transfer type." "Bulk,ISO"
  bitfld.long 0x04 05. " OUT_DMA_INT_EN  ,This bit determines whether the interrupt should be issued or not. OUT_PKT_RDY condition happens. This is only useful for DMA mode" "Ena,Dis"
  textline ""
  textline ">OUT_CSR1_REG    : End point out control status register1"
  textline "  CLR_DATA_TOGGLE: When the MCU writes a 1 to this bit the data toggle sequence bit is reset to DATA0."
  textline "  SENT_STALL     : The USB sets this bit when an OUT token is ended with a STALL handshake."
  textline "  SEND_STALL     : The MCU clears this bit to end the STALL condition handshake IN PKT RDY is cleared."
  textline "  FIFO_FLUSH     : The MCU write a 1 to flush the FIFO."
  textline "  OUT_PKT_RDY    : The USB sets this bit after it has loaded a packet of data into the FIFO."
  textline ""
  textline ">OUT_CSR2_REG   : End Point out control status register2"
  textline "  AUTO_CLR      : If MCU set whenever the MCU reads data from the OUT FIFO."
  textline "  ISO           : This bit determines endpoint transfer type."
  textline "  OUT_DMA_INT_EN: This bit determines whether the interrupt should be issued or not."
  textline ""

group 0x58++0x0b "END POINT OUT WRITE COUNT REGISTER" 
 line.long 0x00 "OUT_FCT1_REG, End Point out write count register1"      
  
 line.long 0x04 "OUT_FCT2_REG, End Point out write count register2"

group 0x80++0x13 "END POINT FIFO REGISTER"
 line.long 0x00 "EP0_FIFO_REG, Endpoint0 FIFO register" 
 line.long 0x04 "EP1_FIFO_REG, Endpoint1 FIFO register" 
 line.long 0x08 "EP2_FIFO_REG, Endpoint2 FIFO register" 
 line.long 0x0c "EP3_FIFO_REG, Endpoint3 FIFO register" 
 line.long 0x10 "EP4_FIFO_REG, Endpoint4 FIFO register" 
 
group 0xc0++0x17 "DMA REGISTER1" 
 line.long 0x00 "EP1_CON, Endpoint1 DMA control register"      
  bitfld.long 0x00 07. "  IRO ,IN_RUN_OB-(Read)IN_DMA_Run Observation and (Write)Ignore EPn_DMA_TTC_n register" "0,1"
  bitfld.long 0x00 04.--06. " STATE ,DMA State Monitoring" "0,1,2,3,4,5,6,7"
  bitfld.long 0x00 03. " DM ,DEMAND_MODE-DMA Demand mode enable bit" "dis,ena"
  bitfld.long 0x00 02. " ORO/ODR ,OUT_RUN_OB/OUT_DMA_RUN-Functionally separated into write and read operation" "0,1"
  bitfld.long 0x00 01. " IDR ,IN_DMA_RUN-Start DMA operation" "stop,run"
  bitfld.long 0x00 00. " DME ,DMA_MODE_EN" "int,DMA"
 
 line.long 0x04 "EP1_UNIT, Endpoint1 DMA unit counter register" 
 line.long 0x08 "EP1_FIFO, Endpoint1 DMA FIFO counter register" 
 line.long 0x0C "EP1_TTCL, Endpoint1 DMA transfer counter low-byte register"    
 line.long 0x10 "EP1_TTCM, Endpoint1 DMA transfer counter middle-byte register" 
 line.long 0x14 "EP1_TTCH, Endpoint1 DMA transfer counter high-byte register"   
 
group 0xd8++0x17 "DMA REGISTER2"
 line.long 0x00 "EP2_CON, Endpoint2 DMA control register"       
  bitfld.long 0x00 07. "  IRO ,IN_RUN_OB-(Read)IN_DMA_Run Observation and (Write)Ignore EPn_DMA_TTC_n register" "0,1"
  bitfld.long 0x00 04.--06. " STATE ,DMA State Monitoring" "0,1,2,3,4,5,6,7"
  bitfld.long 0x00 03. " DM ,DEMAND_MODE-DMA Demand mode enable bit" "dis,ena"
  bitfld.long 0x00 02. " ORO/ODR ,OUT_RUN_OB/OUT_DMA_RUN-Functionally separated into write and read operation" "0,1"
  bitfld.long 0x00 01. " IDR ,IN_DMA_RUN-Start DMA operation" "stop,run"
  bitfld.long 0x00 00. " DME ,DMA_MODE_EN" "int,DMA"

 line.long 0x04 "EP2_UNIT, Endpoint2 DMA unit counter register" 
 line.long 0x08 "EP2_FIFO, Endpoint2 DMA FIFO counter register" 
 line.long 0x0c "EP2_TTCL, Endpoint2 DMA transfer counter low-byte register"    
 line.long 0x10 "EP2_TTCM, Endpoint2 DMA transfer counter middle-byte register" 
 line.long 0x14 "EP2_TTCH, Endpoint2 DMA transfer counter high-byte register"   

group 0x100++0x17 "DMA REGISTER3"
 line.long 0x00 "EP3_CON, Endpoint3 DMA control register"       
  bitfld.long 0x00 07. "  IRO ,IN_RUN_OB-(Read)IN_DMA_Run Observation and (Write)Ignore EPn_DMA_TTC_n register" "0,1"
  bitfld.long 0x00 04.--06. " STATE ,DMA State Monitoring" "0,1,2,3,4,5,6,7"
  bitfld.long 0x00 03. " DM ,DEMAND_MODE-DMA Demand mode enable bit" "dis,ena"
  bitfld.long 0x00 02. " ORO/ODR ,OUT_RUN_OB/OUT_DMA_RUN-Functionally separated into write and read operation" "0,1"
  bitfld.long 0x00 01. " IDR ,IN_DMA_RUN-Start DMA operation" "stop,run"
  bitfld.long 0x00 00. " DME ,DMA_MODE_EN" "int,DMA"


 line.long 0x04 "EP3_UNIT, Endpoint3 DMA unit counter register" 
 line.long 0x08 "EP3_FIFO, Endpoint3 DMA FIFO counter register" 
 line.long 0x0C "EP3_TTCL, Endpoint3 DMA transfer counter low-byte register"    
 line.long 0x10 "EP3_TTCM, Endpoint3 DMA transfer counter middle-byte register" 
 line.long 0x14 "EP3_TTCH, Endpoint3 DMA transfer counter high-byte register"   

group 0x118++0x17 "DMA REGISTER3"
 line.long 0x00 "EP4_CON, Endpoint4 DMA control register"       
  bitfld.long 0x00 07. "  IRO ,IN_RUN_OB-(Read)IN_DMA_Run Observation and (Write)Ignore EPn_DMA_TTC_n register" "0,1"
  bitfld.long 0x00 04.--06. " STATE ,DMA State Monitoring" "0,1,2,3,4,5,6,7"
  bitfld.long 0x00 03. " DM ,DEMAND_MODE-DMA Demand mode enable bit" "dis,ena"
  bitfld.long 0x00 02. " ORO/ODR ,OUT_RUN_OB/OUT_DMA_RUN-Functionally separated into write and read operation" "0,1"
  bitfld.long 0x00 01. " IDR ,IN_DMA_RUN-Start DMA operation" "stop,run"
  bitfld.long 0x00 00. " DME ,DMA_MODE_EN" "int,DMA"

 line.long 0x04 "EP4_UNIT, Endpoint4 DMA unit counter register" 
 line.long 0x08 "EP4_FIFO, Endpoint4 DMA FIFO counter register" 
 line.long 0x0c "EP4_TTCL, Endpoint4 DMA transfer counter low-byte register"    
 line.long 0x10 "EP4_TTCM, Endpoint4 DMA transfer counter middle-byte register" 
 line.long 0x14 "EP4_TTCH, Endpoint4 DMA transfer counter high-byte register"  
  textline ""
  textline ">EP_CON  : Endpoint1 DMA control register"
  textline "  IRO    : IN_RUN_OB-(Read)IN_DMA_Run Observation and (Write)Ignore EPn_DMA_TTC_n register"
  textline "  STATE  : DMA State Monitoring"
  textline "  DM     : DEMAND_MODE-DMA Demand mode enable bit"
  textline "  ORO/ODR: OUT_RUN_OB/OUT_DMA_RUN-Functionally separated into write and read operation"
  textline "  IDR    : IN_DMA_RUN-Start DMA operation"
  textline "  DME    : DMA_MODE_EN"
  textline ">EP_UNIT : Endpoint DMA unit counter register"
  textline ">EP_FIFO : Endpoint DMA FIFO counter register"
  textline ">EP_TTCL : Endpoint DMA transfer counter low-byte register"
  textline ">EP_TTCM : Endpoint DMA transfer counter middle-byte register"
  textline ">EP_TTCH : Endpoint DMA transfer counter high-byte register"
textline ""
tree.end


tree "11 INTERRUPT CONTROLLER"
;begin include file s3c2410x/ic.ph
;parameters:
base 0X4A000000
width 10. 

group 0x00++0x03
 line.long 0x00 "SRCPND,SOURCE PENDING REGISTER"
   bitfld.long 0x00 31. "  INT_ADC    ," "noReq,req"
   bitfld.long 0x00 30. " INT_RTC    ," "noReq,req"
   bitfld.long 0x00 29. " INT_SPI1   ," "noReq,req"
   bitfld.long 0x00 28. " INT_UART0  ," "noReq,req"
   bitfld.long 0x00 27. " INT_IIC    ," "noReq,req"
   bitfld.long 0x00 26. " INT_USBH   ," "noReq,req"
   textline "                    "
   bitfld.long 0x00 25. " INT_USBD   ," "noReq,req"
   bitfld.long 0x00 23. " INT_UART1  ," "noReq,req"
   bitfld.long 0x00 22. " INT_SPI0   ," "noReq,req"
   bitfld.long 0x00 21. " INT_SDI    ," "noReq,req"
   bitfld.long 0x00 20. " INT_DMA3   ," "noReq,req"
   bitfld.long 0x00 19. " INT_DMA2   ," "noReq,req"
   textline "                    "
   bitfld.long 0x00 18. " INT_DMA1   ," "noReq,req"
   bitfld.long 0x00 17. " INT_DMA0   ," "noReq,req"
   bitfld.long 0x00 16. " INT_LCD    ," "noReq,req"
   bitfld.long 0x00 15. " INT_UART2  ," "noReq,req"
   bitfld.long 0x00 14. " INT_TIMER4 ," "noReq,req" 
   bitfld.long 0x00 13. " INT_TIMER3 ," "noReq,req"
   textline "                    "
   bitfld.long 0x00 12. " INT_TIMER2 ," "noReq,req"
   bitfld.long 0x00 11. " INT_TIMER1 ," "noReq,req"
   bitfld.long 0x00 10. " INT_TIMER0 ," "noReq,req" 
   bitfld.long 0x00 09. " INT_WDT    ," "noReq,req"
   bitfld.long 0x00 08. " INT_TICK   ," "noReq,req"
   bitfld.long 0x00 07. " nBATT_FLT  ," "noReq,req"
   textline "                    "
   bitfld.long 0x00 05. " EINT8_23   ," "noReq,req"
   bitfld.long 0x00 04. " EINT4_7    ," "noReq,req"
   bitfld.long 0x00 03. " EINT3      ," "noReq,req"  
   bitfld.long 0x00 02. " EINT2      ," "noReq,req" 
   bitfld.long 0x00 01. " EINT1      ," "noReq,req" 
   bitfld.long 0x00 00. " EINT0      ," "noReq,req" 
textline ">SRCPND: SOURCE PENDING REGISTER"
textline ""

group 0x04++0x03 
 line.long 0x00 "INTMOD,INTERRUPT MODE REGISTER"
   bitfld.long 0x00 31. "  INT_ADC    ," "IRQ,FIQ"
   bitfld.long 0x00 30. " INT_RTC    ," "IRQ,FIQ"
   bitfld.long 0x00 29. " INT_SPI1   ," "IRQ,FIQ"
   bitfld.long 0x00 28. " INT_UART0  ," "IRQ,FIQ"
   bitfld.long 0x00 27. " INT_IIC    ," "IRQ,FIQ"
   bitfld.long 0x00 26. " INT_USBH   ," "IRQ,FIQ"
   textline "                    "
   bitfld.long 0x00 25. " INT_USBD   ," "IRQ,FIQ"
   bitfld.long 0x00 23. " INT_UART1  ," "IRQ,FIQ"
   bitfld.long 0x00 22. " INT_SPI0   ," "IRQ,FIQ"
   bitfld.long 0x00 21. " INT_SDI    ," "IRQ,FIQ"
   bitfld.long 0x00 20. " INT_DMA3   ," "IRQ,FIQ"
   bitfld.long 0x00 19. " INT_DMA2   ," "IRQ,FIQ"
   textline "                    "
   bitfld.long 0x00 18. " INT_DMA1   ," "IRQ,FIQ"
   bitfld.long 0x00 17. " INT_DMA0   ," "IRQ,FIQ"
   bitfld.long 0x00 16. " INT_LCD    ," "IRQ,FIQ"
   bitfld.long 0x00 15. " INT_UART2  ," "IRQ,FIQ"
   bitfld.long 0x00 14. " INT_TIMER4 ," "IRQ,FIQ" 
   bitfld.long 0x00 13. " INT_TIMER3 ," "IRQ,FIQ"
   textline "                    "
   bitfld.long 0x00 12. " INT_TIMER2 ," "IRQ,FIQ"
   bitfld.long 0x00 11. " INT_TIMER1 ," "IRQ,FIQ"
   bitfld.long 0x00 10. " INT_TIMER0 ," "IRQ,FIQ" 
   bitfld.long 0x00 09. " INT_WDT    ," "IRQ,FIQ"
   bitfld.long 0x00 08. " INT_TICK   ," "IRQ,FIQ"
   bitfld.long 0x00 07. " nBATT_FLT  ," "IRQ,FIQ"
   textline "                    "
   bitfld.long 0x00 05. " EINT8_23   ," "IRQ,FIQ"
   bitfld.long 0x00 04. " EINT4_7    ," "IRQ,FIQ"
   bitfld.long 0x00 03. " EINT3      ," "IRQ,FIQ"  
   bitfld.long 0x00 02. " EINT2      ," "IRQ,FIQ" 
   bitfld.long 0x00 01. " EINT1      ," "IRQ,FIQ" 
   bitfld.long 0x00 00. " EINT0      ," "IRQ,FIQ" 
textline ">INTMOD: INTERRUPT MODE REGISTER"
textline ""

group 0x08++0x03
 line.long 0x00 "INTMSK,INTERRUPT MASK REGISTER"
   bitfld.long 0x00 31. "  INT_ADC    ," "ena,msk"
   bitfld.long 0x00 30. " INT_RTC    ," "ena,msk"
   bitfld.long 0x00 29. " INT_SPI1   ," "ena,msk"
   bitfld.long 0x00 28. " INT_UART0  ," "ena,msk"
   bitfld.long 0x00 27. " INT_IIC    ," "ena,msk"
   bitfld.long 0x00 26. " INT_USBH   ," "ena,msk"
   textline "                    "
   bitfld.long 0x00 25. " INT_USBD   ," "ena,msk"
   bitfld.long 0x00 23. " INT_UART1  ," "ena,msk"
   bitfld.long 0x00 22. " INT_SPI0   ," "ena,msk"
   bitfld.long 0x00 21. " INT_SDI    ," "ena,msk"
   bitfld.long 0x00 20. " INT_DMA3   ," "ena,msk"
   bitfld.long 0x00 19. " INT_DMA2   ," "ena,msk"
   textline "                    "
   bitfld.long 0x00 18. " INT_DMA1   ," "ena,msk"
   bitfld.long 0x00 17. " INT_DMA0   ," "ena,msk"
   bitfld.long 0x00 16. " INT_LCD    ," "ena,msk"
   bitfld.long 0x00 15. " INT_UART2  ," "ena,msk"
   bitfld.long 0x00 14. " INT_TIMER4 ," "ena,msk" 
   bitfld.long 0x00 13. " INT_TIMER3 ," "ena,msk"
   textline "                    "
   bitfld.long 0x00 12. " INT_TIMER2 ," "ena,msk"
   bitfld.long 0x00 11. " INT_TIMER1 ," "ena,msk"
   bitfld.long 0x00 10. " INT_TIMER0 ," "ena,msk" 
   bitfld.long 0x00 09. " INT_WDT    ," "ena,msk"
   bitfld.long 0x00 08. " INT_TICK   ," "ena,msk"
   bitfld.long 0x00 07. " nBATT_FLT  ," "ena,msk"
   textline "                    "
   bitfld.long 0x00 05. " EINT8_23   ," "ena,msk"
   bitfld.long 0x00 04. " EINT4_7    ," "ena,msk"
   bitfld.long 0x00 03. " EINT3      ," "ena,msk"  
   bitfld.long 0x00 02. " EINT2      ," "ena,msk" 
   bitfld.long 0x00 01. " EINT1      ," "ena,msk" 
   bitfld.long 0x00 00. " EINT0      ," "ena,msk" 
textline ">INTMSK: INTERRUPT MASK REGISTER"
textline ""

group 0x0c++0x03
 line.long 0x00 "PRIORITY,PRIORITY REGISTER"
   bitfld.long 0x00 19.--20. "  ARB_SEL6 ,Arbiter 6 group priority order set" "0-1-2-3-4-5,0-2-3-4-1-5,0-3-4-1-2-5,0-4-1-2-3-5"
   bitfld.long 0x00 17.--18. " ARB_SEL5 ,Arbiter 5 group priority order set" "1-2-3-4,2-3-4-1,3-4-1-2,4-1-2-3"
   bitfld.long 0x00 15.--16. " ARB_SEL4 ,Arbiter 4 group priority order set" "0-1-2-3-4-5,0-2-3-4-1-5,0-3-4-1-2-5,0-4-1-2-3-5"
   bitfld.long 0x00 13.--14. " ARB_SEL3 ,Arbiter 3 group priority order set" "0-1-2-3-4-5,0-2-3-4-1-5,0-3-4-1-2-5,0-4-1-2-3-5"
   bitfld.long 0x00 11.--12. " ARB_SEL2 ,Arbiter 2 group priority order set" "0-1-2-3-4-5,0-2-3-4-1-5,0-3-4-1-2-5,0-4-1-2-3-5"
   textline "                    "
   bitfld.long 0x00 09.--10. " ARB_SEL1 ,Arbiter 1 group priority order set" "0-1-2-3-4-5,0-2-3-4-1-5,0-3-4-1-2-5,0-4-1-2-3-5"
   bitfld.long 0x00 07.--08. " ARB_SEL0 ,Arbiter 0 group priority order set" "1-2-3-4,2-3-4-1,3-4-1-2,4-1-2-3"
   bitfld.long 0x00 06. " ARB_MODE6        ,Arbiter 6 group priority rotate enable" "dis,ena"
   bitfld.long 0x00 05. " ARB_MODE5        ,Arbiter 5 group priority rotate enable" "dis,ena"
   bitfld.long 0x00 04. " ARB_MODE4        ,Arbiter 4 group priority rotate enable" "dis,ena"
   textline "                    "
   bitfld.long 0x00 03. " ARB_MODE3        ,Arbiter 3 group priority rotate enable" "dis,ena"
   bitfld.long 0x00 02. " ARB_MODE2    ,Arbiter 2 group priority rotate enable" "dis,ena"
   bitfld.long 0x00 01. " ARB_MODE1        ,Arbiter 1 group priority rotate enable" "dis,ena"
   bitfld.long 0x00 00. " ARB_MODE0        ,Arbiter 0 group priority rotate enable" "dis,ena"
textline ">PRIORITY: PRIORITY REGISTER"
textline ""

group 0x10++0x03
 line.long 0x00 "INTPND,INTERRUPT PENDING REGISTER"
   bitfld.long 0x00 31. "  INT_ADC    ," "noReq,req"
   bitfld.long 0x00 30. " INT_RTC    ," "noReq,req"
   bitfld.long 0x00 29. " INT_SPI1   ," "noReq,req"
   bitfld.long 0x00 28. " INT_UART0  ," "noReq,req"
   bitfld.long 0x00 27. " INT_IIC    ," "noReq,req"
   bitfld.long 0x00 26. " INT_USBH   ," "noReq,req"
   textline "                    "
   bitfld.long 0x00 25. " INT_USBD   ," "noReq,req"
   bitfld.long 0x00 23. " INT_UART1  ," "noReq,req"
   bitfld.long 0x00 22. " INT_SPI0   ," "noReq,req"
   bitfld.long 0x00 21. " INT_SDI    ," "noReq,req"
   bitfld.long 0x00 20. " INT_DMA3   ," "noReq,req"
   bitfld.long 0x00 19. " INT_DMA2   ," "noReq,req"
   textline "                    "
   bitfld.long 0x00 18. " INT_DMA1   ," "noReq,req"
   bitfld.long 0x00 17. " INT_DMA0   ," "noReq,req"
   bitfld.long 0x00 16. " INT_LCD    ," "noReq,req"
   bitfld.long 0x00 15. " INT_UART2  ," "noReq,req"
   bitfld.long 0x00 14. " INT_TIMER4 ," "noReq,req" 
   bitfld.long 0x00 13. " INT_TIMER3 ," "noReq,req"
   textline "                    "
   bitfld.long 0x00 12. " INT_TIMER2 ," "noReq,req"
   bitfld.long 0x00 11. " INT_TIMER1 ," "noReq,req"
   bitfld.long 0x00 10. " INT_TIMER0 ," "noReq,req" 
   bitfld.long 0x00 09. " INT_WDT    ," "noReq,req"
   bitfld.long 0x00 08. " INT_TICK   ," "noReq,req"
   bitfld.long 0x00 07. " nBATT_FLT  ," "noReq,req"
   textline "                    "
   bitfld.long 0x00 05. " EINT8_23   ," "noReq,req"
   bitfld.long 0x00 04. " EINT4_7    ," "noReq,req"
   bitfld.long 0x00 03. " EINT3      ," "noReq,req"  
   bitfld.long 0x00 02. " EINT2      ," "noReq,req" 
   bitfld.long 0x00 01. " EINT1      ," "noReq,req" 
   bitfld.long 0x00 00. " EINT0      ," "noReq,req" 
textline ">INTPND: INTERRUPT PENDING REGISTER"
textline ""

group 0x14++0x03
 line.long 0x00 "INTOFFSET,INTERRUPT OFFSET REGISTER"
   bitfld.long 0x00 31. "  INT_ADC    ," "0,1"
   bitfld.long 0x00 30. " INT_RTC    ," "0,1"
   bitfld.long 0x00 29. " INT_SPI1   ," "0,1"
   bitfld.long 0x00 28. " INT_UART0  ," "0,1"
   bitfld.long 0x00 27. " INT_IIC    ," "0,1"
   bitfld.long 0x00 26. " INT_USBH   ," "0,1"
   textline "                    "
   bitfld.long 0x00 25. " INT_USBD   ," "0,1"
   bitfld.long 0x00 23. " INT_UART1  ," "0,1"
   bitfld.long 0x00 22. " INT_SPI0   ," "0,1"
   bitfld.long 0x00 21. " INT_SDI    ," "0,1"
   bitfld.long 0x00 20. " INT_DMA3   ," "0,1"
   bitfld.long 0x00 19. " INT_DMA2   ," "0,1"
   textline "                    "
   bitfld.long 0x00 18. " INT_DMA1   ," "0,1"
   bitfld.long 0x00 17. " INT_DMA0   ," "0,1"
   bitfld.long 0x00 16. " INT_LCD    ," "0,1"
   bitfld.long 0x00 15. " INT_UART2  ," "0,1"
   bitfld.long 0x00 14. " INT_TIMER4 ," "0,1" 
   bitfld.long 0x00 13. " INT_TIMER3 ," "0,1"
   textline "                    "
   bitfld.long 0x00 12. " INT_TIMER2 ," "0,1"
   bitfld.long 0x00 11. " INT_TIMER1 ," "0,1"
   bitfld.long 0x00 10. " INT_TIMER0 ," "0,1" 
   bitfld.long 0x00 09. " INT_WDT    ," "0,1"
   bitfld.long 0x00 08. " INT_TICK   ," "0,1"
   bitfld.long 0x00 07. " nBATT_FLT  ," "0,1"
   textline "                    "
   bitfld.long 0x00 05. " EINT8_23   ," "0,1"
   bitfld.long 0x00 04. " EINT4_7    ," "0,1"
   bitfld.long 0x00 03. " EINT3      ," "0,1"  
   bitfld.long 0x00 02. " EINT2      ," "0,1" 
   bitfld.long 0x00 01. " EINT1      ," "0,1" 
   bitfld.long 0x00 00. " EINT0      ," "0,1" 
textline ">INTOFFSET: INTERRUPT OFFSET REGISTER"
textline ""

group 0x18++0x03
 line.long 0x00 "SUBSRCPND,SUB SOURCE PENDING REGISTER"
   bitfld.long 0x00 14. "  INT_AC97 ," "noReq,req"
   bitfld.long 0x00 13. " INT_WDT  ," "noReq,req" 
   bitfld.long 0x00 12. " INT_CAM_P ," "noReq,req"
   bitfld.long 0x00 11. " INT_CAM_C ," "noReq,req"
   bitfld.long 0x00 10. " INT_ADC   ," "noReq,req"
   bitfld.long 0x00 9. " INT_TC   ," "noReq,req" 
   bitfld.long 0x00 8. " INT_ERR2 ," "noReq,req"
   bitfld.long 0x00 7. " INT_TXD2 ," "noReq,req"
   textline "                    "
   bitfld.long 0x00 6. " INT_RXD2 ," "noReq,req"
   bitfld.long 0x00 5. " INT_ERR1 ," "noReq,req"
   bitfld.long 0x00 4. " INT_TXD1  ," "noReq,req"
   bitfld.long 0x00 3. " INT_RXD1  ," "noReq,req"
   bitfld.long 0x00 2. " INT_ERR0  ," "noReq,req"
   bitfld.long 0x00 1. " INT_TXD0 ," "noReq,req"
   bitfld.long 0x00 0. " INT_RXD0 ," "noReq,req"
textline ">SUBSRCPND: SUB SOURCE PENDING REGISTER"
textline ""

group 0x1c++0x03
 line.long 0x00 "INTSUBMSK,INTERRUPT SUB MASK REGISTER"
   bitfld.long 0x00 14. "  INT_AC97 ," "ena,msk"
   bitfld.long 0x00 13. " INT_WDT  ," "ena,msk" 
   bitfld.long 0x00 12. " INT_CAM_P ," "ena,msk"
   bitfld.long 0x00 11. " INT_CAM_C ," "ena,msk"
   bitfld.long 0x00 10. " INT_ADC  ," "ena,msk"
   bitfld.long 0x00 9. " INT_TC   ," "ena,msk" 
   bitfld.long 0x00 8. " INT_ERR2 ," "ena,msk"
   bitfld.long 0x00 7. " INT_TXD2 ," "ena,msk"
   textline "                    "
   bitfld.long 0x00 6. " INT_RXD2 ," "ena,msk"
   bitfld.long 0x00 5. " INT_ERR1 ," "ena,msk"
   bitfld.long 0x00 4. " INT_TXD1  ," "ena,msk"
   bitfld.long 0x00 3. " INT_RXD1  ," "ena,msk"
   bitfld.long 0x00 2. " INT_ERR0 ," "ena,msk"
   bitfld.long 0x00 1. " INT_TXD0 ," "ena,msk"
   bitfld.long 0x00 0. " INT_RXD0 ," "ena,msk"
textline ">INTSUBMSK:INTERRUPT SUB MASK REGISTER"

;end include file s3c2410x/ic.ph
tree.end

tree "12 LCD"
;begin include file s3c2410x/lcd.ph
;parameters:

base 0x4D000000

group 0x00++0x13   "LCD CONTROLLER SPECIAL REGISTERS"
 line.long 0x00 "LCDCON1,LCD Control 1 Register"
  hexmask.long 0x00 18.--27. 1. "  LINECNT   ,Provide the status of the line counter"
  hexmask.long 0x00 08.--17. 1. " CLKVAL    ,Determine the rates of VCLK and CLKVAL[9:0]"
  bitfld.long 0x00 07. " MMODE   ,Determine the toggle rate of the VM" "frame,MVAL"
  bitfld.long 0x00 05.--06. " PNRMODE ,Select the display mode" "4bitDualScan,4bitSnglScan,8bitSnglScan,TFTlcd"
  textline "                    "
  bitfld.long 0x00 01.--04. " BPPMODE   ,Select the BPP (Bits Per Pixel) mode" "1bbp4STN/mono,2bbp4STN/4lvlGray,4bbp4STN/16lvlGray,8bpp4STN/color,12bpp4STN/color,-,-,-,1bpp4TFT,2bpp4TFT,4bpp4TFT,8bpp4TFT,16bpp4TFT,24bpp4TFT,-,-"
  bitfld.long 0x00 00. "          ENVID     ,LCD video output and the logic enable/disable" "dis,ena"
  textline ""
  textline ">LCDCON1 : LCD Control 1 Registe"
  textline "  LINECNT: Provide the status of the line counter"
  textline "  CLKVAL : Determine the rates of VCLK and CLKVAL[9:0]"
  textline "  MMODE  : Determine the toggle rate of the VM"
  textline "  PNRMODE: Select the display mode"
  textline "  BPPMODE: Select the BPP (Bits Per Pixel) mode"
  textline "  ENVID  : LCD video output and the logic enable/disable"
  textline ""

 line.long 0x04 "LCDCON2,LCD Control 2 Register"
  hexmask.long 0x04 24.--31. 1. "  VBPD      ,TFT:Vertical back porch/STN:These bits should be set to zero on STN LCD"
  hexmask.long 0x04 14.--23. 1. " LINEVAL   ,TFT/STN: These bits determine the vertical size of LCD panel"
  hexmask.long 0x04 06.--13. 1. " VFPD ,TFT:Vertical front porch/STN:These bits should be set to zero on STN LCD"
  hexmask.long 0x04 00.--05. 1. " VSPW ,TFT: Vertical sync pulse width/STN:These bits should be set to zero on STN LCD"
  
 line.long 0x08 "LCDCON3,LCD Control 3 Register"
  hexmask.long 0x08 19.--25. 1. "  HBPD/WDLY ,HBPD(TFT):Horizontal back porch/WDLY(STN)WDLY[1:0] delay between VLINE and VCLK by counting the number of the HCLK and WDLY[7:2] are reserved"
  hexmask.long 0x08 08.--18. 1. " HOZVAL    ,TFT/STN: These bits determine the horizontal size of LCD panel"
  hexmask.long 0x08 00.--07. 1. " HFPD ,TFT: Horizontal front porch/LINEBLANK(STN): blank time in one horizontal line duration time"
  
 line.long 0x0c "LCDCON4,LCD Control 4 Register"
  hexmask.long 0x0c 08.--15. 1. "  MVAL      ,STN:rate at which VM signal will toggle if MMODE bit is set to logic '1'"  
  hexmask.long 0x0c 00.--07. 1. " HSPW(TFT) ,TFT: Horizontal sync pulse width/WLH(STN)WLH[1:0] are VLINE pulse's high level width by counting number of HCLK and WLH[7:2] are reserved"
  textline ""
  textline ">LCDCON2 : LCD Control 2 Registe"
  textline "  VBPD   : TFT-Vertical back porch/STN-These bits should be set to zero on STN LCD"
  textline "  LINEVAL: TFT/STN-These bits determine the vertical size of LCD panel"
  textline "  VFPD   : TFT-Vertical front porch/STN-These bits should be set to zero on STN LCD"
  textline "  VSPW   : TFT-Vertical sync pulse width/STN-These bits should be set to zero on STN LCD"
  textline ""
  textline ">LCDCON3   : LCD Control 3 Registe"
  textline "  HBPD/WDLY: HBPD(TFT)-Horizontal back porch/WDLY(STN)WDLY[1:0] delay between VLINE and VCLK"
  textline "  HOZVAL   : TFT/STN-These bits determine the horizontal size of LCD panel"
  textline "  HFPD     : TFT-Horizontal front porch/LINEBLANK(STN)- blank time in one horizontal line duration time"
  textline ""
  textline ">LCDCON4   : LCD Control 4 Registe"
  textline "  MVAL     : STN-rate at which VM signal will toggle if MMODE bit is set to logic '1'"
  textline "  HSPW(TFT): TFT-Horizontal sync pulse width/WLH(STN)WLH[1:0] are VLINE pulse's high level width"
  textline ""

 line.long 0x10 "LCDCON5,LCD Control 5 Register"
  bitfld.long 0x10 15.--16. "  VSTATUS  ,TFT: Vertical Status (read only)" "VSYNC,BACKPorch,ACTIVE,FRONTPorch"
  bitfld.long 0x10 13.--14. " HSTATUS ,TFT: Horizontal Status (read only)" "HSYNC,BACKPorch,ACTIVE,FRONTPorch"
  bitfld.long 0x10 12. " BPP24BL  ,TFT: This bit determines the order of 24 bpp video memory" "LSB,MSB"
  bitfld.long 0x10 11. " FRM565 ,TFT: This bit selects the format of 16 bpp output video data" "5:5:5:1,5:6:5"
  bitfld.long 0x10 10. " INVVCLK ,STN/TFT: This bit controls the polarity of the VCLK active edge" "fallEdg,risEdg"
  bitfld.long 0x10 09. " INVVLINE ,STN/TFT: This bit indicates the VLINE/HSYNC pulse polarity" "nrml,inv"
  textline "                    "
  bitfld.long 0x10 08. " INVVFRAME      ,STN/TFT: This bit indicates the VFRAME/VSYNC pulse polarity" "nrml,inv"
  bitfld.long 0x10 07. " INVVD         ,STN/TFT: This bit indicates the VD (video data) pulse polarity" "nrml,inv"
  bitfld.long 0x10 06. " INVVDEN ,TFT: This bit indicates the VDEN signal polarity" "nrml,inv"
  bitfld.long 0x10 05. " INVPWREN  ,STN/TFT: This bit indicates the PWREN signal polarity" "nrml,inv"
  bitfld.long 0x10 04. " INVLEND    ,TFT: This bit indicates the LEND signal polarity" "nrml,inv"
  textline "                    "
  bitfld.long 0x10 03. " PWREN           ,STN/TFT: LCD_PWREN output signal enable/disable" "dis,ena"
  bitfld.long 0x10 02. " ENLEND         ,TFT: LEND output signal enable/disable" "dis,ena"
  bitfld.long 0x10 01. " BSWP     ,STN/TFT: Byte swap control bit" "dis,ena"
  bitfld.long 0x10 00. " HWSWP      ,STN/TFT: Half-Word swap control bit" "dis,ena"
  textline ""
  textline ">LCDCON5   : LCD Control 5 Register"
  textline "  VSTATUS  : TFT-Vertical Status (read only)"
  textline "  HSTATUS  : TFT-Horizontal Status (read only)"
  textline "  BPP24BL  : TFT-This bit determines the order of 24 bpp video memory"
  textline "  FRM565   : TFT-This bit selects the format of 16 bpp output video data"
  textline "  INVVCLK  : STN/TFT-This bit controls the polarity of the VCLK active edge"
  textline "  INVVLINE : STN/TFT-This bit indicates the VLINE/HSYNC pulse polarity"
  textline "  INVVFRAME: STN/TFT-This bit indicates the VFRAME/VSYNC pulse polarity"
  textline "  INVVD    : STN/TFT-This bit indicates the VD (video data) pulse polarity"
  textline "  INVVDEN  : TFT-This bit indicates the VDEN signal polarity"
  textline "  INVPWREN : STN/TFT-This bit indicates the PWREN signal polarity"
  textline "  INVLEND  : TFT-This bit indicates the LEND signal polarity"
  textline "  PWREN    : STN/TFT-LCD_PWREN output signal enable/disable"
  textline "  ENLEND   : TFT-LEND output signal enable/disable"
  textline "  BSWP     : STN/TFT-Byte swap control bit"
  textline "  HWSWP    : STN/TFT-Half-Word swap control bit"
  textline ""



group 0x14++0x0b   "FRAME BUFFER START ADDRESS REGISTER"
 line.long 0x00 "LCDSADDR1,Frame buffer start address 1 register"
  hexmask.long 0x00 21.--29. 1. "  LCDBANK  ,indicate A[30:22] of bank location for video buffer in system memory"
  hexmask.long 0x00 00.--20. 1. " LCDBASEU  ,For dual-scan LCD:indicate A[21:1] of start address of upper address counter"
  
  
 line.long 0x04 "LCDSADDR2,Frame buffer start address 2 register"
  hexmask.long 0x04 00.--20. 1. "  LCDBASEL ,For dual-scan LCD: indicate A[21:1] of start address of lower address counter"
  
 line.long 0x08 "LCDSADDR3,FRAME Buffer Start Address 3 Register"
  hexmask.long 0x08 11.--21. 1. "  OFFSIZE  ,Virtual screen offset size (the number of half words)"
  hexmask.long 0x08 00.--10. 1. " PAGEWIDTH ,Virtual screen page width (the number of half words)"
  textline ""
  textline ">LCDSADDR  : FRAME Buffer Start Address Register"
  textline "  LCDBANK  : indicate A[30:22] of bank location for video buffer in system memory"
  textline "  LCDBASEU : For dual-scan LCD:indicate A[21:1] of start address of upper address counter"
  textline "  LCDBASEL : For dual-scan LCD: indicate A[21:1] of start address of lower address counter"
  textline "  OFFSIZE  : Virtual screen offset size (the number of half words)"
  textline "  PAGEWIDTH: Virtual screen page width (the number of half words)"

group 0x20++0x0f   "Lookup Table Registers"
 line.long 0x00 "REDLUT,RED Lookup Table Register"

 line.long 0x04 "GREENLUT,GREEN Lookup Table Register"
 
 line.long 0x08 "BLUELUT,BLUE Lookup Table Register"

 line.long 0x0c "DITHMODE,Dithering Mode Register"
 textline ""
 textline ">REDLUT  : RED Lookup Table Register"
 textline ">GREENLUT: GREEN Lookup Table Register"
 textline ">BLUELUT : BLUE Lookup Table Register"
 textline ">DITHMODE: Dithering Mode Register"
 textline ""  

group 0x50++0x03 
 line.long 0x00 "TPAL,TFT: Temporary palette register"
   bitfld.long 0x00 24. "  TPALEN    ,Temporary palette register enable bit" "dis,ena"
   hexmask.long 0x00 00.--23. 1. "    TPALVAL ,Temporary palette value register"
   hexmask.long 0x00 16.--23. 1. " RED ,Temporary palette value register"
   hexmask.long 0x00 08.--15. 1. " GREEN ,Temporary palette value register"
   hexmask.long 0x00 00.--07. 1. " BLUE ,Temporary palette value register"
   textline ""
   textline ">TPAL    : TFT-Temporary palette register"
   textline "  TPALEN : Temporary palette register enable bit"
   textline "  TPALVAL: Temporary palette value register"
   textline "  RED    : Temporary palette value register"
   textline "  GREEN  : Temporary palette value register"
   textline "  BLUE   : Temporary palette value register"
   textline ""

group 0x54++0x03 
 line.long 0x00 "LCDINTPND,LCD Interrupt Pending Register"
  bitfld.long 0x00 01. "  INT_FrSyn ,LCD frame synchronized interrupt pending bit" "noReq,req"
  bitfld.long 0x00 00. " INT_FiCnt ,LCD FIFO interrupt pending bit" "noReq,req"
   textline ""
   textline ">LCDINTPND : LCD Interrupt Pending Register"
   textline "  INT_FrSyn: LCD frame synchronized interrupt pending bit"
   textline "  INT_FiCnt: LCD FIFO interrupt pending bit"
   textline ""

group 0x58++0x03 
 line.long 0x00 "LCDSRCPND,LCD Source Pending Register"
   bitfld.long 0x00 01. "  INT_FrSyn ,LCD frame synchronized interrupt source pending bit" "noReq,req"
   bitfld.long 0x00 00. " INT_FiCnt ,LCD FIFO interrupt source pending bit" "noReq,req"
   textline ""
   textline ">LCDSRCPND : LCD Source Pending Register"
   textline "  INT_FrSyn: LCD frame synchronized interrupt source pending bit"
   textline "  INT_FiCnt: LCD FIFO interrupt source pending bit"
   textline ""

group 0x5c++0x03 
 line.long 0x00 "LCDINTMSK,LCD Interrupt Mask Register"
   bitfld.long 0x00 02. "  FIWSEL  ,Determine the trigger level of LCD FIFO" "4WD,8WD"
   bitfld.long 0x00 01. "  INT_FrSyn ,Mask LCD frame synchronized interrupt" "ena,msk"
   bitfld.long 0x00 00. " INT_FiCnt ,Mask LCD FIFO interrupt" "ena,msk"
   textline ""
   textline ">LCDINTMSK : LCD Interrupt Mask Register"
   textline "  FIWSEL   : Determine the trigger level of LCD FIFO"
   textline "  INT_FrSyn: Mask LCD frame synchronized interrupt"
   textline "  INT_FiCnt: Mask LCD FIFO interrupt"
   textline ""

group 0x60++0x03 
 line.long 0x00 "TCONSEL,This register controls the LPC3600/LCC3600 modes."
  bitfld.long 0x00 11. "  LCC_TEST2  ,LCC3600 Test Mode 2 ( Read Only )" "no,test"
  bitfld.long 0x00 10. " LCC_TEST1 ,LCC3600 Test Mode 1 ( Read Only )" "no,test"
  bitfld.long 0x00 09. " LCC_SEL5 ,Select STV polarity" "no,Select"
  bitfld.long 0x00 08. " LCC_SEL4 ,Select CPV signal pin 0" "no,Select"
  bitfld.long 0x00 07. " LCC_SEL3   ,Select CPV signal pin 1" "no,Select"
  bitfld.long 0x00 06. " LCC_SEL2 ,Select Line/Dot inversion" " Line,inversion"
  textline "                   "
  bitfld.long 0x00 05. "  LCC_SEL1 ,Select DG/Normal mode" "DG,Normal"
  bitfld.long 0x00 04. " LCC_EN     ,Determine LCC3600 Enable/Disable" "Dis,Ena"
  bitfld.long 0x00 03. " CPV_SEL  ,Select CPV Pulse low width" "no,Select"
  bitfld.long 0x00 02. " MODE_SEL   ,Select DE/Sync mode" "Sync,DE"
  bitfld.long 0x00 01. " RES_SEL ,Select output resolution type" "320 x 240,240 x 320"
  bitfld.long 0x00 00. " LPC_EN         ,Determine LPC3600 Enable/Disable" "Dis,Ena"
   textline ""
   textline ">TCONSEL   : This register controls the LPC3600/LCC3600 modes."
   textline "  LCC_TEST2: LCC3600 Test Mode 2 ( Read Only )"
   textline "  LCC_TEST1: LCC3600 Test Mode 1 ( Read Only )"
   textline "  LCC_SEL5 : Select STV polarity"
   textline "  LCC_SEL4 : Select CPV signal pin 0"
   textline "  LCC_SEL3 : Select CPV signal pin 1"
   textline "  LCC_SEL2 : Select Line/Dot inversion"
   textline "  LCC_SEL1 : Select DG/Normal mode"
   textline "  LCC_EN   : Determine LCC3600 Enable/Disable"
   textline "  CPV_SEL  : Select CPV Pulse low width"
   textline "  MODE_SEL : Select DE/Sync mode"
   textline "  RES_SEL  : Select output resolution type"
   textline "  LPC_EN   : Determine LPC3600 Enable/Disable"
  textline ""

;end include file s3c2410x/lcd.ph
tree.end

tree "13 ADC & TOUCH SCREEN INTERFACE"
;begin include file s3c2410x/adctsi.ph
;parameters:
base  0x58000000

group 0x00++0x17
line.long 0x00 "ADCCON,ADC CONTROL REGISTER"
bitfld.long 0x00 15. "  ECFLG ,End of conversion flag (read only)" "no,yes"
bitfld.long 0x00 14. " PRSCEN ,A/D converter prescaler enable" "dis,ena"
hexmask.long 0x00 06.--13. 1. " PRSCVL ,A/D converter prescaler value"
bitfld.long 0x00 03.--05. " SEL_MUX ,Analog input channel select" "AIN0,AIN1,AIN2,AIN3,AIN4,AIN5,AIN6,AIN7"
bitfld.long 0x00 02. " STDBM ,Standby mode select" "nrml,STDBM"
bitfld.long 0x00 01. " READ_START ,A/D conversion start by read" "dis,ena"
bitfld.long 0x00 00. " ENABLE_START ,A/D conversion starts by setting this bit" "dis,ena"
   textline ""
   textline ">ADCCON       : ADC CONTROL REGISTER"
   textline "  ECFLG       : End of conversion flag (read only)"
   textline "  PRSCEN      : A/D converter prescaler enable"
   textline "  PRSCVL      : A/D converter prescaler value"
   textline "  SEL_MUX     : Analog input channel select"
   textline "  STDBM       : Standby mode select"
   textline "  READ_START  : A/D conversion start by read"
   textline "  ENABLE_START: A/D conversion starts by setting this bit"
   textline ""

line.long 0x04 "ADCTSC,ADC TOUCH SCREEN CONTROL REGISTER"
bitfld.long 0x04 08. "  UD_SEN ,Detect Stylus Up or Down status." "Down,Up"
bitfld.long 0x04 07. "  YM_SEN ,Select output value of YMON" "Hi-Z,GND"
bitfld.long 0x04 06. " YP_SEN ,Select output value of nYPON" "extVol,AIN7"
bitfld.long 0x04 05. " XM_SEN ,Select output value of XMON" "Hi-Z,GND"
bitfld.long 0x04 04. " XP_SEN ,Select output value of nXPON" "extVo,AIN7"
bitfld.long 0x04 03. " PULL_UP ,Pull-up switch enable" "ena,dis"
bitfld.long 0x04 02. " AUTO_PST ,Automatically sequencing conversion of X-position and Y-position" "nrml,Auto"
bitfld.long 0x04 00.--01. " XY_PST ,Manual measurement of X-position or Y-position" "no,xPosMeasure,yPosMeasure,waitInt"
   textline ""
   textline ">ADCTSC   : ADC TOUCH SCREEN CONTROL REGISTER"
   textline "  UD_SEN  : Detect Stylus Up or Down status."
   textline "  YM_SEN  : Select output value of YMON"
   textline "  YP_SEN  : Select output value of nYPON"
   textline "  XM_SEN  : Select output value of XMON"
   textline "  XP_SEN  : Select output value of nXPON"
   textline "  PULL_UP : Pull-up switch enable"
   textline "  AUTO_PST: Automatically sequencing conversion of X-position and Y-position"
   textline "  XY_PST  : Manual measurement of X-position or Y-position"
   textline ""

line.long 0x08 "ADCDLY,ADC START DELAY REGISTER"
   textline ">ADCDLY: ADC START DELAY REGISTER"
   textline ""
line.long 0x0c "ADCDAT0,ADC CONVERSION DATA REGISTER"
bitfld.long 0x0c 15. "  UPDOWN ,Up or down state of Stylus at Waiting for Interrupt Mode" "down,up"
bitfld.long 0x0c 14. " AUTO_PST ,Automatic sequencing conversion of X-position and Y-position" "nrml,Seq"
bitfld.long 0x0c 12.--13. " XY_PST ,Manual measurement of X-position or Y-position" "no,xPosMeasure,yPosMeasure,waitInt"
hexmask.long 0x0c 00.--09. 1. " XPDATA ,X-position conversion data value"
     
line.long 0x10 "ADCDAT1,ADC CONVERSION DATA REGISTER"
bitfld.long 0x0c 15. "  UPDOWN ,Up or down state of Stylus at Waiting for Interrupt Mode" "down,up"
bitfld.long 0x0c 14. " AUTO_PST ,Automatic sequencing conversion of X-position and Y-position" "nrml,Seq"
bitfld.long 0x0c 12.--13. " XY_PST ,Manual measurement of X-position or Y-position" "no,xPosMeasure,yPosMeasure,waitInt"
hexmask.long 0x0c 00.--09. 1. " YPDATA ,Y-position conversion data value"
   textline ""
   textline ">ADCDAT   : ADC CONVERSION DATA REGISTER"
   textline "  UPDOWN  : Up or down state of Stylus at Waiting for Interrupt Mode"
   textline "  AUTO_PST: Automatic sequencing conversion of X-position and Y-position"
   textline "  XY_PST  : Manual measurement of X-position or Y-position"
   textline "  X/YPDATA: X/Y-position conversion data value"
   textline ""
                                    
line.long 0x14 "ADCUPDN,Stylus up or down interrupt status register"
bitfld.long 0x0c 01. "  TSC_UP ,Stylus Up Interrupt." "No,Occurred"
bitfld.long 0x0c 00. " TSC_DN ,Stylus Down Interrupt." "No,Occurred"
   textline ""
   textline ">ADCUPDN: Stylus up or down interrupt status register"
   textline "  TSC_UP: Stylus Up Interrupt."
   textline "  TSC_DN: Stylus Down Interrupt."
                                      
;end include file s3c2410x/adctsi.ph
tree.end

tree "14 REAL TIME CLOCK"
;begin include file s3c2410x/rtc.ph
;parameters:
base 0x57000040

group 0x00++0x8b
line.long 0x00 "RTCCON,RTC control register"
bitfld.long 0x00 03. "  CLKRST ,RTC clock count reset" "no,yes"
bitfld.long 0x00 02. " CNTSEL ,BCD count select" "mergeBCD,res"
bitfld.long 0x00 01. " CLKSEL ,BCD clock select" "XTAL 1/215,res"
bitfld.long 0x00 00. " RTCEN ,RTC control enable" "dis,ena"
   textline ""
   textline ">RTCCON : RTC control register"
   textline "  CLKRST: RTC clock count reset"
   textline "  CNTSEL: BCD count select"
   textline "  CLKSEL: BCD clock select"
   textline "  RTCEN : RTC control enable"
   textline ""


line.long 0x44 "TICNT,Tick time count register"
bitfld.long 0x44 07. "  TIE  ,TICK INT ENABLE" "dis,ena"
hexmask.long 0x44 00.--06. 1. " TTC ,TICK TIME COUNT"
   textline ""
   textline ">TICNT: Tick time count register"
   textline "  TIE : TICK INT ENABLE"
   textline "  TTC : TICK TIME COUNT"
   textline ""

line.long 0x50 "RTCALM,RTC alarm control register"
bitfld.long 0x50 06. "  ALMEN ,Alarm global enable" "dis,ena"
bitfld.long 0x50 05. " YEAREN ,Year alarm enable" "dis,ena"
bitfld.long 0x50 04. " MONREN ,Month alarm enable" "dis,ena"
bitfld.long 0x50 03. " DATEEN ,Date alarm enable" "dis,ena"
bitfld.long 0x50 02. " HOUREN ,Hour alarm enable" "dis,ena"
bitfld.long 0x50 01. " MINEN ,Minute alarm enable" "dis,ena"
bitfld.long 0x50 00. " SECEN ,Second alarm enable" "dis,ena"
   textline ""
   textline ">RTCALM : RTC alarm control register"
   textline "  ALMEN : Alarm global enable"
   textline "  YEAREN: Year alarm enable"
   textline "  MONREN: Month alarm enable"
   textline "  DATEEN: Date alarm enable"
   textline "  HOUREN: Hour alarm enable"
   textline "  MINEN : Minute alarm enable"
   textline "  SECEN : Second alarm enable"
   textline ""


line.long 0x54 "ALMSEC,Alarm second data register"
bitfld.long 0x54 04.--06. "  SECDATA   ,BCD value for alarm second" "0,1,2,3,4,5,-,-"
bitfld.long 0x54 00.--03. " SECDATA  ,BCD value for alarm second" "0,1,2,3,4,5,6,7,8,9,-,-,-,-,-,-"
   


line.long 0x58 "ALMMIN,Alarm minute data register"
bitfld.long 0x58 04.--06. "  MINDATA   ,BCD value for alarm minute" "0,1,2,3,4,5,-,-"
bitfld.long 0x54 00.--03. " MINDATA  ,BCD value for alarm minute" "0,1,2,3,4,5,6,7,8,9,-,-,-,-,-,-"
   

line.long 0x5c "ALMHOUR,Alarm hour data register"
bitfld.long 0x5c 04.--05. "  HOURDATA  ,BCD value for alarm hour" "0,1,2,-"
bitfld.long 0x5c 00.--03. " HOURDATA ,BCD value for alarm hour" "0,1,2,3,4,5,6,7,8,9,-,-,-,-,-,-"
   


line.long 0x60 "ALMDATE,Alarm date data register"
bitfld.long 0x60 04.--05. "  DATEDATA ,BCD value for alarm date from 0 to 28/29/30/31" "28,29,30,31"
bitfld.long 0x60 00.--03. " DATEDATA ," "0,1,2,3,4,5,6,7,8,9,-,-,-,-,-,-"
   
 
line.long 0x64 "ALMMON,Alarm month data register"
bitfld.long 0x64 04. "  MONDATA   ,BCD value for alarm month" "0,1"
bitfld.long 0x64 00.--03. " MONDATA  ," "0,1,2,3,4,5,6,7,8,9,-,-,-,-,-,-"
   
line.long 0x6B "ALMYEAR,Alarm year data register"
;hexmask.long 0x6B 00.--07. 1. "  YEARDATA ,BCD value for year"
   textline ""
   textline ">ALMSEC   : Alarm second data register"
   textline "  SECDATA : BCD value for alarm second"
   textline ">ALMMIN   : Alarm minute data register"
   textline "  MINDATA : BCD value for alarm minute"
   textline ">ALMHOUR  : Alarm hour data register"
   textline "  HOURDATA: BCD value for alarm hour"
   textline ">ALMDATE  : Alarm date data register"
   textline "  DATEDATA: BCD value for alarm date from 0 to 28/29/30/31"
   textline ">ALMMON   : Alarm month data register"
   textline "  MONDATA : BCD value for alarm month"
   textline ">ALMYEAR  : Alarm year data register"
   textline ""

line.long 0x70 "BCDSEC,BCD second register"
bitfld.long 0x70 04.--06. "  SECDATA  ,BCD value for second" "0,1,2,3,4,5,-,-"
bitfld.long 0x70 00.--03. " SECDATA  ," "0,1,2,3,4,5,6,7,8,9,-,-,-,-,-,-"

line.long 0x74 "BCDMIN,BCD minute register"
bitfld.long 0x74 04.--06. "  MINDATA  ,BCD value for minute" "0,1,2,3,4,5,-,-"
bitfld.long 0x74 00.--03. " MINDATA  ," "0,1,2,3,4,5,6,7,8,9,-,-,-,-,-,-"

line.long 0x78 "BCDHOUR,BCD hour register"
bitfld.long 0x78 04.--06. "  HOURDATA ,BCD value for hour" "0,1,2,-,-,-,-,-"
bitfld.long 0x78 00.--03. " HOURDATA ," "0,1,2,3,4,5,6,7,8,9,-,-,-,-,-,-"

line.long 0x7c "BCDDATE,BCD date register"
bitfld.long 0x7c 04.--05. "  DATEDATA ,BCD value for date" "0,1,2,3"
bitfld.long 0x7c 00.--03. " DATEDATA ," "0,1,2,3,4,5,6,7,8,9,-,-,-,-,-,-"

line.long 0x80 "BCDDAY,BCD a day of the week register"
bitfld.long 0x80 00.--02. "  DAYDATA  ,BCD value for a day of the week" "0,1,2,3,4,5,6,7"

line.long 0x84 "BCDMON,BCD month register"
bitfld.long 0x84 04. "  MONDATA  ,BCD value for month" "0,1"
bitfld.long 0x84 00.--03. " MONDATA  ," "0,1,2,3,4,5,6,7,8,9"

line.long 0x88 "BCDYEAR,BCD year register"
;hexmask.long 0x88 00.--07. 1. "  YEARDATA ,BCD value for year."
   textline ""
   textline ">BCDSEC   : BCD second register"
   textline "  SECDATA : BCD value for second"
   textline ">BCDMIN   : BCD minute register"
   textline "  MINDATA : BCD value for minute"
   textline ">BCDHOUR  : BCD hour register"
   textline "  HOURDATA: BCD value for hour"
   textline ">BCDDATE  : BCD date register"
   textline "  DATEDATA: BCD value for date"
   textline ">BCDDAY   : BCD a day of the week register"
   textline "  DAYDATA : BCD value for a day of the week"
   textline ">BCDMON   : BCD month register"
   textline "  MONDATA : BCD value for month"
   textline ">BCDYEAR  : BCD year register"
   textline ""


;end include file s3c2410x/rtc.ph
tree.end

tree "15 WATCHDOG TIMER"
;begin include file s3c2410x/wdt.ph
;parameters:
base 0x53000000
group 0x00++0x0b

line.long 0x00 "WTCON,Watchdog timer control register"
hexmask.long 0x00 08.--15. 1. "  PV  ,Prescaler Value"
bitfld.long 0x00 05. " WT ,Watchdog Timer Enable or disable bit" "dis,ena"
bitfld.long 0x00 03.--04. " CS ,Clock Select-Determine the clock division factor" "16,32,64,128"
bitfld.long 0x00 02. " IG ,Interrupt Generation" "dis,ena"
bitfld.long 0x00 00. " RE ,Reset Enable/Disable" "dis,ena"
   textline ""
   textline ">WTCON: Watchdog timer control register"
   textline "  PV  : Prescaler Value"
   textline "  WT  : Watchdog Timer Enable or disable bit"
   textline "  CS  : Clock Select-Determine the clock division factor"
   textline "  IG  : Interrupt Generation"
   textline "  RE  : Reset Enable/Disable"
   textline ""

line.long 0x04 "WTDAT,Watchdog timer data register"
 hexmask.long 0x04 00.--15. 1. "  CRV ,Count Reload Value-Watchdog timer count value for reload"
   textline ""
   textline ">WTDAT: Watchdog timer data register"
   textline "  CRV : Count Reload Value-Watchdog timer count value for reload"
   textline ""

line.long 0x08 "WTCNT,Watchdog timer count register"
 hexmask.long 0x08 00.--15. 1. "  CV  ,Count Value-The current count value of the watchdog timer"
   textline ""
   textline ">WTCNT: Watchdog timer count register"
   textline "  CV  : Count Value-The current count value of the watchdog timer"
   textline ""

;end include file s3c2410x/wdt.ph
tree.end

tree "16 MMC/SD/SDIO CONTROLLER"
;begin include file s3c2410x/sdi.ph
;parameters:
base 0x5A000000
group 0x00++0x43

line.long 0x00 "SDICON,R/W SDI control register"
bitfld.long 0x00 08. "  SDreset ,Reset whole sdmmc block. This bit is automatically cleared." "Normal,SDMMC"
bitfld.long 0x00 05. " CTYP ,Determines which clock type is used as SDCLK." "SD,MMC"
bitfld.long 0x00 04. "  BOT ,Byte Order Type-Determine byte order type when you read (write) data from (to) SD host FIFO with word boundary" "TYP-A,TYP-B"
bitfld.long 0x00 03. " RcvIOInt ,Determines whether sd host receives SDIO Interrupt from the card or not(for SDIO)." "Ignore,Receive"
bitfld.long 0x00 02. " RWaitEn ,Determines read wait request signal generate when sd host waits the next block in multiple block read mode." "Dis,Ena"
bitfld.long 0x00 00. " ENCLK ,Determines whether SDCLK Out enable or not" "dis,ena"
   textline ""
   textline ">SDICON   : R/W SDI control register"
   textline "  SDreset : Reset whole sdmmc block. This bit is automatically cleared."
   textline "  CTYP    : Determines which clock type is used as SDCLK."
   textline "  BOT     : Byte Order Type-Determine byte order type when you read (write) data from (to) SD host FIFO with word boundary"
   textline "  RcvIOInt: Determines whether sd host receives SDIO Interrupt from the card or not(for SDIO)."
   textline "  RWaitEn : Determines read wait request signal generate when sd host waits the next block in multiple block read mode."
   textline "  ENCLK   : Determines whether SDCLK Out enable or not"
   textline ""

line.long 0x04 "SDIPRE,SDI baud rate prescaler register"
hexmask.long 0x04 00.--07. 1. "  PV  ,Prescaler Value"
   textline ""
   textline ">SDIPRE: SDI baud rate prescaler register"
   textline "  PV   : Prescaler Value"
   textline ""

line.long 0x08 "SDICARG,SDI command argument register"

line.long 0x0c "SDICCON,SDI command control register"
bitfld.long 0x0c 12. "  AbortCmd ,Determine whether command type is for abort (for SDIO)" "nrml,abort"
bitfld.long 0x0c 11. " WithData ,Command with Data-Determine whether command type is with data (for SDIO)" "w/o,with"
bitfld.long 0x0c 10. " LongRsp ,Determine whether host receives a 136-bit long response or not" "short,long"
bitfld.long 0x0c 09. " WaitRsp ,Determine whether host waits for a response or not" "noRep,WaitResp"
bitfld.long 0x0c 08. " CMST  ,Command Start-Determine whether command operation starts or not" "ready,start"
hexmask.long 0x0c 00.--07. 1. " CmdIndex ,Command index with start 2bit (8bit)"
   
line.long 0x10 "SDICSTA,SDI command status register"
bitfld.long 0x10 12. "  RspCrc   ,Response CRC Fail" "no,yes"
bitfld.long 0x10 11. "   CmdSent  ,Command Sent" "no,yes"
bitfld.long 0x10 10. "  CmdTout ,Command Time Out(64clk)" "no,yes"
bitfld.long 0x10 09. "   RspFin  ,Response Receive End" "no,yes"
bitfld.long 0x10 08. "      CmdOn ,CMD line progress On" "no,yes "
hexmask.long 0x10 00.--07. 1. "  RspIndex ,Response index 6bit with start 2bit (8bit)"
   textline ""
   textline ">SDICARG  : SDI command argument register"
   textline ">SDICCON  : SDI command control register"
   textline "  AbortCmd: Determine whether command type is for abort (for SDIO)"
   textline "  WithData: Command with Data-Determine whether command type is with data (for SDIO)"
   textline "  LongRsp : Determine whether host receives a 136-bit long response or not"
   textline "  WaitRsp : Determine whether host waits for a response or not"
   textline "  CMST    : Command Start-Determine whether command operation starts or not"
   textline "  CmdIndex: Command index with start 2bit (8bit)"
   textline ""
   textline ">SDICSTA  : SDI command status register"
   textline "  RspCrc  : Response CRC Fail"
   textline "  CmdSent : Command Sent"
   textline "  CmdTout : Command Time Out(64clk)"
   textline "  CmdOn   : CMD line progress On"
   textline "  RspIndex: Response index 6bit with start 2bit (8bit)"
   textline ""


line.long 0x14 "SDIRSP0,SDI response register 0"

line.long 0x18 "SDIRSP1,SDI response register 1"
hexmask.long 0x18 24.--31. 1. "  RCRC7 ,CRC7 (with end bit short) card status[95:88](long)"
hexmask.long 0x18 00.--23. 1. " Response1 ,Unused (short) card status[87:64](long)"


line.long 0x1c "SDIRSP2,SDI response register 2"

line.long 0x20 "SDIRSP3,SDI response register 3"
   textline ""
   textline ">SDIRSP    : SDI response register"
   textline "  RCRC7    : CRC7 (with end bit short) card status[95:88](long)"
   textline "  Response1: Unused (short) card status[87:64](long)"
   textline ""

line.long 0x24 "SDIDTIMER,SDI data / busy timer register"
hexmask.long 0x20 00.--22. 1. "  DataTimer ,Data / busy timeout period (0~65535 cycle)"


line.long 0x28 "SDIBSIZE,SDI block size register"
hexmask.long 0x28 00.--11. 1. "  BlkSize   ,Block size value (0~4095 byte)"
   textline ""
   textline ">SDIDTIMER : SDI data / busy timer register"
   textline "  DataTimer: Data / busy timeout period (0~65535 cycle)"
   textline ">SDIBSIZE  : SDI block size register"
   textline "  BlkSize  : Block size value (0~4095 byte)"
   textline ""

line.long 0x2c "SDIDCON,SDI data control register"
bitfld.long 0x2c 24. "  Burst4      ,Enable Burst4 mode in DMA mode. This bit should be set only when Data Size is word." "Dis,Ena"
bitfld.long 0x2c 22.--23. " DataSize ,Indicates the size of the transfer with FIFO which is typically byte halfword or word." "Byte,Halfword,Word,Res"
bitfld.long 0x2c 21. " PrdType ,Determines whether SDIO Interrupt period is 2 cycle or extend more cycle when data block last is transferred (for SDIO)." "Exactly2,More"
bitfld.long 0x2c 20. " TARSP ,Determines when data transmit start after response receive or not" "Directly,receive"
bitfld.long 0x2c 19. " RACMD        ,Receive After Command-Determine when data receive start after command sent or not" "no,yes"
bitfld.long 0x2c 18. " BACMD        ,Busy After Command-Determine when busy receive start after command sent or not" "no,yes"
textline "                    "
bitfld.long 0x2c 17. " BlkMode  ,Block mode-Data transfer mode" "stream,block"
bitfld.long 0x2c 16. " WideBus       ,Wide bus enable" "no,yes"
bitfld.long 0x2c 15. " EnDMA        ,DMA Enable" "dis,ena"
bitfld.long 0x2c 14. " DTST     , Determines whether data transfer start or not. This bit is automatically cleared." "ready,start"
bitfld.long 0x2c 12.--13. " DatMode ,Data Transfer Mode-Determine the direction of data transfer" "rdy,bsyCheck,rec,trans"
hexmask.long 0x2c 00.--11. 1. " BlkNum ,Block Number (0~4095)"
   textline ""
   textline ">SDIDCON  : SDI data control register"
   textline "  Burst4  : Enable Burst4 mode in DMA mode."
   textline "  DataSize: Indicates the size of the transfer with FIFO which is typically byte halfword or word."
   textline "  PrdType : Determines whether SDIO Interrupt period is 2 cycle or extend more cycle when data block last is transferred."
   textline "  TARSP   : Determines when data transmit start after response receive or not"
   textline "  RACMD   : Receive After Command-Determine when data receive start after command sent or not"
   textline "  BACMD   : Busy After Command-Determine when busy receive start after command sent or not"
   textline "  BlkMode : Block mode-Data transfer mode"
   textline "  WideBus : Wide bus enable"
   textline "  EnDMA   : DMA Enable"
   textline "  DTST    : Determines whether data transfer start or not. This bit is automatically cleared."
   textline "  DatMode : Data Transfer Mode-Determine the direction of data transfer"
   textline "  BlkNum  : Block Number (0~4095)"
   textline ""


line.long 0x30 "SDIDCNT,SDI data remain counter register"
hexmask.long 0x30 12.--23. 1. "  BlkNumCnt ,Remaining block number"
hexmask.long 0x30 00.--11. 1. " BlkCnt ,Remaining data byte of 1 block"
   textline ""
   textline ">SDIDCNT   : SDI data remain counter register"
   textline "  BlkNumCnt: Remaining block number"
   textline "  BlkCnt   : Remaining data byte of 1 block"
   textline ""

line.long 0x34 "SDIDSTA,SDI data status register"
bitfld.long 0x34 11. "  No busy  ,Busy is not active during 16cycle after cmd packet transmitted in only busy check mode. This flag is cleared by setting to 1 this bit." "Not detect,No busy"
bitfld.long 0x34 10. " RWaitReq  ,Read Wait Request Occur" "no,yes"
bitfld.long 0x34 09. " IOIntDet ,SDIO Interrupt Detect" "no,yes"
bitfld.long 0x34 07. " CrcSta  ,CRC Status Fail" "no,yes"
bitfld.long 0x34 06. " DatCrc  ,Data Receive CRC Fail" "no,yes"
   textline "                    "
bitfld.long 0x34 05. " DatTout         ,Data Time Out" "no,yes"
bitfld.long 0x34 04. " DatFin    ,Data Transfer Finish" "no,yes"
bitfld.long 0x34 03. " BusyFin  ,Busy Finish" "no,yes"
bitfld.long 0x34 01. " TxDatOn ,Tx Data progress On" "no,yes"
bitfld.long 0x34 00. " RxDatOn ,Rx Data Progress On" "no,yes"
   textline ""
   textline ">SDIDSTA  : SDI data status register"
   textline "  No busy : Busy is not active during 16cycle after cmd packet transmitted in only busy check mode."
   textline "  RWaitReq: Read Wait Request Occur"
   textline "  IOIntDet: SDIO Interrupt Detect"
   textline "  CrcSta  : CRC Status Fail"
   textline "  DatCrc  : Data Receive CRC Fail"
   textline "  DatTout : Data Time Out"
   textline "  DatFin  : Data Transfer Finish"
   textline "  BusyFin : Busy Finish"
   textline "  TxDatOn : Tx Data progress On"
   textline "  RxDatOn : Rx Data Progress On"
   textline ""

line.long 0x38 "SDIFSTA,SDI FIFO status register"
bitfld.long 0x38 16. "  FRST   ,Reset FIFO value. This bit is automatically cleared." "Normal,FIFO"
bitfld.long 0x38 14.--15. " FFfail ,FIFO fail error when FIFO occurs overrun / underrun data saving. This flag is cleared by setting to one these bits." "Not detect,FIFO fail,FIFO reset,Reserved"
bitfld.long 0x38 13. " TFDET     ,FIFO available Detect for Tx" "no,yes"
bitfld.long 0x38 12. " RFDET       ,FIFO available Detect for Rx" "no,yes"
bitfld.long 0x38 11. " TFHalf ,Tx FIFO Half Full-Set to 1 whenever Tx FIFO is less than 33byte" "33--64,0--32"
bitfld.long 0x38 10. " TFEmpty ,Tx FIFO Empty-Set to 1 whenever Tx FIFO is empty" "1--64,0"
   textline "                    "
bitfld.long 0x38 09. " RFLast    ,Rx FIFO Last Data Ready" "no,yes"
bitfld.long 0x38 08. " RFFull      ,Rx FIFO Full" "0--63,full"
bitfld.long 0x38 07. " RFHalf ,Rx FIFO Half Full" "0--31,32--64"
hexmask.long 0x38 00.--06. 1. " FFCNT ,FIFO Count-Number of data (byte) in FIFO"
   textline ""
   textline ">SDIFSTA : SDI FIFO status register"
   textline "  FRST   : Reset FIFO value. This bit is automatically cleared."
   textline "  FFfail : FIFO fail error when FIFO occurs overrun / underrun data saving."
   textline "  TFDET  : FIFO available Detect for Tx"
   textline "  RFDET  : FIFO available Detect for Rx"
   textline "  TFHalf : Tx FIFO Half Full-Set to 1 whenever Tx FIFO is less than 33byte"
   textline "  TFEmpty: Tx FIFO Empty-Set to 1 whenever Tx FIFO is empty"
   textline "  RFLast : Rx FIFO Last Data Ready"
   textline "  RFFull : Rx FIFO Full"
   textline "  RFHalf : Rx FIFO Half Full"
   textline "  FFCNT  : FIFO Count-Number of data (byte) in FIFO"
   textline ""

line.long 0x3c "SDIIMSK,SDI interrupt mask register" 
bitfld.long 0x3c 18. "  NoBusyInt ,Determines SDI generate an interrupt if busy signal is not active" "dis,ena"
bitfld.long 0x3c 17. " RspCrc ,Response CRC error interrupt" "dis,ena"
bitfld.long 0x3c 16. " CmdSent ,Command sent(without response) Interrupt Enable" "dis,ena"
bitfld.long 0x3c 15. " CmdTout ,Command response timeout Interrupt Enable" "dis,ena"
bitfld.long 0x3c 14. " RspEnd  ,Command response received Interrupt Enable" "dis,ena"
bitfld.long 0x3c 13. " RWaitReq ,Read wait request Interrupt Enable" "dis,ena"
bitfld.long 0x3c 12. " IOIntDet ,SD host receives SDIO Interrupt Enable" "dis,ena"
bitfld.long 0x3c 11. " FFfail ,FIFO fail error Interrupt Enable" "dis,ena"
   textline "                    "
bitfld.long 0x3c 10. " CrcSta    ,CRC status errors Interrupt Enable" "dis,ena"
bitfld.long 0x3c 09. " DatCrc ,Data CRC fail Interrupt Enable" "dis,ena"
bitfld.long 0x3c 08. " DatTout ,Data timeout Interrupt Enable" "dis,ena"
bitfld.long 0x3c 07. " DatFin  ,Data counter zero Interrupt Enable" "dis,ena"
bitfld.long 0x3c 06. " BusyFin ,Busy checks complete Interrupt Enable" "dis,ena"
bitfld.long 0x3c 04. " TFHalf   ,Tx FIFO Interrupt Enable" "dis,ena"
bitfld.long 0x3c 03. " TFEmpty  ,Tx FIFO Interrupt Enable" "dis,ena"
bitfld.long 0x3c 02. " RFLast ,Rx FIFO Interrupt Enable" "dis,ena"
   textline "                   "
bitfld.long 0x3c 01. "  RFFull    ,Rx FIFO Full Interrupt Enable" "dis,ena"
bitfld.long 0x3c 00. " RFHalf ,Rx FIFO Half Interrupt Enable" "dis,ena"
   textline ""
   textline ">SDIIMSK   : SDI interrupt mask register"
   textline "  NoBusyInt: Determines SDI generate an interrupt if busy signal is not active"
   textline "  RspCrc   : Response CRC error interrupt"
   textline "  CmdSent  : Command sent(without response) Interrupt Enable"
   textline "  CmdTout  : Command response timeout Interrupt Enable"
   textline "  RspEnd   : Command response received Interrupt Enable"
   textline "  RWaitReq : Read wait request Interrupt Enable"
   textline "  IOIntDet : SD host receives SDIO Interrupt Enable"
   textline "  FFfail   : FIFO fail error Interrupt Enable"
   textline "  CrcSta   : CRC status errors Interrupt Enable"
   textline "  DatCrc   : Data CRC fail Interrupt Enable"
   textline "  DatTout  : Data timeout Interrupt Enable"
   textline "  DatFin   : Data counter zero Interrupt Enable"
   textline "  BusyFin  : Busy checks complete Interrupt Enable"
   textline "  TFHalf   : Tx FIFO Interrupt Enable"
   textline "  TFEmpty  : Tx FIFO Interrupt Enable"
   textline "  RFLast   : Rx FIFO Interrupt Enable"
   textline "  RFFull   : Rx FIFO Full Interrupt Enable"
   textline "  RFHalf   : Rx FIFO Half Interrupt Enable"
   textline ""

;end include file s3c2410x/sdi.ph
tree.end

tree "17 IIC-BUS INTERFACE"
;begin include file s3c2410x/iic.ph
;parameters:

base 0x54000000
group 0x00++0x07
line.long 0x00 "IICCON,MULTI-MASTER IIC-BUS CONTROL REGISTER"
 bitfld.long 0x00 07. "  AG         ,Acknowledge generation-IIC-bus acknowledge enable bit" "dis,ena"
 bitfld.long 0x00 06. " TxCS  ,Tx clock source selection-[6] Source clock of IIC-bus transmit clock prescaler selection bit" "fPCLK /16,fPCLK /512"
 bitfld.long 0x00 05. " TxRxInt ,IIC-Bus Tx/Rx interrupt enable/disable bit" "dis,ena"
 bitfld.long 0x00 04. " IPF ,Interrupt pending flag-IIC-bus Tx/Rx interrupt pending flag(RD/WR)" "no/clr,yes/(N/A)"
 bitfld.long 0x00 00.--03. " TCV      ,Transmit clock value-IIC-Bus transmit clock prescaler" "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15"
 
 
line.long 0x04 "IICSTAT,MULTI-MASTER IIC-BUS CONTROL/STATUS REGISTER"
 bitfld.long 0x04 06.--07. "  MS   ,Mode selection-IIC-bus master/slave Tx/Rx mode select bits" "slvRec,slvTrans,mstrRec,mstrTrans"
 bitfld.long 0x04 05. " BBSS ,Busy signal status/START STOP condition-IIC-Bus busy signal status bit(RD/WR)" "notBsy/STOP,bsy/START"
 bitfld.long 0x04 04. " SO      ,Serial output-IIC-bus data output enable/disable bit" "dis,ena"
 bitfld.long 0x04 03. " ASF      ,Arbitration status flag-IIC-bus arbitration procedure status flag bit" "succ,fail"
 bitfld.long 0x04 02. " AASSF ,IIC-bus address-as-slave status flag bit" "clr,match"
 bitfld.long 0x04 01. " AZSF ,Address zero status flag-IIC-bus address zero status flag bit" "clr,zero"
 bitfld.long 0x04 00. " LRSF ,Last-received bit status flag-IIC-bus last-received bit status flag bit" "0,1"
 textline "" 
 textline "NOTES:"
 textline "1. Interfacing with EEPROM the ack generation may be disabled before reading the last data in order to generate the STOP condition in Rx mode."
 textline "2. A IIC-bus interrupt occurs 1)when a 1-byte transmit or receive operation is completed 2)when a general call or a slave"
 textline "   address match occurs or 3) if bus arbitration fails. "
 textline "3. To time the setup time of IICSDA before IISSCL rising edge IICDS has to be written before clearing the IIC interrupt pending bit."
 textline "4. IICCLK is determined by IICCON[6]. Tx clock can vary by SCL transition time. When IICCON[6]=0, IICCON[3:0]=0x0 or 0x1 is not available."
 textline "5. If the IICON[5]=0 IICON[4] does not operate correctly. So It is recommended to set IICCON[4]=1 although you does not use the IIC interrupt."
 textline "   group 0x04++0x03"
 textline ""
 textline ">IICCON: MULTI-MASTER IIC-BUS CONTROL REGISTER"
 textline "  AG   : Acknowledge generation-IIC-bus acknowledge enable bit"
 textline "  TxCS : Tx clock source selection-[6] Source clock of IIC-bus transmit clock prescaler selection bit"
 textline "  TxCS : IIC-Bus Tx/Rx interrupt enable/disable bit"
 textline "  IPF  : Interrupt pending flag-IIC-bus Tx/Rx interrupt pending flag(RD/WR)"
 textline "  TCV  : Transmit clock value-IIC-Bus transmit clock prescaler"
 textline ""
 textline ">IICSTAT: MULTI-MASTER IIC-BUS CONTROL/STATUS REGISTER"
 textline "  MS    : Mode selection-IIC-bus master/slave Tx/Rx mode select bits"
 textline "  BBSS  : Busy signal status/START STOP condition-IIC-Bus busy signal status bit(RD/WR)"
 textline "  SO    : Serial output-IIC-bus data output enable/disable bit"
 textline "  ASF   : Arbitration status flag-IIC-bus arbitration procedure status flag bit"
 textline "  AASSF : IIC-bus address-as-slave status flag bit"
 textline "  AZSF  : Address zero status flag-IIC-bus address zero status flag bit"
 textline "  LRSF  : Last-received bit status flag-IIC-bus last-received bit status flag bit"
 textline ""

group 0x08++0x03 
line.long 0x00 "IICADD,MULTI-MASTER IIC-BUS ADDRESS REGISTER"
 hexmask.long 0x00 00.--07. 1. "  SA    ,Slave address"
 

group 0x0c++0x03
line.long 0x00 "IICDS,MULTI-MASTER IIC-BUS TRANSMIT/RECEIVE DATA SHIFT REGISTER"
 hexmask.long 0x00 00.--07. 1. "  DS    ,Data shift"
 
group 0x10++0x03 
line.long 0x00 "IICLC,IIC-Bus multi-master line control register"
 bitfld.long 0x00 02. "  Filter enable ,IIC-bus filter enable bit." "Dis,Ena"
 bitfld.long 0x00 00.--01. " SDA output delay ,IIC-Bus SDA line delay length selection bits." "0 clocks,5 clocks,10 clocks,15 clocks"
 textline ""
 textline ">IICADD : MULTI-MASTER IIC-BUS ADDRESS REGISTER"
 textline "  SA    : Slave address"
 textline ""
 textline ">IICDS  : MULTI-MASTER IIC-BUS TRANSMIT/RECEIVE DATA SHIFT REGISTER"
 textline "  DS    : Data shift"
 textline ""
 textline "> IICLC : IIC-Bus multi-master line control register"
 textline "  Filter enable   : IIC-bus filter enable bit."
 textline "  SDA output delay: IIC-Bus SDA line delay length selection bits."
 textline ""

;end include file s3c2410x/iic.ph
tree.end

tree "18 IIS-BUS INTERFACE"
;begin include file s3c2410x/iis.ph
;parameters:

base 0x55000000     
group 0x00++0x03
line.long 0x00 "IISCON,IIS CONTROL REGISTER"
 bitfld.long 0x00 08. "  LRCI     ,Left/Right channel index" "L,R"
 bitfld.long 0x00 07. " TFRF ,Transmit FIFO ready flag" "empty,noEmpt"
 bitfld.long 0x00 06. " RFRF ,Receive FIFO ready flag" "full,noFull"
 bitfld.long 0x00 05. " TDSR    ,Transmit DMA service request" "dis,ena"
 bitfld.long 0x00 04. " RDSR    ,Receive DMA service request" "dis,ena"
 bitfld.long 0x00 03. " TCIC ,Transmit channel idle command-In Idle state the IISLRCK is inactive (Pause Tx)" "no,yes"
 bitfld.long 0x00 02. " RCIC  ,Receive channel idle command-In Idle state the IISLRCK is inactive (Pause Rx)" "no,yes"
 bitfld.long 0x00 01. " PSC   ,IIS prescaler" "dis,ena"
 bitfld.long 0x00 00. " IF  ,IIS interface" "dis,ena"
 
 
group 0x04++0x03
line.long 0x00 "IISMOD,IIS MODE REGISTER REGISTER"
 bitfld.long 0x00 09. "  MCS ,Master clock select" "PCLK,MPLLin"
 bitfld.long 0x00 08. " MSM    ,Master/slave mode select" "mstr,slv"
 bitfld.long 0x00 06.--07. " TRM ,Transmit/receive mode select" "noTrans,noRec,trans,both"
 bitfld.long 0x00 05. " AL ,Active level of left/right channel" "low4Left,hi4Left"
 bitfld.long 0x00 04. " SIF ,Serial interface format" "IIScmpt,MSBjstf"
 bitfld.long 0x00 03. " WIDTH ,Serial data bit per channel" "8,16"
 bitfld.long 0x00 02. " MCF ,Master clock frequency select(fs: sampling frequency)" "256fs,384fs"
 bitfld.long 0x00 00.--01. " SBCF ,Serial bit clock frequency select(fs: sampling frequency)" "16fs,32fs,48fs,N/A"
 textline ""
 textline ">IISCON: IIS CONTROL REGISTER"
 textline "  LRCI : Left/Right channel index"
 textline "  TFRF : Transmit FIFO ready flag"
 textline "  RFRF : Receive FIFO ready flag"
 textline "  TDSR : Transmit DMA service request"
 textline "  RDSR : Receive DMA service request"
 textline "  TCIC : Transmit channel idle command-In Idle state the IISLRCK is inactive (Pause Tx)"
 textline "  RCIC : Receive channel idle command-In Idle state the IISLRCK is inactive (Pause Rx)"
 textline "  PSC  : IIS prescaler"
 textline "  IF   : IIS interface"
 textline ""
 textline ">IISMOD:IIS MODE REGISTER REGISTER"
 textline "  MCS  : Master clock select"
 textline "  MSM  : Master/slave mode select"
 textline "  TRM  : Transmit/receive mode select"
 textline "  AL   : Active level of left/right channel"
 textline "  SIF  : Serial interface format"
 textline "  WIDTH: Serial data bit per channel"
 textline "  MCF  : Master clock frequency select(fs: sampling frequency)"
 textline "  SBCF : Serial bit clock frequency select(fs: sampling frequency)"
 textline ""


group 0x08++0x03
line.long 0x00 "IISPSR ,IIS PRESCALER REGISTER"
 hexmask.long 0x00 05.--09. 1. "  PCA    ,Prescaler control A:0-31. Note: Prescaler A makes the master clock that is used the internal block and division factor is N+1."
 hexmask.long 0x00 00.--04. 1. "  PCB ,Prescaler control B:0-31. Note: Prescaler B makes the master clock that is used the external block and division factor is N+1."
 
  
group 0x0c++0x03
line.long 0x00 "IISFCON,IIS FIFO CONTROL REGISTER"
 bitfld.long 0x00 15. "  TFAM       ,Transmit FIFO access mode select" "nrml,DMA"
 bitfld.long 0x00 14. "  RFAM    ,Receive FIFO access mode select" "nrml,DMA"
 bitfld.long 0x00 13. "   TxFIFO ,Transmit FIFO" "dis,ena"
 bitfld.long 0x00 12. "  RxFIFO ,Receive FIFO" "dis,ena"
 hexmask.long 0x00 06.--11. 1. " TxFAC ,Transmit FIFO data count(Read only)"
 hexmask.long 0x00 00.--05. 1. " RxFDC ,Receive FIFO data count(Read only)"
 

group 0x10++0x03
line.long 0x00 "IISFIFO,IIS FIFO REGISTER"
hexmask.long 0x00 00.--15. 1. "  FENTRY ,Transmit/Receive data for IIS"
 textline ""
 textline ">IISPSR : IIS PRESCALER REGISTER"
 textline "  PCA   : Prescaler control A:0-31."
 textline "  PCB   : Prescaler control B:0-31"
 textline ""
 textline ">IISFCON: IIS FIFO CONTROL REGISTER"
 textline "  TFAM  : Transmit FIFO access mode select"
 textline "  RFAM  : Receive FIFO access mode select"
 textline "  TxFIFO: Transmit FIFO"
 textline "  RxFIFO: Receive FIFO"
 textline "  TxFAC : Transmit FIFO data count(Read only)"
 textline "  RxFDC : Receive FIFO data count(Read only)"
 textline ""
 textline ">IISFIFO: IISFIFO,IIS FIFO REGISTER"
 textline "  FENTRY  Transmit/Receive data for IIS"
 textline ""

tree.end


tree "19 SPI INTERFACE"

base 0x59000000

group 0x00++0x03
line.long 0x00 "SPCON0,SPI channel 0 control register"
 bitfld.long 0x00 05.--06. "  SMOD ,SPI Mode Select-Determine how and by what SPTDAT is read/written" "poll,int,DMA,res"
 bitfld.long 0x00 04. " ENSCK ,SCK Enable-Determine whether you want SCK enable or not (for only master)" "dis,ena"
 bitfld.long 0x00 03. " MSTR ,Master/Slave Select-Determine the desired mode (master or slave). Note: In slave mode, there should be set up time for master to initiate Tx / Rx." "slv,mstr"
 bitfld.long 0x00 02. " CPOL ,Clock Polarity Select-Determine an active high or active low clock" "actHi,actLow"
 bitfld.long 0x00 01. " CPHA ,Clock Phase Select-Select one of two fundamentally different transfer formats" "A,B"
 bitfld.long 0x00 00. " TAGD ,Tx Auto Garbage Data-Decide whether the receiving data only needs or not. Note: In normal mode you only want to receive data. you should transmit dummy 0xFF data." "nrml,TAGD"
 
group 0x20++0x03
line.long 0x00 "SPCON1,SPI channel 1 control register"
 bitfld.long 0x00 05.--06. "  SMOD ,SPI Mode Select-Determine how and by what SPTDAT is read/written" "poll,int,DMA,res"
 bitfld.long 0x00 04. " ENSCK ,SCK Enable-Determine whether you want SCK enable or not (for only master)" "dis,ena"
 bitfld.long 0x00 03. " MSTR ,Master/Slave Select-Determine the desired mode (master or slave)" "slv,mstr"
 bitfld.long 0x00 02. " CPOL ,Clock Polarity Select-Determine an active high or active low clock" "actHi,actLow"
 bitfld.long 0x00 01. " CPHA ,Clock Phase Select-Select one of two fundamentally different transfer formats" "A,B"
 bitfld.long 0x00 00. " TAGD ,Tx Auto Garbage Data-Decide whether the receiving data only needs or not" "nrml,TAGD"

 textline ""
 textline ">SPCON : SPI channel control register"
 textline "  SMOD : SPI Mode Select-Determine how and by what SPTDAT is read/written"
 textline "  ENSCK: SCK Enable-Determine whether you want SCK enable or not (for only master)"
 textline "  MSTR : Master/Slave Select-Determine the desired mode (master or slave)"
 textline "  CPOL : Clock Polarity Select-Determine an active high or active low clock"
 textline "  CPHA : Clock Phase Select-Select one of two fundamentally different transfer formats"
 textline "  TAGD : Tx Auto Garbage Data-Decide whether the receiving data only needs or not"
 textline ""

group 0x04++0x03
line.long 0x00 "SPSTA0,SPI channel 0 status register"
 bitfld.long 0x00 02. "  DCOL ,Data Collision Error Flag" "no,yes"
 bitfld.long 0x00 01. " MULF ,Multi Master Error Flag" "no,yes"
 bitfld.long 0x00 00. " REDY ,Transfer Ready Flag" "no,yes"

group 0x24++0x03
line.long 0x00 "SPSTA1,SPI channel 1 status register"
 bitfld.long 0x00 02. "  DCOL ,Data Collision Error Flag" "no,yes"
 bitfld.long 0x00 01. " MULF ,Multi Master Error Flag" "no,yes"
 bitfld.long 0x00 00. " REDY ,Transfer Ready Flag" "no,yes"
 textline ""
 textline ">SPSTA :SPI channel status register"
 textline "  DCOL :Data Collision Error Flag"
 textline "  MULF :Multi Master Error Flag"
 textline "  REDY :Transfer Ready Flag"
 textline ""

group 0x08++0x03
line.long 0x00 "SPPIN0,SPI channel 0 pin control register"
 bitfld.long 0x00 02. "  ENMUL ,Multi Master error detect Enable" "dis,ena"
 bitfld.long 0x00 00. " KEEP ,Master Out Keep" "no,yes"
 
group 0x28++0x03
line.long 0x00 "SPPIN1,SPI channel 1 pin control register"
 bitfld.long 0x00 02. "  ENMUL ,Multi Master error detect Enable" "dis,ena"
 bitfld.long 0x00 00. " KEEP ,Master Out Keep" "no,yes"
 textline ""
 textline ">SPPIN : SPI channel pin control register"
 textline "  ENMUL: Multi Master error detect Enable"
 textline "  KEEP : Master Out Keep"
 textline ""

group 0x0c++0x03 
line.long 0x00 "SPPRE0,SPI cannel 0 baud rate prescaler register"
 hexmask.long 0x00 00.--07. 1. "  PV    ,Prescaler Value-Determine SPI clock rate as above equation"
 
group 0x2c++0x03 
line.long 0x00 "SPPRE1,SPI cannel 1 baud rate prescaler register"
 hexmask.long 0x00 00.--07. 1. "  PV    ,Prescaler Value-Determine SPI clock rate as above equation"
 textline ""
 textline ">SPPRE: SPI cannel baud rate prescaler register"
 textline "  PV  : Prescaler Value-Determine SPI clock rate as above equation"
 textline ""
 textline "NOTE: Baud rate should be less than 25MHz."
 textline ""

group 0x10++0x03
line.long 0x00 "SPTDAT0,SPI channel 0 Tx data register"
 hexmask.long 0x00 00.--07. 1. "  TxDAT ,Tx Data Register that contains the data to be transmitted over the SPI channel"

group 0x30++0x03
line.long 0x00 "SPTDAT1,SPI channel 1 Tx data register"
 hexmask.long 0x00 00.--07. 1. "  TxDAT ,Tx Data Register that contains the data to be transmitted over the SPI channel"
 textline ""
 textline ">SPTDAT : SPI channel Tx data register"
 textline "  TxDAT : Tx Data Register that contains the data to be transmitted over the SPI channel"
 textline ""


group 0x14++0x03
line.long 0x00 "SPRDAT0,SPI channel 0 Rx data register"
 hexmask.long 0x00 00.--07. 1. "  RxDAT ,Rx Data Register that contains the data to be received over the SPI channel"

group 0x34++0x03
line.long 0x00 "SPRDAT1,SPI channel 1 Rx data register"
 hexmask.long 0x00 00.--07. 1. "  RxDAT ,Rx Data Register that contains the data to be received over the SPI channel"
 textline ""
 textline ">SPRDAT : SPI channel Rx data register"
 textline "  RxDAT :Rx Data Register that contains the data to be received over the SPI channel"
 textline ""
 

;end include file s3c2410x/spi.ph
tree.end
tree "20 CAMERA INTERFACE"
base  0x4F000000 

group 0x00++0x03 "SOURCE FORMAT REGISTER"
 line.long 0x00 "CISRCFMT,Input source format"
  bitfld.long 0x00 31. "  ITU601_656n ,ITU-R BT.656 YCbCr 8-bit/ITU-R BT.601 YCbCr 8-16-bit mode enable" "ITU-R BT.656,ITU-R BT.601" 
  bitfld.long 0x00 30. "  UVOffset ,Cb-Cr value offset control." "+0,+128"
  bitfld.long 0x00 29. "  In16bit ,ITU-R BT 601 YCbCr 16-bit mode enable" "dis,ena"
  hexmask.long 0x00 16.--28. 1. "  SourceHsize ,Source horizontal pixel number (must be 8’s multiple)"
  bitfld.long 0x00 14.--15. "  Order422 ,Input YCbCr order inform for input 8/16-bit mode." "00,01,10,11"
  hexmask.long 0x00 00.--12. 1. "  SourceVsize ,Source vertical pixel number(must be 16’s multiple for JPEG DCT.)"
  textline ""
  textline ">CISRCFMT     :Input source format"
  textline "  ITU601_656n :ITU-R BT.656 YCbCr 8-bit/ITU-R BT.601 YCbCr 8-16-bit mode enable"
  textline "  UVOffset    :Cb-Cr value offset control."
  textline "  In16bit     :ITU-R BT 601 YCbCr 16-bit mode enable"
  textline "  SourceHsize :Source horizontal pixel number (must be 8’s multiple)"
  textline "  Order422    :Input YCbCr order inform for input 8/16-bit mode."
  textline "  SourceVsize :Source vertical pixel number(must be 16’s multiple for JPEG DCT.)"
  textline ""

group 0x04++0x03 "WINDOW OPTION REGISTER"
 line.long 0x00 "CIWDOFST,Window offset register"
  bitfld.long 0x00 31. "  WinOfsEn ,Window offset enable/No offset" "No offset,Offset enable" 
  bitfld.long 0x00 30. "  ClrOvCoFiY  ,Clear the overflow indication flag of input CODEC FIFO Y/Normal." "Normal,Clear"
  hexmask.long 0x00 16.--26. 1. "  WinHorOfst ,Window horizontal offset by pixel unit. (The size of offset must be multiple of 8)"
  bitfld.long 0x00 15. "  ClrOvCoFiCb ,Clear the overflow indication flag of input CODEC FIFO Cb/Normal" "Normal,Clear"
  bitfld.long 0x00 14. "  ClrOvCoFiCr ,Clear the overflow indication flag of input CODEC FIFO Cr/Normal" "Normal,Clear"
  textline "                       "
  bitfld.long 0x00 13. "      ClrOvPrFiCb ,Clear the overflow indication flag of input PREVIEW FIFO Cb" "Normal,Clear"
  bitfld.long 0x00 12. "      ClrOvPrFiCr ,Clear the overflow indication flag of input PREVIEW FIFO Cr" "Normal,Clear"
  hexmask.long 0x00 00.--10. 1. "  WinVerOfst ,Window vertical offset by pixel unit"
  textline ""
  textline ">CIWDOFST     :Window offset register"
  textline "  WinOfsEn    :Window offset enable/No offset"
  textline "  ClrOvCoFiY  :Clear the overflow indication flag of input CODEC FIFO Y/Normal."
  textline "  WinHorOfst  :Window horizontal offset by pixel unit."
  textline "  ClrOvCoFiCb :Clear the overflow indication flag of input CODEC FIFO Cb/Normal"
  textline "  ClrOvCoFiCr :Clear the overflow indication flag of input CODEC FIFO Cr/Normal"
  textline "  ClrOvPrFiCb :Clear the overflow indication flag of input PREVIEW FIFO Cb"
  textline "  ClrOvPrFiCr :Clear the overflow indication flag of input PREVIEW FIFO Cr"
  textline ""

group 0x08++0x03 "GLOBAL CONTROL REGISTER"
 line.long 0x00 "CIGCTRL,Global control register"
  bitfld.long 0x00 31. "  SwRst ,Camera interface software reset" "clear,reset" 
  bitfld.long 0x00 29. "  CamRst ,External camera processor reset or power down control." "clear,reset"
  bitfld.long 0x00 27.--28. "  TestPattern ,This register should be set at only ITU-T 601 8-bit mode. " "Input,Color bar,Horizontal,Vertical"
  bitfld.long 0x00 26. "  InvPolPCLK ,Inverse the polarity of XciPCLK/Normal (Camera data is fetched at rising edge of XciPCLK)" "Normal,Inverse"
  bitfld.long 0x00 25. "  InvPolVSYNC ,Inverse the polarity of XciVSYNC/Normal" "Normal,Inverse"
  bitfld.long 0x00 24. "  InvPolHREF ,Inverse the polarity of XciHREF/Normal" "Normal,Inverse"
  textline ""
  textline ">CIGCTR       :LGlobal control register"
  textline "  SwRst       :Camera interface software reset"
  textline "  CamRst      :External camera processor reset or power down control."
  textline "  TestPattern :This register should be set at only ITU-T 601 8-bit mode."
  textline "  InvPolPCLK  :Inverse the polarity of XciPCLK/Normal (Camera data is fetched at rising edge of XciPCLK)"
  textline "  InvPolVSYNC :Inverse the polarity of XciVSYNC/Normal"
  textline "  InvPolHREF  :Inverse the polarity of XciHREF/Normal"
  textline ""

group 0x18++0x0f "Y START ADDRESS REGISTER"
 line.long 0x00 "CICOYSA1,1st Y frame start address for codec DMA"
  hexmask.long 0x00 00.--31. 1. "  CICOYSA1 ,1st Y frame start address for codec DMA"
 
 line.long 0x04 "CICOYSA2,2st Y frame start address for codec DMA"
  hexmask.long 0x04 00.--31. 1. "  CICOYSA2 ,2st Y frame start address for codec DMA"
 
 line.long 0x08 "CICOYSA3,3st Y frame start address for codec DMA"
  hexmask.long 0x08 00.--31. 1. "  CICOYSA3 ,3st Y frame start address for codec DMA"
 
 line.long 0x0c "CICOYSA4,4st Y frame start address for codec DMA"
  hexmask.long 0x0c 00.--31. 1. "  CICOYSA4 ,4st Y frame start address for codec DMA"
  textline ">CICOYSA: Y frame start address for codec DMA"

group 0x28++0x0f "CB START ADDRESS REGISTER"
 line.long 0x00 "CICOCBSA1,1st Cb frame start address for codec DMA"
  hexmask.long 0x00 00.--31. 1. "  CICOCBSA1 ,1st Cb frame start address for codec DMA"
 
 line.long 0x04 "CICOCBSA2,2st Cb frame start address for codec DMA"
  hexmask.long 0x04 00.--31. 1. "  CICOCBSA2 ,2st Cb frame start address for codec DMA"
 
 line.long 0x08 "CICOCBSA3,3st Cb frame start address for codec DMA"
  hexmask.long 0x08 00.--31. 1. "  CICOCBSA3 ,3st Cb frame start address for codec DMA"
 
 line.long 0x0c "CICOCBSA4,4st Cb frame start address for codec DMA"
  hexmask.long 0x0c 00.--31. 1. "  CICOCBSA4 ,4st Cb frame start address for codec DMA"
  textline ">CICOCBSA: Cb frame start address for codec DMA"

group 0x38++0x0f "CR START ADDRESS REGISTER"
 line.long 0x00 "CICOCRSA1,1st CR frame start address for codec DMA"
  hexmask.long 0x00 00.--31. 1. "  CICOCRSA1 ,1st Cr frame start address for codec DMA"
 
 line.long 0x04 "CICOCRSA2,2st CR frame start address for codec DMA"
  hexmask.long 0x04 00.--31. 1. "  CICOCRSA2 ,2st Cr frame start address for codec DMA"
 
 line.long 0x08 "CICOCRSA3,3st CR frame start address for codec DMA"
  hexmask.long 0x08 00.--31. 1. "  CICOCRSA3 ,3st Cr frame start address for codec DMA"
 
 line.long 0x0c "CICOCRSA4,4st CR frame start address for codec DMA"
  hexmask.long 0x0c 00.--31. 1. "  CICOCRSA4 ,4st Cr frame start address for codec DMA"
  textline ">CICOCRSA: Cr frame start address for codec DMA"

group 0x48++0x03 "CODEC TARGET FORMAT REGISTER"
 line.long 0x00 "CICTRGFMT,Target image format of codec DMA"
  bitfld.long 0x00 31. "  In422_Co ,YCbCr 4:2:2 codec scaler input image format./YCbCr 4:2:0 codec scaler input image format." "YCbCr 4:2:0,YCbCr 4:2:2" 
  bitfld.long 0x00 30. "  Out422_Co ,YCbCr 4:2:2 codec scaler output image format. This mode is mainly for S/W JPEG./YCbCr 4:2:0 codec scaler output image format. " "YCbCr 4:2:0,YCbCr 4:2:2"
  hexmask.long 0x00 16.--28. 1. "  TargetHsize_Co ,Horizontal pixel number of target image for codec DMA (16’smultipl)"
  bitfld.long 0x00 14.--15. "  FlipMd_Co ,Image mirror and rotation for codec DMA" "Normal,X-axis mirror,Y-axis mirror,180rotation"
  hexmask.long 0x00 00.--12. 1. " TargetVsize_Co ,Vertical pixel number of target image for codec DMA (must be 16’s multiple for JPEG DCT.)"
  textline ""
  textline ">CICOTRGFMT      :Target image format of codec DMA"
  textline "  In422_Co       :YCbCr 4:2:2 codec scaler input image format."
  textline "  Out422_Co      :YCbCr 4:2:2 codec scaler output image format."
  textline "  TargetHsize_Co :Horizontal pixel number of target image for codec DMA (16’smultipl)"
  textline "  FlipMd_Co      :Image mirror and rotation for codec DMA"
  textline "  TargetVsize_Co :Vertical pixel number of target image for codec DMA (must be 16’s multiple for JPEG DCT.)"
  textline ""

group 0x4C++0x03 "CODEC DMA CONTROL REGISTER"
 line.long 0x00 "CICOCTRL,Codec DMA control"
  hexmask.long 0x00 19.--23. 1. "  Yburst1_Co ,Main burst length for codec Y frames"
  hexmask.long 0x00 14.--18. 1. "  Yburst2_Co ,Remained burst length for codec Y frames"
  hexmask.long 0x00 09.--13. 1. "  Cburst1_Co ,Main burst length for codec Cb/Cr frames"
  hexmask.long 0x00 04.--08. 1. "  Cburst2_Co ,Remained burst length for codec Cb/Cr frames"
  bitfld.long 0x00 02. "  LastIRQEn_Co ,Enable last IRQ at the end of frame capture (It is recommended to check the done signal of capturing image for JPEG.)/Normal" "Normal,Ena"
  textline ""
  textline "All burst lengthes should be one of the 2,4,8,16."
  textline "   Example 1. Target image size: QCIF (horizontal Y width = 176) 176 / 4 = 44 word. 44 % 8 = 4 ? main burst = 8 remained burst = 4"
  textline "   Example 2. Target image size: VGA (horizontal Y width = 640) 640 / 4 = 160 word. 160 % 16 = 0 ? main burst = 16 remained burst = 16"
  textline "   Example 3. Target image size: QCIF (horizontal C width = 88) 88 / 4 = 22 word. 22 % 4 = 2 ? main burst = 4 remained burst = 2 (HTRANS==INCR)" 
  textline ""
  textline ">CICOCTRL    :Codec DMA control"
  textline "  Yburst1_Co :Main burst length for codec Y frames"
  textline "  Yburst2_Co :Remained burst length for codec Y frames"
  textline "  Cburst1_Co :Main burst length for codec Cb/Cr frames"
  textline "  Cburst2_Co :Remained burst length for codec Cb/Cr frames"
  textline ""

group 0x50++0x07 "CODEC PRE-SCALER CONTROL REGISTER"
 line.long 0x00 "CICRATIO,Codec pre-scaler ratio control"
  hexmask.long 0x00 28.--31. 1. "  SHfactor_Co ,Shift factor for codec pre-scaler"
  hexmask.long 0x00 16.--22. 1. "  Yburst2_Co  ,Horizontal ratio of codec pre-scaler"
  hexmask.long 0x00 00.--06. 1. "  Cburst1_Co ,Vertical ratio of codec pre-scaler"
  
 line.long 0x04 "CICOSCDST,Codec pre-scaler destination format"
  hexmask.long 0x04 16.--27. 1. "  PDWidth_Co  ,Destination width for codec pre-scaler"
  hexmask.long 0x04 00.--11. 1. "  PDHeight_Co ,Destination height for codec pre-scaler"
  textline ""
  textline ">CICRATIO     :Codec pre-scaler ratio control"
  textline "  SHfactor_Co :Shift factor for codec pre-scaler"
  textline "  Yburst2_Co  :Horizontal ratio of codec pre-scaler"
  textline "  Cburst1_Co  :Vertical ratio of codec pre-scaler"
  textline ""
  textline ">CICOSCDST    :Codec pre-scaler destination format"
  textline "  PDWidth_Co  :Destination width for codec pre-scaler"
  textline "  PDHeight_Co :Destination height for codec pre-scaler"
  textline ""

group 0x58++0x03 "CODEC MAIN-SCALER CONTROL REGISTER"
 line.long 0x00 "CICSCCTRL,Codec main-scaler control"
  bitfld.long 0x00 31. "  ScalerBypass_Co , Codec scaler bypass for upper 2048 x 2048 size (In this casevImgCptEn_CoSC and ImgCptEn_PrSC should be 0. but ImgCptEn should be 1." "ImgCptEn_PrSC,ImgCptEn" 
  bitfld.long 0x00 29.--30. "  ScaleUpDown_Co ,Scale up/down flag for codec scaler(In 1:1 scale ratio this bit should be 1)" "Down,-,-,UP"
  hexmask.long 0x00 16.--24. 1. "  MainHorRatio_Co ,Horizontal scale ratio for codec main-scaler"
  bitfld.long 0x00 15. "  CoScalerStart , Codec scaler start" "0,1"
  hexmask.long 0x00 00.--08. 1. "  MainVerRatio_Co ,Vertical scale ratio for codec main-scaler"
  textline ""
  textline ">CICOSCCTRL       :Codec main-scaler control"
  textline "  ScalerBypass_Co :Codec scaler bypass for upper 2048 x 2048 size"
  textline "  ScaleUpDown_Co  :Scale up/down flag for codec scaler"
  textline "  MainHorRatio_Co :Horizontal scale ratio for codec main-scaler"
  textline "  CoScalerStart   :Codec scaler start"
  textline "  MainVerRatio_Co :Vertical scale ratio for codec main-scaler"
  textline ""

group 0x5c++0x03 "CODEC DMA TARGET AREA REGISTER"
 line.long 0x00 "CICOTAREA ,Codec pre-scaler destination format"
  hexmask.long 0x00 00.--25. 1. "  CICOTAREA ,Target area for codec DMA = Target H size x Target V size"
  textline ">CICOTAREA: Codec pre-scaler destination format"
  textline ""

group 0x64++0x03 "CODEC STATUS REGISTER"
 line.long 0x00 "CICSTATUS,Codec path status"
  bitfld.long 0x00 31. "  OvFiY_Co ,Overflow state of codec FIFO Y" "0,1" 
  bitfld.long 0x00 30. "        OvFiCb_Co ,Overflow state of codec FIFO Cb" "0,1"
  bitfld.long 0x00 29. "      OvFiCr_Co ,Overflow state of codec FIFO Cr" "0,1"
  bitfld.long 0x00 28. "  VSYNC ,Camera VSYNC (This bit can be referred by CPU for first SFR setting after external camera muxing. And it can be seen in the ITU-R BT 656 mode)" "Field,Blank"
  hexmask.long 0x00 26.--27. 1. "  FrameCnt_Co ,Frame count of codec DMA (This counter value means the next frame number)"
  bitfld.long 0x00 25. "  WinOfstEn_Co ,Window offset enable status" "0,1"
  hexmask.long 0x00 23.--24. 1. "  FlipMd_Co ,Flip mode of codec DMA"
  textline "                           "
  bitfld.long 0x00 22. "  ImgCptEn_CamIf ,Image capture enable of camera interface" "0,1"
  bitfld.long 0x00 21. "  ImgCptEn_CoSC ,Image capture enable of codec path" "0,1"

  textline ""
  textline ">CICOSTATUS      :Codec path status"
  textline "  OvFiY_Co       :Overflow state of codec FIFO Y"
  textline "  OvFiCb_Co      :Overflow state of codec FIFO Cb"
  textline "  OvFiCr_Co      :Overflow state of codec FIFO Cr"
  textline "  VSYNC          :Camera VSYNC"
  textline "  FrameCnt_Co    :Frame count of codec DMA"
  textline "  WinOfstEn_Co   :Window offset enable status"
  textline "  FlipMd_Co      :Flip mode of codec DMA"
  textline "  ImgCptEn_CamIf :Image capture enable of camera interface"
  textline "  ImgCptEn_CoSC  :Image capture enable of codec path"
  textline "  VSYNC_E        :Status of signal level of XciVSYNC"
  textline ""

group 0x6c++0x0f "RGB START ADDRESS REGISTER"
 line.long 0x00 "CIPCLRSA1,1st RGB frame start address for preview DMA"
  hexmask.long 0x00 00.--31. 1. "  CIPRCLRSA1 ,1st RGB frame start address for preview DMA"
 
 line.long 0x04 "CIPCLRSA2,2st RGB frame start address for preview DMA"
  hexmask.long 0x04 00.--31. 1. "  CIPRCLRSA2 ,2st RGB frame start address for preview DMA"
 
 line.long 0x08 "CIPCLRSA3,3st RGB frame start address for preview DMA"
  hexmask.long 0x08 00.--31. 1. "  CIPRCLRSA3 ,3st RGB frame start address for preview DMA"
 
 line.long 0x0c "CIPCLRSA4,4st RGB frame start address for preview DMA"
  hexmask.long 0x0c 00.--31. 1. "  CIPRCLRSA4 ,4st RGB frame start address for preview DMA"
  textline ">CIPRCLRSA: RGB frame start address for preview DMA"

group 0x7c++0x03 "PREVIEW TARGET FORMAT REGISTER"
 line.long 0x00 "CIRTRGFMT,Target image format of preview DMA"
  hexmask.long 0x00 16.--28. 1. "  TargetHsize_Pr ,Horizontal pixel number of target image for preview DMA .16bpp RGB = 4n(n=1 2 3  …) 24bpp RGB = 2n(n=1 2 3  …)" 
  bitfld.long 0x00 14.--15. "  FlipMd_Pr ,Image mirror and rotation for preview DMA" "Normal,x-axis mirror,y-axis mirror,180rotation"
  hexmask.long 0x00 00.--12. 1. "  TargetVsize_Pr ,Vertical pixel number of target image for preview DMA"
  textline ""
  textline ">CIPRTRGFMT      :PREVIEW TARGET FORMAT REGISTER"
  textline "  TargetHsize_Pr :Horizontal pixel number of target image for preview DMA ."
  textline "  FlipMd_Pr      :Image mirror and rotation for preview DMA"
  textline "  TargetVsize_Pr :Vertical pixel number of target image for preview DMA"

group 0x80++0x03 "PREVIEW DMA CONTROL REGISTER"
 line.long 0x00 "CIPRCTRL,Preview DMA control related"
  hexmask.long 0x00 19.--23. 1. "  RGBburst1_Pr ,Main burst length for preview RGB frames"
  hexmask.long 0x00 14.--18. 1. "  RGBburst2_Pr ,Remained burst length for preview RGB frames"
  bitfld.long 0x00 02. "  LastIRQEn_Pr ,Enable last IRQ at the end of frame capture./Normal" "Normal,Ena"
  textline ""
  textline ">CIPRCTRL      :Preview DMA control related"
  textline "  RGBburst1_Pr :Main burst length for preview RGB frames"
  textline "  RGBburst2_Pr :Remained burst length for preview RGB frames"
  textline "  LastIRQEn_Pr :Enable last IRQ at the end of frame capture./Normal"
  textline ""
  textline "All burst lengths must be one of the 2, 4, 8, 16."
  textline "   Example 1. Target image size : QCIF for RGB 32-bit format (horizontal width = 176 pixels. 1 pixel = 1 word)" 
  textline "                                  176 pixel = 176 word. 176 % 16 = 0 ? main burst = 16 remained burst = 16 remained burst = 4"
  textline "   Example 2. Target image size : VGA for RGB 16-bit format (horizontal width = 640 pixels. 2 pixel = 1 word)" 
  textline "                                  640 / 2 = 320 word. 160 % 16 = 0 ? main burst = 16 remained burst = 16"
  textline "Note: Preview path contains 640 pixel line buffer.(Codec path contains 2048 pixel line buffer)" 
  textline "      So upper 1280 pixels input images must be pre-scaled by over 1/2 for capturing valid preview image." 
  
group 0x84++0x07 "PREVIEW PRE-SCALER CONTROL REGISTER"
 line.long 0x00 "  CPRSATIO,Preview pre-scaler ratio control"
  hexmask.long 0x00 28.--31. 1. "  SHfactor_Pr    ,Shift factor for preview pre-scaler"
  hexmask.long 0x00 16.--22. 1. "   PreHorRatio_Pr  ,Horizontal ratio of preview pre-scaler"
  hexmask.long 0x00 00.--06. 1. "  PreVerRatio_Pr ,Vertical ratio of preview pre-scaler"
 
 line.long 0x04 "CIRSCDST,Preview pre-scaler destination format"
  hexmask.long 0x04 16.--27. 1. "  PreDstWidth_Pr ,Destination width for codec pre-scaler"
  hexmask.long 0x04 00.--11. 1. "   PreDstHeight_Pr ,Destination height for preview pre-scaler"
  textline ""
  textline ">CIPRSATIO       :Preview pre-scaler ratio control"
  textline "  SHfactor_Pr    :Shift factor for preview pre-scaler"
  textline "  PreHorRatio_Pr :Horizontal ratio of preview pre-scaler"
  textline "  PreVerRatio_Pr :Vertical ratio of preview pre-scaler"
  textline ""
  textline ">CIPRSCDST       :Preview pre-scaler destination format"
  textline "  PreDstWidth_Pr :Destination width for codec pre-scaler"
  textline "  PreDstHeight_Pr:Destination height for preview pre-scaler"

group 0x8c++0x03 "PREVIEW MAIN-SCALER CONTROL REGISTER"
 line.long 0x00 "CIRSCCTRL,Preview main-scaler control"
  bitfld.long 0x00 31. "  Sample_Pr , Sampling method for format conversion. (normally 1)" "ImgCptEn_PrSC,ImgCptEn" 
  bitfld.long 0x00 30. "  RGBformat_Pr , " "24-bit RGB,16-bit RGB"
  bitfld.long 0x00 28.--29. "  ScaleUpDown_Co ,Scale up/down flag for preview scaler(In 1:1 scale ratio this bit should be “1)" "Down,-,-,UP"
  hexmask.long 0x00 16.--24. 1. "  MainHorRatio_Pr ,Horizontal scale ratio for preview main-scaler"
  bitfld.long 0x00 15. "  PrScalerStart , Preview scaler start" "0,1"
  textline "                     "
  hexmask.long 0x00 00.--08. 1. "  MainVerRatio_Pr ,Vertical scale ratio for preview main-scaler"
  textline ""
  textline ">CIPRSCCTRL      :Preview main-scaler control"
  textline "  Sample_Pr      :Sampling method for format conversion."
  textline "  RGBformat_Pr   :24-bit RGB 16-bit RGB"
  textline "  ScaleUpDown_Co :Scale up/down flag for preview scaler"
  textline "  MainHorRatio_Pr:Horizontal scale ratio for preview main-scaler"
  textline "  PrScalerStart  :Preview scaler start"
  textline "  MainVerRatio_Pr:Vertical scale ratio for preview main-scaler"
  textline ""
  
group 0x90++0x03 "PREVIEW DMA TARGET AREA REGISTER"
 line.long 0x00 "CIRTAREA,Preview pre-scaler destination format"
  hexmask.long 0x00 00.--25. 1. "  CIPRTAREA ,Target area for codec DMA = Target H size x Target V size"
  textline ">CIPRTAREA: Preview pre-scaler destination format"
  textline ""


group 0x98++0x03 "PREVIEW STATUS REGISTER"
 line.long 0x00 "CPRSTATUS,Preview path status"
  bitfld.long 0x00 31. "  OvFiCb_Pr ,Overflow state of preview FIFO Cb" "0,1" 
  bitfld.long 0x00 30. "  OvFiCr_Pr ,Overflow state of preview FIFO Cr" "0,1"
  hexmask.long 0x00 26.--27. 1. "  FrameCnt_Pr ,Frame count of preview DMA"
  hexmask.long 0x00 23.--24. 1. "  FlipMd_Pr ,Flip mode of preview DMA"
  bitfld.long 0x00 21. "  ImgCptEn_PrSC ,Image capture enable of preview path" "0,1"
  textline ""
  textline ">CIPRSTATUS    :Preview path status"
  textline "  OvFiCb_Pr    :Overflow state of preview FIFO Cb"
  textline "  OvFiCr_Pr    :Overflow state of preview FIFO Cr"
  textline "  FrameCnt_Pr  :Frame count of preview DMA"
  textline "  FlipMd_Pr    :Flip mode of preview DMA"
  textline "  ImgCptEn_PrSC:Image capture enable of preview path"
  textline ""

group 0xa0++0x03 "IMAGE CAPTURE ENABLE REGISTER"
 line.long 0x00 "CIIMGCPT,Image capture enable command"
  bitfld.long 0x00 31. "  ImgCptEn ,camera interface global capture enable" "0,1" 
  bitfld.long 0x00 30. "  ImgCptEn_CoSc ,capture enable for codec scaler. This bit must be zero in scaler-bypass mode." "0,1"
  bitfld.long 0x00 29. "  ImgCptEn_PrSc ,capture enable for preview scaler. This bit must be zero in scaler-bypass mode." "0,1"
  textline ""
  textline ">CIIMGCPT       :Image capture enable command"
  textline "  ImgCptEn      :camera interface global capture enable"
  textline "  ImgCptEn_CoSc :capture enable for codec scaler. This bit must be zero in scaler-bypass mode."
  textline "  ImgCptEn_PrSc :capture enable for preview scaler. This bit must be zero in scaler-bypass mode."
  textline ""
  textline "NOTE: This register must be set at last."

tree.end

tree "21 AC97 CONTROLLER"

base 0x5B000000
group 0x00++0x03
 line.long 0x00 "AC_GLBCTL,AC97 global control register"
 bitfld.long 0x00 22. "  Codec ready      ,Codec ready interrupt enable" "Disable,Enable"
 bitfld.long 0x00 21. "  PCM underrun     ,PCM out channel underrun interrupt enable" "Disable,Enable"
 bitfld.long 0x00 20. "  PCM overrun      ,PCM in channel overrun interrupt enable" "Disable,Enable"
 bitfld.long 0x00 19. "  MIC overrun      ,MIC in channel overrun interrupt enable" "Disable,Enable"
 textline "                   "
 bitfld.long 0x00 18. "  PCM out threshold,PCM out channel threshold interrupt enable" "Disable,Enable"
 bitfld.long 0x00 17. "  PCM in threshold ,PCM in channel threshold interrupt enable" "Disable,Enable"
 bitfld.long 0x00 16. "  MIC in threshold ,MIC in channel threshold interrupt enable" "Disable,Enable"
 bitfld.long 0x00 12.--13 "  P out channel    ,PCM out channel transfer mode" "Off,PIO,DMA,Res"
 textline "                   "
 bitfld.long 0x00 10.--11. "  PCM in channel   ,PCM in channel transfer mode" "Off,PIO,DMA,Res"
 bitfld.long 0x00 08.--09. "      MIC in channel   ,MIC in channel transfer mode" "Off,PIO,DMA,Res"
 bitfld.long 0x00 03. "      Transfer data    ,Transfer data enable using AC-link" "Disable,Enable"
 bitfld.long 0x00 02. "  AC-link on       ,AC-link on" "Off,SYNC signal transfer to Codec"
 textline "                   "
 bitfld.long 0x00 01. "  Warm reset       ,Warm reset" "Normal,Wake up codec from power down"
 bitfld.long 0x00 00. "      Cold reset       ,Cold reset" "Normal,Reset Codec and Controller logic"
 textline ""

group 0x04++0x03
 line.long 0x00 "AC_GLBSTT,AC97 global status register"
 bitfld.long 0x00 22. "  Codec ready       ,Codec ready interrupt enable" "Not requested,Requested"
 bitfld.long 0x00 21. " PCM underrun     ,PCM out channel underrun interrupt enable" "Not requested,Requested"
 bitfld.long 0x00 20. " PCM overrun      ,PCM in channel overrun interrupt enable" "Not requested,Requested"
 bitfld.long 0x00 19. " MIC overrun  ,MIC in channel overrun interrupt enable" "Not requested,Requested"
 textline "                   "
 bitfld.long 0x00 18. "  PCM out threshold ,PCM out channel threshold interrupt enable" "Not requested,Requested"
 bitfld.long 0x00 17. " PCM in threshold ,PCM in channel threshold interrupt enable" "Not requested,Requested"
 bitfld.long 0x00 16. " MIC in threshold   ,MIC in channel threshold interrupt enable" "Disable,Enable"
 bitfld.long 0x00 00.--02. "     Controller main state ,Controller main state" "Idle,Init,Ready,Active,Lp,Warm,-,-"
 textline ""
 textline ">AC_GLBCTL/ST      :AC_GLBCTL,AC97 global control register"
 textline "  Codec ready      :Codec ready interrupt enable"
 textline "  PCM underrun     :PCM out channel underrun interrupt enable"
 textline "  PCM overrun      :PCM in channel overrun interrupt enable"
 textline "  MIC overrun      :MIC in channel overrun interrupt enable"
 textline "  PCM out threshold:PCM out channel threshold interrupt enable"
 textline "  PCM in threshold :PCM in channel threshold interrupt enable"
 textline "  MIC in threshold :MIC in channel threshold interrupt enable"
 textline "  P out channel    :PCM out channel transfer mode"
 textline "  PCM in channel   :PCM in channel transfer mode"
 textline "  MIC in channel   :MIC in channel transfer mode"
 textline "  Transfer data    :Transfer data enable using AC-link"
 textline "  AC-link on       :AC-link on" 
 textline "  Warm reset       :Warm reset" 
 textline "  Cold reset       :Cold reset" 
 textline ""

group 0x08++0x03
 line.long 0x00 "AC_CODCMD,AC97 codec command register"
 bitfld.long 0x00 23. "  Read enable ,Read enable" "Command write,Status read"
 hexmask.long 0x00 16.--22. 1. "  Address         ,Codec command address" 
 hexmask.long 0x00 00.--15. 1. "  Data              ,Codec command data"
 
group 0x0c++0x03
 line.long 0x00 "AC_ODECST, AC97 codec status register"
 hexmask.long 0x00 23.--31. 1. "  Address          , Codec status address"
 hexmask.long 0x00 16.--22. 1. "  Address         , Codec status address" 
 hexmask.long 0x00 00.--15. 1. "  Data              , Codec status data"
 
group 0x10++0x03
 line.long 0x00 "AC_PCMADR,AC97 PCM Out/In channel FIFO address register"
 hexmask.long 0x00 24.--27. 1. "  Out read address ,PCM out channel FIFO read address" 
 hexmask.long 0x00 16.--19. 1. "  In read address ,PCM in channel FIFO read address"
 hexmask.long 0x00 08.--11. 1. "  Out write address ,PCM out channel FIFO write address"
 hexmask.long 0x00 00.--03. 1. "  In write address ,PCM in channel FIFO write address"
 

group 0x14++0x03
 line.long 0x00 "AC_MICADR,AC97 MIC In channel FIFO address register"
 hexmask.long 0x00 16.--19. 1. "  Read address     ,MIC in channel FIFO read address" 
 hexmask.long 0x00 00.--03. 1. "  Write address   ,MIC in channel FIFO write address"
 

group 0x18++0x03
 line.long 0x00 "AC_PCDATA,AC97 PCM Out/In channel FIFO data register"
 hexmask.long 0x00 16.--31. 1. "  Left data        ,PCM Out/In left channel FIFO data. Read =  CM in left channel. Write = PCM out left channel" 
 hexmask.long 0x00 00.--05. 1. "  Right data      ,PCM Out/In right channel FIFO data. Read = PCM in right channel. Write = PCM out right channel"
 

group 0x1c++0x03
 line.long 0x00 "AC_MIDATA,AC97 MIC In channel FIFO data register"
 hexmask.long 0x00 00.--15. 1. "  Mono data        ,MIC in mono channel FIFO data. "
 textline ""
 textline ">AC_CODCMD/ODECST: AC97 codec command register"
 textline "  Read enable    : Read enable"
 textline "  Address        : Codec command address"
 textline "  Data           : Codec command data"
 textline ""
 textline ">AC_PCMADR         : AC97 PCM Out/In channel FIFO address register"
 textline "  Out read address : PCM out channel FIFO read address"
 textline "  In read address  : PCM in channel FIFO read address"
 textline "  Out write address: PCM out channel FIFO write address"
 textline "  In write address : PCM in channel FIFO write address"
 textline ""
 textline ">AC_MICADR     : AC97 MIC In channel FIFO address register"
 textline "  Read address : MIC in channel FIFO read address"
 textline "  Write address: MIC in channel FIFO write address"
 textline ""
 textline ">AC_PCDATA  : AC97 PCM Out/In channel FIFO data register"
 textline "  Left data : PCM Out/In left channel FIFO data."
 textline "  Right data: PCM Out/In right channel FIFO data."
 textline ""
 textline ">AC_MIDATA  : AC97 PCM Out/In channel FIFO data register"
 textline "  Mono data : MIC in mono channel FIFO data."
 textline ""
tree.end
;===================================================================================
tree.end
;===================================================================================












